# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <victor.levieux@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-01 02:27-0500\n"
"PO-Revision-Date: 2021-07-01 03:39-0500\n"
"Language-Team: fr_FR <victor.levieux@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: Victor LEVIEUX <victor.levieux@gmail.com>\n"
"Language: fr\n"
"X-Generator: Poedit 3.0\n"

#: ../../quickstart.rst:2
msgid "Quickstart"
msgstr "Bien débuter"

#: ../../quickstart.rst:4
msgid ""
"Eager to get started? This page gives a good introduction to Flask. Follow :doc:"
"`installation` to set up a project and install Flask first."
msgstr ""
"Vous avez hâte de commencer ? Cette page donne une bonne introduction à Flask. "
"Suivez :doc:`installation` pour mettre en place un projet et installer Flask."

#: ../../quickstart.rst:9
msgid "A Minimal Application"
msgstr "Une application minimale"

#: ../../quickstart.rst:11
msgid "A minimal Flask application looks something like this:"
msgstr "Une application Flask minimale ressemble à quelque chose comme ceci :"

#: ../../quickstart.rst:23
msgid "So what did that code do?"
msgstr "Alors, que fait ce code ?"

#: ../../quickstart.rst:25
msgid ""
"First we imported the :class:`~flask.Flask` class. An instance of this class "
"will be our WSGI application."
msgstr ""
"D'abord nous avons importé la classe :class:`~flask.Flask`. Une instance de "
"cette classe sera notre application WSGI."

#: ../../quickstart.rst:27
msgid ""
"Next we create an instance of this class. The first argument is the name of the "
"application's module or package. ``__name__`` is a convenient shortcut for this "
"that is appropriate for most cases. This is needed so that Flask knows where to "
"look for resources such as templates and static files."
msgstr ""
"Ensuite, nous créons une instance de cette classe. Le premier argument est le "
"nom du module ou du paquet de l'application. ``__name__`` est un raccourci "
"pratique qui est approprié pour la plupart des cas. Ceci est nécessaire pour que "
"Flask sache où chercher les ressources telles que les modèles et les fichiers "
"statiques."

#: ../../quickstart.rst:32
msgid ""
"We then use the :meth:`~flask.Flask.route` decorator to tell Flask what URL "
"should trigger our function."
msgstr ""
"Nous utilisons ensuite le décorateur :meth:`~flask.Flask.route` pour indiquer à "
"Flask quelle URL doit déclencher notre fonction."

#: ../../quickstart.rst:34
msgid ""
"The function returns the message we want to display in the user's browser. The "
"default content type is HTML, so HTML in the string will be rendered by the "
"browser."
msgstr ""
"Cette fonction renvoie le message que nous voulons afficher dans le navigateur "
"de l'utilisateur. Le type de contenu par défaut est du HTML, donc le HTML dans "
"la chaîne de caractères sera rendu par le navigateur."

#: ../../quickstart.rst:38
msgid ""
"Save it as :file:`hello.py` or something similar. Make sure to not call your "
"application :file:`flask.py` because this would conflict with Flask itself."
msgstr ""
"Enregistrez-le sous le nom de :file:`hello.py` ou quelque chose de similaire. "
"Veillez à ne pas appeler votre application :file:`flask.py` car cela entrerait "
"en conflit avec Flask lui-même."

#: ../../quickstart.rst:42
msgid ""
"To run the application, use the :command:`flask` command or :command:`python -m "
"flask`. Before you can do that you need to tell your terminal the application to "
"work with by exporting the ``FLASK_APP`` environment variable:"
msgstr ""
"Pour démarrer l'application, utilisez la commande :command:`flask` ou :command:"
"`python -m flask`. Avant de faire cela, vous devez indiquer à votre terminal "
"l'application avec laquelle travailler en exportant la variable d'environnement "
"``FLASK_APP`` :"

#: ../../quickstart.rst:49 ../../quickstart.rst:157
msgid "Bash"
msgstr "Bash"

#: ../../quickstart.rst:57 ../../quickstart.rst:164
msgid "CMD"
msgstr "CMD"

#: ../../quickstart.rst:65 ../../quickstart.rst:171
msgid "Powershell"
msgstr "PowerShell"

#: ../../quickstart.rst:73
msgid "Application Discovery Behavior"
msgstr "Détection automatique de l'application"

#: ../../quickstart.rst:75
msgid ""
"As a shortcut, if the file is named ``app.py`` or ``wsgi.py``, you don't have to "
"set the ``FLASK_APP`` environment variable. See :doc:`/cli` for more details."
msgstr ""
"Si le fichier est nommé ``app.py`` ou ``wsgi.py``, vous n'avez pas besoin de "
"définir la variable d'environnement ``FLASK_APP``. Voir :doc:`/cli` pour plus de "
"détails."

#: ../../quickstart.rst:79
msgid ""
"This launches a very simple builtin server, which is good enough for testing but "
"probably not what you want to use in production. For deployment options see :doc:"
"`deploying/index`."
msgstr ""
"Ceci lance un serveur intégré très simple, qui est suffisant pour les tests mais "
"probablement pas ce que vous voulez utiliser en production. Pour les options de "
"déploiement, voir :doc:`deploying/index`."

#: ../../quickstart.rst:83
msgid ""
"Now head over to http://127.0.0.1:5000/, and you should see your hello world "
"greeting."
msgstr ""
"Maintenant, allez sur http://127.0.0.1:5000/, et vous devriez voir votre message "
"d'accueil \"Hello, World!\"."

#: ../../quickstart.rst:88
msgid "Externally Visible Server"
msgstr "Serveur visible de l'extérieur"

#: ../../quickstart.rst:90
msgid ""
"If you run the server you will notice that the server is only accessible from "
"your own computer, not from any other in the network.  This is the default "
"because in debugging mode a user of the application can execute arbitrary Python "
"code on your computer."
msgstr ""
"Si vous démarrez le serveur, vous remarquerez qu'il n'est accessible que depuis "
"votre propre ordinateur, et non depuis un autre ordinateur du réseau. Il s'agit "
"de la valeur par défaut car, en mode débogage, un utilisateur de l'application "
"peut exécuter un code Python arbitraire sur votre ordinateur."

#: ../../quickstart.rst:95
msgid ""
"If you have the debugger disabled or trust the users on your network, you can "
"make the server publicly available simply by adding ``--host=0.0.0.0`` to the "
"command line::"
msgstr ""
"Si vous avez désactivé le débogueur ou si vous faites confiance aux utilisateurs "
"de votre réseau, vous pouvez rendre le serveur accessible au public simplement "
"en ajoutant ``--host=0.0.0.0`` à la ligne de commande :"

#: ../../quickstart.rst:101
msgid "This tells your operating system to listen on all public IPs."
msgstr ""
"Cela indique à votre système d'exploitation d'écouter sur toutes les adresses IP "
"publiques."

#: ../../quickstart.rst:105
msgid "What to do if the Server does not Start"
msgstr "Que faire si le serveur ne démarre pas"

#: ../../quickstart.rst:107
msgid ""
"In case the :command:`python -m flask` fails or :command:`flask` does not exist, "
"there are multiple reasons this might be the case. First of all you need to look "
"at the error message."
msgstr ""
"Si la commande :command:`python -m flask` échoue ou si la commande :command:"
"`flask` n'existe pas, il y a plusieurs raisons pour lesquelles cela peut être le "
"cas. Tout d'abord, vous devez examiner le message d'erreur."

#: ../../quickstart.rst:112
msgid "Old Version of Flask"
msgstr "Ancienne version de Flask"

#: ../../quickstart.rst:114
msgid ""
"Versions of Flask older than 0.11 used to have different ways to start the "
"application.  In short, the :command:`flask` command did not exist, and neither "
"did :command:`python -m flask`.  In that case you have two options: either "
"upgrade to newer Flask versions or have a look at :doc:`/server` to see the "
"alternative method for running a server."
msgstr ""
"Les versions de Flask antérieures à la 0.11 avaient différentes façons de "
"démarrer l'application. En bref, la commande :command:`flask` n'existait pas, ni "
"la commande :command:`python -m flask`.  Dans ce cas, vous avez deux options : "
"soit vous mettez à jour vers des versions plus récentes de Flask, soit vous "
"jetez un coup d'oeil à :doc:`/server` pour voir la méthode alternative pour "
"faire tourner un serveur."

#: ../../quickstart.rst:121
msgid "Invalid Import Name"
msgstr "Nom d'importation non valide"

#: ../../quickstart.rst:123
msgid ""
"The ``FLASK_APP`` environment variable is the name of the module to import at :"
"command:`flask run`. In case that module is incorrectly named you will get an "
"import error upon start (or if debug is enabled when you navigate to the "
"application). It will tell you what it tried to import and why it failed."
msgstr ""
"La variable d'environnement ``FLASK_APP`` est le nom du module à importer dans :"
"command:`flask run`. Si ce module est mal nommé, vous obtiendrez une erreur "
"d'importation au démarrage (ou si le débogage est activé lorsque vous naviguez "
"dans l'application). Il vous dira ce qu'il a essayé d'importer et pourquoi il a "
"échoué."

#: ../../quickstart.rst:128
msgid ""
"The most common reason is a typo or because you did not actually create an "
"``app`` object."
msgstr ""
"La raison la plus courante est une faute de frappe ou le fait que vous n'ayez "
"pas réellement créé un objet \"application\"."

#: ../../quickstart.rst:133
msgid "Debug Mode"
msgstr "Mode débogage"

#: ../../quickstart.rst:135
msgid ""
"The ``flask run`` command can do more than just start the development server. By "
"enabling debug mode, the server will automatically reload if code changes, and "
"will show an interactive debugger in the browser if an error occurs during a "
"request."
msgstr ""
"La commande ``flask run`` peut faire plus que simplement démarrer le serveur de "
"développement. En activant le mode débogage, le serveur se rechargera "
"automatiquement si le code change, et affichera un débogueur interactif dans le "
"navigateur si une erreur se produit pendant une requête."

msgid "The interactive debugger in action."
msgstr "Le débogueur interactif en action."

#: ../../quickstart.rst:147
msgid ""
"The debugger allows executing arbitrary Python code from the browser. It is "
"protected by a pin, but still represents a major security risk. Do not run the "
"development server or debugger in a production environment."
msgstr ""
"Le débogueur permet d'exécuter du code Python arbitraire depuis le navigateur. "
"Il est protégé par un PIN, mais représente tout de même un risque de sécurité "
"important. N'exécutez pas le serveur de développement ou le débogueur dans un "
"environnement de production."

#: ../../quickstart.rst:152
msgid ""
"To enable all development features, set the ``FLASK_ENV`` environment variable "
"to ``development`` before calling ``flask run``."
msgstr ""
"Pour activer toutes les fonctionnalités de développement, définissez la variable "
"d'environnement ``FLASK_ENV`` à ``development`` avant d'appeler ``flask run``."

#: ../../quickstart.rst:178
msgid "See also:"
msgstr "Voir aussi:"

#: ../../quickstart.rst:180
msgid ""
":doc:`/server` and :doc:`/cli` for information about running in development mode."
msgstr ""
":doc:`/server` et :doc:`/cli` pour plus d'informations sur l'exécution en mode "
"développement."

#: ../../quickstart.rst:182
msgid ""
":doc:`/debugging` for information about using the built-in debugger and other "
"debuggers."
msgstr ""
":doc:`/debugging` pour plus d'informations sur l'utilisation du débogueur "
"intégré et d'autres débogueurs."

#: ../../quickstart.rst:184
msgid ""
":doc:`/logging` and :doc:`/errorhandling` to log errors and display nice error "
"pages."
msgstr ""
":doc:`/logging` et :doc:`/errorhandling` pour enregistrer les erreurs et "
"afficher de belles pages d'erreur."

#: ../../quickstart.rst:189
msgid "HTML Escaping"
msgstr "L'échappement HTML"

#: ../../quickstart.rst:191
msgid ""
"When returning HTML (the default response type in Flask), any user-provided "
"values rendered in the output must be escaped to protect from injection attacks. "
"HTML templates rendered with Jinja, introduced later, will do this automatically."
msgstr ""
"Lorsque vous renvoyez du HTML (le type de réponse par défaut dans Flask), toute "
"valeur fournie par l'utilisateur et rendue dans la réponse doit être échappée "
"pour se protéger des attaques par injection. Les modèles HTML rendus avec Jinja, "
"introduits plus tard, le feront automatiquement."

#: ../../quickstart.rst:196
msgid ""
":func:`~markupsafe.escape`, shown here, can be used manually. It is omitted in "
"most examples for brevity, but you should always be aware of how you're using "
"untrusted data."
msgstr ""
":func:`~markupsafe.escape`, montré ici, peut être utilisé manuellement. Il est "
"omis dans la plupart des exemples pour des raisons de brièveté, mais vous "
"devriez toujours être conscient de la façon dont vous utilisez les données non "
"fiables."

#: ../../quickstart.rst:208
msgid ""
"If a user managed to submit the name ``<script>alert(\"bad\")</script>``, "
"escaping causes it to be rendered as text, rather than running the script in the "
"user's browser."
msgstr ""
"Si un utilisateur a réussi à soumettre le nom ``<script>alert(\"bad\")</"
"script>``, l'échappement fait en sorte qu'il soit rendu comme du texte, plutôt "
"que d'exécuter le script dans le navigateur de l'utilisateur."

#: ../../quickstart.rst:212
msgid ""
"``<name>`` in the route captures a value from the URL and passes it to the view "
"function. These variable rules are explained below."
msgstr ""
"``<name>`` dans la route capture une valeur de l'URL et la passe à la fonction "
"de vue. Ces règles de variables sont expliquées ci-dessous."

#: ../../quickstart.rst:217
msgid "Routing"
msgstr "Routage"

#: ../../quickstart.rst:219
msgid ""
"Modern web applications use meaningful URLs to help users. Users are more likely "
"to like a page and come back if the page uses a meaningful URL they can remember "
"and use to directly visit a page."
msgstr ""
"Les applications web modernes utilisent des URL significatives pour aider les "
"utilisateurs. Les utilisateurs sont plus susceptibles d'aimer une page et de "
"revenir si la page utilise une URL significative qu'ils peuvent mémoriser et "
"utiliser pour visiter directement une page."

#: ../../quickstart.rst:223
msgid ""
"Use the :meth:`~flask.Flask.route` decorator to bind a function to a URL. ::"
msgstr ""
"Utilisez le décorateur :meth:`~flask.Flask.route` pour lier une fonction à une "
"URL :"

#: ../../quickstart.rst:233
msgid ""
"You can do more! You can make parts of the URL dynamic and attach multiple rules "
"to a function."
msgstr ""
"Vous pouvez faire plus ! Vous pouvez rendre certaines parties de l'URL "
"dynamiques et attacher plusieurs règles à une fonction."

#: ../../quickstart.rst:237
msgid "Variable Rules"
msgstr "Règles variables"

#: ../../quickstart.rst:239
msgid ""
"You can add variable sections to a URL by marking sections with "
"``<variable_name>``. Your function then receives the ``<variable_name>`` as a "
"keyword argument. Optionally, you can use a converter to specify the type of the "
"argument like ``<converter:variable_name>``. ::"
msgstr ""
"Vous pouvez ajouter des sections variables à une URL en marquant les sections "
"avec ``<variable_name>``. Votre fonction reçoit alors ``<variable_name>`` comme "
"un argument nommé. En option, vous pouvez utiliser un convertisseur pour "
"spécifier le type de l'argument comme ``<converter:variable_name>`` :"

#: ../../quickstart.rst:261
msgid "Converter types:"
msgstr "Types de convertisseurs :"

#: ../../quickstart.rst:264
msgid "``string``"
msgstr ""

#: ../../quickstart.rst:264
msgid "(default) accepts any text without a slash"
msgstr "(par défaut) accepte tout texte sans slash"

#: ../../quickstart.rst:265
msgid "``int``"
msgstr ""

#: ../../quickstart.rst:265
msgid "accepts positive integers"
msgstr "accepte les nombres entiers positifs"

#: ../../quickstart.rst:266
msgid "``float``"
msgstr ""

#: ../../quickstart.rst:266
msgid "accepts positive floating point values"
msgstr "accepte les valeurs positives à virgule flottante"

#: ../../quickstart.rst:267
msgid "``path``"
msgstr ""

#: ../../quickstart.rst:267
msgid "like ``string`` but also accepts slashes"
msgstr "comme ``string`` mais accepte aussi les slashs"

#: ../../quickstart.rst:268
msgid "``uuid``"
msgstr ""

#: ../../quickstart.rst:268
msgid "accepts UUID strings"
msgstr "accepte les chaînes UUID"

#: ../../quickstart.rst:273
msgid "Unique URLs / Redirection Behavior"
msgstr "URLs uniques / Comportement de redirection"

#: ../../quickstart.rst:275
msgid "The following two rules differ in their use of a trailing slash. ::"
msgstr ""
"Les deux règles suivantes diffèrent par l'utilisation d'une barre oblique de fin "
"de ligne :"

#: ../../quickstart.rst:285
msgid ""
"The canonical URL for the ``projects`` endpoint has a trailing slash. It's "
"similar to a folder in a file system. If you access the URL without a trailing "
"slash (``/projects``), Flask redirects you to the canonical URL with the "
"trailing slash (``/projects/``)."
msgstr ""
"L'URL canonique du point de terminaison ``projects`` comporte un slash de fin. "
"C'est similaire à un dossier dans un système de fichiers. Si vous accédez à "
"l'URL sans slash de fin (``/projets``), Flask vous redirige vers l'URL canonique "
"avec le slash de fin (``/projets/``)."

#: ../../quickstart.rst:290
msgid ""
"The canonical URL for the ``about`` endpoint does not have a trailing slash. "
"It's similar to the pathname of a file. Accessing the URL with a trailing slash "
"(``/about/``) produces a 404 \"Not Found\" error. This helps keep URLs unique "
"for these resources, which helps search engines avoid indexing the same page "
"twice."
msgstr ""
"L'URL canonique du point de terminaison ``about`` ne comporte pas de barre "
"oblique de fin de ligne. Elle est similaire au chemin d'accès d'un fichier. "
"L'accès à l'URL avec un slash de fin (``/about/``) produit une erreur 404 \"Not "
"Found\". Cela permet de conserver des URL uniques pour ces ressources, ce qui "
"aide les moteurs de recherche à ne pas indexer deux fois la même page."

#: ../../quickstart.rst:300
msgid "URL Building"
msgstr "Création d'URL"

#: ../../quickstart.rst:302
msgid ""
"To build a URL to a specific function, use the :func:`~flask.url_for` function. "
"It accepts the name of the function as its first argument and any number of "
"keyword arguments, each corresponding to a variable part of the URL rule. "
"Unknown variable parts are appended to the URL as query parameters."
msgstr ""
"Pour construire une URL vers une fonction spécifique, utilisez la fonction :func:"
"`~flask.url_for`. Elle accepte le nom de la fonction comme premier argument et "
"un nombre quelconque d'arguments nommés, chacun correspondant à une partie "
"variable de l'URL. Les parties variables inconnues sont ajoutées à l'URL comme "
"paramètres de requête."

#: ../../quickstart.rst:307
msgid ""
"Why would you want to build URLs using the URL reversing function :func:`~flask."
"url_for` instead of hard-coding them into your templates?"
msgstr ""
"Pourquoi voudriez-vous construire des URL en utilisant la fonction d'inversion "
"d'URL :func:`~flask.url_for` au lieu de les coder en dur dans vos modèles ?"

#: ../../quickstart.rst:310
msgid "Reversing is often more descriptive than hard-coding the URLs."
msgstr "L'inversion est souvent plus descriptive que le codage en dur des URL."

#: ../../quickstart.rst:311
msgid ""
"You can change your URLs in one go instead of needing to remember to manually "
"change hard-coded URLs."
msgstr ""
"Vous pouvez modifier vos URL en une seule fois au lieu de devoir vous souvenir "
"de modifier manuellement les URL codées en dur."

#: ../../quickstart.rst:313
msgid "URL building handles escaping of special characters transparently."
msgstr ""
"La construction d'URL gère l'échappement des caractères spéciaux de manière "
"transparente."

#: ../../quickstart.rst:314
msgid ""
"The generated paths are always absolute, avoiding unexpected behavior of "
"relative paths in browsers."
msgstr ""
"Les chemins générés sont toujours absolus, ce qui évite le comportement "
"inattendu des chemins relatifs dans les navigateurs."

#: ../../quickstart.rst:316
msgid ""
"If your application is placed outside the URL root, for example, in ``/"
"myapplication`` instead of ``/``, :func:`~flask.url_for` properly handles that "
"for you."
msgstr ""
"Si votre application est placée en dehors de la racine de l'URL, par exemple, "
"dans ``/myapplication`` au lieu de ``/``, :func:`~flask.url_for` gère cela "
"correctement pour vous."

#: ../../quickstart.rst:320
msgid ""
"For example, here we use the :meth:`~flask.Flask.test_request_context` method to "
"try out :func:`~flask.url_for`. :meth:`~flask.Flask.test_request_context` tells "
"Flask to behave as though it's handling a request even while we use a Python "
"shell. See :ref:`context-locals`."
msgstr ""
"Par exemple, ici nous utilisons la méthode :meth:`~flask.Flask."
"test_request_context` pour essayer :func:`~flask.url_for`. :meth:`~flask.Flask."
"test_request_context` indique à Flask de se comporter comme s'il traitait une "
"requête même si nous utilisons un shell Python. Voir :ref:`context-locals`."

#: ../../quickstart.rst:356
msgid "HTTP Methods"
msgstr "Méthodes HTTP"

#: ../../quickstart.rst:358
msgid ""
"Web applications use different HTTP methods when accessing URLs. You should "
"familiarize yourself with the HTTP methods as you work with Flask. By default, a "
"route only answers to ``GET`` requests. You can use the ``methods`` argument of "
"the :meth:`~flask.Flask.route` decorator to handle different HTTP methods. ::"
msgstr ""
"Les applications Web utilisent différentes méthodes HTTP pour accéder aux URL. "
"Vous devez vous familiariser avec les méthodes HTTP lorsque vous travaillez avec "
"Flask. Par défaut, une route ne répond qu'aux requêtes ``GET``. Vous pouvez "
"utiliser l'argument ``methods`` du décorateur :meth:`~flask.Flask.route` pour "
"gérer différentes méthodes HTTP. ::"

#: ../../quickstart.rst:373
msgid ""
"If ``GET`` is present, Flask automatically adds support for the ``HEAD`` method "
"and handles ``HEAD`` requests according to the `HTTP RFC`_. Likewise, "
"``OPTIONS`` is automatically implemented for you."
msgstr ""
"Si ``GET`` est présent, Flask ajoute automatiquement le support de la méthode "
"``HEAD`` et traite les requêtes ``HEAD`` selon la `HTTP RFC`_. De même, "
"``OPTIONS`` est automatiquement implémenté pour vous."

#: ../../quickstart.rst:380
msgid "Static Files"
msgstr "Fichiers statiques"

#: ../../quickstart.rst:382
msgid ""
"Dynamic web applications also need static files.  That's usually where the CSS "
"and JavaScript files are coming from.  Ideally your web server is configured to "
"serve them for you, but during development Flask can do that as well.  Just "
"create a folder called :file:`static` in your package or next to your module and "
"it will be available at ``/static`` on the application."
msgstr ""
"Les applications web dynamiques ont également besoin de fichiers statiques. "
"C'est généralement de là que proviennent les fichiers CSS et JavaScript. "
"Idéalement, votre serveur web est configuré pour les servir à votre place, mais "
"pendant le développement, Flask peut aussi le faire. Il suffit de créer un "
"dossier appelé :file:`static` dans votre pacquet ou à côté de votre module et il "
"sera disponible à ``/static`` sur l'application."

#: ../../quickstart.rst:388
msgid ""
"To generate URLs for static files, use the special ``'static'`` endpoint name::"
msgstr ""
"Pour générer des URL pour les fichiers statiques, utilisez le nom de point de "
"terminaison spécial ``'static'`` :"

#: ../../quickstart.rst:392
msgid "The file has to be stored on the filesystem as :file:`static/style.css`."
msgstr ""
"Le fichier doit être stocké sur le système de fichiers sous le nom de :file:"
"`static/style.css`."

#: ../../quickstart.rst:395
msgid "Rendering Templates"
msgstr "Modèles de rendu"

#: ../../quickstart.rst:397
msgid ""
"Generating HTML from within Python is not fun, and actually pretty cumbersome "
"because you have to do the HTML escaping on your own to keep the application "
"secure.  Because of that Flask configures the `Jinja2 <https://palletsprojects."
"com/p/jinja/>`_ template engine for you automatically."
msgstr ""
"Générer du HTML à partir de Python n'est pas amusant, et en fait assez "
"encombrant car vous devez faire l'échappement HTML par vous-même pour garder "
"l'application sécurisée. C'est pourquoi Flask configure automatiquement le "
"moteur de template `Jinja2 <https://palletsprojects.com/p/jinja/>`_ pour vous."

#: ../../quickstart.rst:402
msgid ""
"To render a template you can use the :func:`~flask.render_template` method.  All "
"you have to do is provide the name of the template and the variables you want to "
"pass to the template engine as keyword arguments. Here's a simple example of how "
"to render a template::"
msgstr ""
"Pour rendre un modèle, vous pouvez utiliser la méthode :func:`~flask."
"render_template`. Tout ce que vous avez à faire est de fournir le nom du modèle "
"et les variables que vous voulez passer au moteur de modèle comme arguments "
"nommés. Voici un exemple simple de la façon de rendre un modèle::"

#: ../../quickstart.rst:414
msgid ""
"Flask will look for templates in the :file:`templates` folder.  So if your "
"application is a module, this folder is next to that module, if it's a package "
"it's actually inside your package:"
msgstr ""
"Flask va chercher les modèles dans le dossier :file:`templates`.  Donc si votre "
"application est un module, ce dossier est à côté de ce module, si c'est un "
"paquet, il est en fait à l'intérieur de votre paquet:"

#: ../../quickstart.rst:418
msgid "**Case 1**: a module::"
msgstr "**Case 1** : un module::"

#: ../../quickstart.rst:424
msgid "**Case 2**: a package::"
msgstr "**Cas 2** : un paquet::"

#: ../../quickstart.rst:431
msgid ""
"For templates you can use the full power of Jinja2 templates.  Head over to the "
"official `Jinja2 Template Documentation <https://jinja.palletsprojects.com/"
"templates/>`_ for more information."
msgstr ""
"Pour les modèles, vous pouvez utiliser toute la puissance des modèles Jinja2.  "
"Rendez-vous sur le site officiel `Jinja2 Template Documentation <https://jinja."
"palletsprojects.com/templates/>`_ pour plus d'informations."

#: ../../quickstart.rst:435
msgid "Here is an example template:"
msgstr "Voici un exemple de modèle :"

#: ../../quickstart.rst:447
msgid ""
"Inside templates you also have access to the :data:`~flask.Flask.config`, :class:"
"`~flask.request`, :class:`~flask.session` and :class:`~flask.g` [#]_ objects as "
"well as the :func:`~flask.url_for` and :func:`~flask.get_flashed_messages` "
"functions."
msgstr ""
"À l'intérieur des modèles, vous avez également accès aux objets :data:`~flask."
"Flask.config`, :class:`~flask.request`, :class:`~flask.session` et :class:"
"`~flask.g` [#]_ ainsi qu'aux fonctions :func:`~flask.url_for` et :func:`~flask."
"get_flashed_messages`."

#: ../../quickstart.rst:451
msgid ""
"Templates are especially useful if inheritance is used.  If you want to know how "
"that works, see :doc:`patterns/templateinheritance`. Basically template "
"inheritance makes it possible to keep certain elements on each page (like "
"header, navigation and footer)."
msgstr ""
"Les modèles sont particulièrement utiles si l'on utilise l'héritage.  Si vous "
"voulez savoir comment cela fonctionne, consultez :doc:`patterns/"
"templateinheritance`. En fait, l'héritage des modèles permet de conserver "
"certains éléments sur chaque page (comme l'en-tête, la navigation et le pied de "
"page)."

#: ../../quickstart.rst:456
msgid ""
"Automatic escaping is enabled, so if ``name`` contains HTML it will be escaped "
"automatically.  If you can trust a variable and you know that it will be safe "
"HTML (for example because it came from a module that converts wiki markup to "
"HTML) you can mark it as safe by using the :class:`~markupsafe.Markup` class or "
"by using the ``|safe`` filter in the template.  Head over to the Jinja 2 "
"documentation for more examples."
msgstr ""
"L'échappement automatique est activé, donc si ``name`` contient du HTML, il sera "
"automatiquement échappé.  Si vous pouvez faire confiance à une variable et que "
"vous savez que ce sera du HTML sûr (par exemple parce qu'elle provient d'un "
"module qui convertit le balisage wiki en HTML), vous pouvez la marquer comme "
"sûre en utilisant la classe :class:`~markupsafe.Markup` ou en utilisant le "
"filtre ``|safe`` dans le modèle.  Consultez la documentation de Jinja 2 pour "
"plus d'exemples."

#: ../../quickstart.rst:463
msgid ""
"Here is a basic introduction to how the :class:`~markupsafe.Markup` class works::"
msgstr ""
"Voici une introduction de base au fonctionnement de la classe :class:"
"`~markupsafe.Markup`::"

#: ../../quickstart.rst:475
msgid ""
"Autoescaping is no longer enabled for all templates.  The following extensions "
"for templates trigger autoescaping: ``.html``, ``.htm``, ``.xml``, ``.xhtml``.  "
"Templates loaded from a string will have autoescaping disabled."
msgstr ""
"L'échappement automatique n'est plus activé pour tous les modèles.  Les "
"extensions suivantes pour les modèles déclenchent l'échappement automatique : ``."
"html``, ``.htm``, ``.xml``, ``.xhtml``.  L'échappement automatique est désactivé "
"pour les modèles chargés à partir d'une chaîne de caractères."

#: ../../quickstart.rst:480
msgid ""
"Unsure what that :class:`~flask.g` object is? It's something in which you can "
"store information for your own needs. See the documentation for :class:`flask.g` "
"and :doc:`patterns/sqlite3`."
msgstr ""
"Vous ne savez pas ce qu'est l'objet :class:`~flask.g` ? C'est un objet dans "
"lequel vous pouvez stocker des informations pour vos propres besoins. Consultez "
"la documentation de :class:`flask.g` et de :doc:`patterns/sqlite3`."

#: ../../quickstart.rst:486
msgid "Accessing Request Data"
msgstr "Accès aux données de la requête"

#: ../../quickstart.rst:488
msgid ""
"For web applications it's crucial to react to the data a client sends to the "
"server.  In Flask this information is provided by the global :class:`~flask."
"request` object.  If you have some experience with Python you might be wondering "
"how that object can be global and how Flask manages to still be threadsafe.  The "
"answer is context locals:"
msgstr ""
"Pour les applications web, il est crucial de réagir aux données qu'un client "
"envoie au serveur.  Dans Flask, ces informations sont fournies par l'objet "
"global :class:`~flask.request`.  Si vous avez une certaine expérience de Python, "
"vous vous demandez peut-être comment cet objet peut être global et comment Flask "
"parvient à rester threadsafe.  La réponse est : les contextes locaux :"

#: ../../quickstart.rst:498
msgid "Context Locals"
msgstr "Contextes locaux"

#: ../../quickstart.rst:500
msgid "Insider Information"
msgstr "Informations pour les initiés"

#: ../../quickstart.rst:502
msgid ""
"If you want to understand how that works and how you can implement tests with "
"context locals, read this section, otherwise just skip it."
msgstr ""
"Si vous voulez comprendre comment cela fonctionne et comment vous pouvez mettre "
"en œuvre des tests avec des contextes locaux, lisez cette section, sinon passez-"
"la."

#: ../../quickstart.rst:505
msgid ""
"Certain objects in Flask are global objects, but not of the usual kind. These "
"objects are actually proxies to objects that are local to a specific context.  "
"What a mouthful.  But that is actually quite easy to understand."
msgstr ""
"Certains objets dans Flask sont des objets globaux, mais pas du genre habituel. "
"Ces objets sont en fait des proxies d'objets qui sont locaux à un contexte "
"spécifique.  Quelle belle expression !  Mais c'est en fait assez facile à "
"comprendre."

#: ../../quickstart.rst:509
msgid ""
"Imagine the context being the handling thread.  A request comes in and the web "
"server decides to spawn a new thread (or something else, the underlying object "
"is capable of dealing with concurrency systems other than threads).  When Flask "
"starts its internal request handling it figures out that the current thread is "
"the active context and binds the current application and the WSGI environments "
"to that context (thread). It does that in an intelligent way so that one "
"application can invoke another application without breaking."
msgstr ""
"Imaginez que le contexte soit le thread de traitement.  Une requête arrive et le "
"serveur web décide de créer un nouveau thread (ou autre chose, l'objet sous-"
"jacent est capable de gérer des systèmes de concurrence autres que les "
"threads).  Lorsque Flask démarre son traitement interne des demandes, il "
"détermine que le thread actuel est le contexte actif et lie l'application "
"actuelle et les environnements WSGI à ce contexte (thread). Il le fait de "
"manière intelligente afin qu'une application puisse invoquer une autre "
"application sans rupture."

#: ../../quickstart.rst:518
msgid ""
"So what does this mean to you?  Basically you can completely ignore that this is "
"the case unless you are doing something like unit testing.  You will notice that "
"code which depends on a request object will suddenly break because there is no "
"request object.  The solution is creating a request object yourself and binding "
"it to the context.  The easiest solution for unit testing is to use the :meth:"
"`~flask.Flask.test_request_context` context manager.  In combination with the "
"``with`` statement it will bind a test request so that you can interact with "
"it.  Here is an example::"
msgstr ""
"Qu'est-ce que cela signifie pour vous ?  En fait, vous pouvez ignorer "
"complètement que c'est le cas, à moins que vous ne fassiez des tests unitaires.  "
"Vous remarquerez que le code qui dépend d'un objet requête sera soudainement "
"interrompu parce qu'il n'y a pas d'objet requête.  La solution consiste à créer "
"vous-même un objet requête et à le lier au contexte.  La solution la plus simple "
"pour les tests unitaires est d'utiliser le gestionnaire de contexte :meth:"
"`~flask.Flask.test_request_context`.  En combinaison avec l'instruction "
"``with``, il liera une requête de test afin que vous puissiez interagir avec "
"elle.  Voici un exemple :"

#: ../../quickstart.rst:535
msgid ""
"The other possibility is passing a whole WSGI environment to the :meth:`~flask."
"Flask.request_context` method::"
msgstr ""
"L'autre possibilité est de passer un environnement WSGI entier à la méthode :"
"meth:`~flask.Flask.request_context` :"

#: ../../quickstart.rst:542
msgid "The Request Object"
msgstr "L'objet Requête"

#: ../../quickstart.rst:544
msgid ""
"The request object is documented in the API section and we will not cover it "
"here in detail (see :class:`~flask.Request`). Here is a broad overview of some "
"of the most common operations.  First of all you have to import it from the "
"``flask`` module::"
msgstr ""
"L'objet requête est documenté dans la section API et nous ne le couvrirons pas "
"ici en détail (voir :class:`~flask.Request`). Voici une vue d'ensemble de "
"certaines des opérations les plus courantes.  Tout d'abord, vous devez "
"l'importer depuis le module ``flask``: :"

#: ../../quickstart.rst:551
msgid ""
"The current request method is available by using the :attr:`~flask.Request."
"method` attribute.  To access form data (data transmitted in a ``POST`` or "
"``PUT`` request) you can use the :attr:`~flask.Request.form` attribute.  Here is "
"a full example of the two attributes mentioned above::"
msgstr ""
"La méthode de la requête actuelle est disponible en utilisant l'attribut :attr:"
"`~flask.Request.method`.  Pour accéder aux données de formulaire (données "
"transmises dans une requête ``POST`` ou ``PUT``), vous pouvez utiliser "
"l'attribut :attr:`~flask.Request.form`.  Voici un exemple complet des deux "
"attributs mentionnés ci-dessus : :"

#: ../../quickstart.rst:570
msgid ""
"What happens if the key does not exist in the ``form`` attribute?  In that case "
"a special :exc:`KeyError` is raised.  You can catch it like a standard :exc:"
"`KeyError` but if you don't do that, a HTTP 400 Bad Request error page is shown "
"instead.  So for many situations you don't have to deal with that problem."
msgstr ""
"Que se passe-t-il si la clé n'existe pas dans l'attribut ``form`` ?  Dans ce "
"cas, un :exc:`KeyError` spécial est généré.  Vous pouvez l'attraper comme une :"
"exc:`KeyError` standard mais si vous ne le faites pas, une page d'erreur HTTP "
"400 Bad Request est affichée à la place.  Ainsi, dans de nombreuses situations, "
"vous n'avez pas à faire face à ce problème."

#: ../../quickstart.rst:576
msgid ""
"To access parameters submitted in the URL (``?key=value``) you can use the :attr:"
"`~flask.Request.args` attribute::"
msgstr ""
"Pour accéder aux paramètres soumis dans l'URL (``?key=value``), vous pouvez "
"utiliser l'attribut :attr:`~flask.Request.args`: :"

#: ../../quickstart.rst:581
msgid ""
"We recommend accessing URL parameters with `get` or by catching the :exc:"
"`KeyError` because users might change the URL and presenting them a 400 bad "
"request page in that case is not user friendly."
msgstr ""
"Nous recommandons d'accéder aux paramètres de l'URL avec `get` ou en attrapant "
"le :exc:`KeyError` car les utilisateurs peuvent changer l'URL et leur présenter "
"une page 400 bad request dans ce cas n'est pas convivial."

#: ../../quickstart.rst:585
msgid ""
"For a full list of methods and attributes of the request object, head over to "
"the :class:`~flask.Request` documentation."
msgstr ""
"Pour une liste complète des méthodes et des attributs de l'objet requête, "
"consultez la documentation de la :class:`~flask.Request`."

#: ../../quickstart.rst:590
msgid "File Uploads"
msgstr "Téléchargements de fichiers"

#: ../../quickstart.rst:592
msgid ""
"You can handle uploaded files with Flask easily.  Just make sure not to forget "
"to set the ``enctype=\"multipart/form-data\"`` attribute on your HTML form, "
"otherwise the browser will not transmit your files at all."
msgstr ""
"Vous pouvez gérer les fichiers téléchargés avec Flask facilement.  Veillez "
"simplement à ne pas oublier de définir l'attribut ``enctype=\"multipart/form-data"
"\"`` sur votre formulaire HTML, sinon le navigateur ne transmettra pas du tout "
"vos fichiers."

#: ../../quickstart.rst:596
msgid ""
"Uploaded files are stored in memory or at a temporary location on the "
"filesystem.  You can access those files by looking at the :attr:`~flask.request."
"files` attribute on the request object.  Each uploaded file is stored in that "
"dictionary.  It behaves just like a standard Python :class:`file` object, but it "
"also has a :meth:`~werkzeug.datastructures.FileStorage.save` method that allows "
"you to store that file on the filesystem of the server. Here is a simple example "
"showing how that works::"
msgstr ""
"Les fichiers téléchargés sont stockés en mémoire ou dans un emplacement "
"temporaire du système de fichiers.  Vous pouvez accéder à ces fichiers en "
"consultant l'attribut :attr:`~flask.request.files` de l'objet requête.  Chaque "
"fichier téléchargé est stocké dans ce dictionnaire.  Il se comporte comme un "
"objet Python standard :class:`file`, mais il possède également une méthode :meth:"
"`~werkzeug.datastructures.FileStorage.save` qui vous permet de stocker ce "
"fichier sur le système de fichiers du serveur. Voici un exemple simple montrant "
"comment cela fonctionne :"

#: ../../quickstart.rst:614
msgid ""
"If you want to know how the file was named on the client before it was uploaded "
"to your application, you can access the :attr:`~werkzeug.datastructures."
"FileStorage.filename` attribute. However please keep in mind that this value can "
"be forged so never ever trust that value.  If you want to use the filename of "
"the client to store the file on the server, pass it through the :func:`~werkzeug."
"utils.secure_filename` function that Werkzeug provides for you::"
msgstr ""
"Si vous voulez savoir comment le fichier a été nommé sur le client avant d'être "
"téléchargé dans votre application, vous pouvez accéder à l'attribut :attr:"
"`~werkzeug.datastructures.FileStorage.filename`. Cependant, gardez à l'esprit "
"que cette valeur peut être falsifiée et que vous ne devez donc jamais vous y "
"fier.  Si vous voulez utiliser le nom de fichier du client pour stocker le "
"fichier sur le serveur, passez-le par la fonction :func:`~werkzeug.utils."
"secure_filename` que Werkzeug vous fournit : :"

#: ../../quickstart.rst:632
msgid "For some better examples, see :doc:`patterns/fileuploads`."
msgstr "Pour de meilleurs exemples, voir :doc:`patterns/fileuploads`."

#: ../../quickstart.rst:635
msgid "Cookies"
msgstr "Cookies"

#: ../../quickstart.rst:637
msgid ""
"To access cookies you can use the :attr:`~flask.Request.cookies` attribute.  To "
"set cookies you can use the :attr:`~flask.Response.set_cookie` method of "
"response objects.  The :attr:`~flask.Request.cookies` attribute of request "
"objects is a dictionary with all the cookies the client transmits.  If you want "
"to use sessions, do not use the cookies directly but instead use the :ref:"
"`sessions` in Flask that add some security on top of cookies for you."
msgstr ""
"Pour accéder aux cookies, vous pouvez utiliser l'attribut :attr:`~flask.Request."
"cookies`.  Pour définir les cookies, vous pouvez utiliser la méthode :attr:"
"`~flask.Response.set_cookie` des objets réponses.  L'attribut :attr:`~flask."
"Request.cookies` des objets requêtes est un dictionnaire contenant tous les "
"cookies que le client transmet.  Si vous souhaitez utiliser des sessions, "
"n'utilisez pas directement les cookies mais plutôt les :ref:`sessions` de Flask "
"qui ajoutent une certaine sécurité en plus des cookies pour vous."

#: ../../quickstart.rst:645
msgid "Reading cookies::"
msgstr "Cookies de lecture :"

#: ../../quickstart.rst:655
msgid "Storing cookies::"
msgstr "Stockage des cookies :"

#: ../../quickstart.rst:665
msgid ""
"Note that cookies are set on response objects.  Since you normally just return "
"strings from the view functions Flask will convert them into response objects "
"for you.  If you explicitly want to do that you can use the :meth:`~flask."
"make_response` function and then modify it."
msgstr ""
"Notez que les cookies sont définis sur les objets réponses.  Puisque vous ne "
"retournez normalement que des chaînes de caractères depuis les fonctions de vue, "
"Flask les convertira en objets réponses pour vous.  Si vous voulez explicitement "
"faire cela, vous pouvez utiliser la fonction :meth:`~flask.make_response` et "
"ensuite la modifier."

#: ../../quickstart.rst:670
msgid ""
"Sometimes you might want to set a cookie at a point where the response object "
"does not exist yet.  This is possible by utilizing the :doc:`patterns/"
"deferredcallbacks` pattern."
msgstr ""
"Parfois, vous pouvez vouloir définir un cookie à un moment où l'objet réponse "
"n'existe pas encore.  Cela est possible en utilisant le motif :doc:`patterns/"
"deferredcallbacks`."

#: ../../quickstart.rst:674
msgid "For this also see :ref:`about-responses`."
msgstr "Pour cela, voir également :ref:`about-responses`."

#: ../../quickstart.rst:677
msgid "Redirects and Errors"
msgstr "Redirections et erreurs"

#: ../../quickstart.rst:679
msgid ""
"To redirect a user to another endpoint, use the :func:`~flask.redirect` "
"function; to abort a request early with an error code, use the :func:`~flask."
"abort` function::"
msgstr ""
"Pour rediriger un utilisateur vers un autre point de terminaison, utilisez la "
"fonction :func:`~flask.redirect` ; pour interrompre une requête prématurément "
"avec un code d'erreur, utilisez la fonction :func:`~flask.abort`: :"

#: ../../quickstart.rst:694
msgid ""
"This is a rather pointless example because a user will be redirected from the "
"index to a page they cannot access (401 means access denied) but it shows how "
"that works."
msgstr ""
"Cet exemple est plutôt inutile car un utilisateur sera redirigé de l'index vers "
"une page à laquelle il ne peut pas accéder (401 signifie accès refusé) mais il "
"montre comment cela fonctionne."

#: ../../quickstart.rst:698
msgid ""
"By default a black and white error page is shown for each error code.  If you "
"want to customize the error page, you can use the :meth:`~flask.Flask."
"errorhandler` decorator::"
msgstr ""
"Par défaut, une page d'erreur en noir et blanc est affichée pour chaque code "
"d'erreur.  Si vous voulez personnaliser la page d'erreur, vous pouvez utiliser "
"le décorateur :meth:`~flask.Flask.errorhandler`: :"

#: ../../quickstart.rst:708
msgid ""
"Note the ``404`` after the :func:`~flask.render_template` call.  This tells "
"Flask that the status code of that page should be 404 which means not found.  By "
"default 200 is assumed which translates to: all went well."
msgstr ""
"Notez le ``404`` après l'appel :func:`~flask.render_template`.  Cela indique à "
"Flask que le code d'état de cette page doit être 404, ce qui signifie non "
"trouvé.  Par défaut, 200 est supposé, ce qui signifie : tout s'est bien passé."

#: ../../quickstart.rst:712
msgid "See :doc:`errorhandling` for more details."
msgstr "Voir :doc:`errorhandling` pour plus de détails."

#: ../../quickstart.rst:717
msgid "About Responses"
msgstr "A propos des réponses"

#: ../../quickstart.rst:719
msgid ""
"The return value from a view function is automatically converted into a response "
"object for you. If the return value is a string it's converted into a response "
"object with the string as response body, a ``200 OK`` status code and a :"
"mimetype:`text/html` mimetype. If the return value is a dict, :func:`jsonify` is "
"called to produce a response. The logic that Flask applies to converting return "
"values into response objects is as follows:"
msgstr ""
"La valeur de retour d'une fonction de vue est automatiquement convertie en objet "
"réponse pour vous. Si la valeur de retour est une chaîne de caractères, elle est "
"convertie en un objet réponse avec la chaîne de caractères comme corps de "
"réponse, un code d'état ``200 OK`` et un mimetype : `text/html`. Si la valeur de "
"retour est un dict, :func:`jsonify` est appelé pour produire une réponse. La "
"logique que Flask applique pour convertir les valeurs de retour en objets "
"réponses est la suivante :"

#: ../../quickstart.rst:727
msgid ""
"If a response object of the correct type is returned it's directly returned from "
"the view."
msgstr ""
"Si un objet réponse du type correct est renvoyé, il est directement renvoyé "
"depuis la vue."

#: ../../quickstart.rst:729
msgid ""
"If it's a string, a response object is created with that data and the default "
"parameters."
msgstr ""
"S'il s'agit d'une chaîne de caractères, un objet réponse est créé avec ces "
"données et les paramètres par défaut."

#: ../../quickstart.rst:731
msgid "If it's a dict, a response object is created using ``jsonify``."
msgstr ""
"Si c'est un dictionnaire, un objet réponse est créé en utilisant ``jsonify``."

#: ../../quickstart.rst:732
msgid ""
"If a tuple is returned the items in the tuple can provide extra information. "
"Such tuples have to be in the form ``(response, status)``, ``(response, "
"headers)``, or ``(response, status, headers)``. The ``status`` value will "
"override the status code and ``headers`` can be a list or dictionary of "
"additional header values."
msgstr ""
"Si un tuple est retourné, les éléments du tuple peuvent fournir des informations "
"supplémentaires. De tels tuples doivent être sous la forme ``(response, "
"status)``, ``(response, headers)``, ou ``(response, status, headers)``. La "
"valeur ``status`` remplacera le code d'état et ``headers`` peut être une liste "
"ou un dictionnaire de valeurs d'en-tête supplémentaires."

#: ../../quickstart.rst:738
msgid ""
"If none of that works, Flask will assume the return value is a valid WSGI "
"application and convert that into a response object."
msgstr ""
"Si rien de tout cela ne fonctionne, Flask supposera que la valeur de retour est "
"une application WSGI valide et la convertira en un objet réponse."

#: ../../quickstart.rst:741
msgid ""
"If you want to get hold of the resulting response object inside the view you can "
"use the :func:`~flask.make_response` function."
msgstr ""
"Si vous voulez mettre la main sur l'objet réponse résultant dans la vue, vous "
"pouvez utiliser la fonction :func:`~flask.make_response`."

#: ../../quickstart.rst:744
msgid "Imagine you have a view like this::"
msgstr "Imaginez que vous ayez une vue comme celle-ci :"

#: ../../quickstart.rst:752
msgid ""
"You just need to wrap the return expression with :func:`~flask.make_response` "
"and get the response object to modify it, then return it::"
msgstr ""
"Vous devez juste envelopper l'expression de retour avec :func:`~flask."
"make_response` et récupérer l'objet réponse pour le modifier, puis le retourner :"

#: ../../quickstart.rst:766
msgid "APIs with JSON"
msgstr "API avec JSON"

#: ../../quickstart.rst:768
msgid ""
"A common response format when writing an API is JSON. It's easy to get started "
"writing such an API with Flask. If you return a ``dict`` from a view, it will be "
"converted to a JSON response."
msgstr ""
"Un format de réponse courant lors de l'écriture d'une API est JSON. Il est "
"facile de commencer à écrire une telle API avec Flask. Si vous retournez un "
"``dict`` depuis une vue, il sera converti en réponse JSON."

#: ../../quickstart.rst:783
msgid ""
"Depending on your API design, you may want to create JSON responses for types "
"other than ``dict``. In that case, use the :func:`~flask.json.jsonify` function, "
"which will serialize any supported JSON data type. Or look into Flask community "
"extensions that support more complex applications."
msgstr ""
"Selon la conception de votre API, vous pouvez vouloir créer des réponses JSON "
"pour des types autres que ``dict``. Dans ce cas, utilisez la fonction :func:"
"`~flask.json.jsonify`, qui sérialise tout type de données JSON pris en charge. "
"Vous pouvez également consulter les extensions de la communauté Flask qui "
"prennent en charge des applications plus complexes."

#: ../../quickstart.rst:802
msgid "Sessions"
msgstr "Sessions"

#: ../../quickstart.rst:804
msgid ""
"In addition to the request object there is also a second object called :class:"
"`~flask.session` which allows you to store information specific to a user from "
"one request to the next.  This is implemented on top of cookies for you and "
"signs the cookies cryptographically.  What this means is that the user could "
"look at the contents of your cookie but not modify it, unless they know the "
"secret key used for signing."
msgstr ""
"En plus de l'objet requête, il existe un second objet appelé :class:`~flask."
"session` qui permet de stocker des informations spécifiques à un utilisateur "
"d'une requête à l'autre.  Cet objet est implémenté par-dessus les cookies et "
"signe les cookies de manière cryptographique.  Cela signifie que l'utilisateur "
"peut regarder le contenu de votre cookie mais ne peut pas le modifier, sauf s'il "
"connaît la clé secrète utilisée pour la signature."

#: ../../quickstart.rst:811
msgid ""
"In order to use sessions you have to set a secret key.  Here is how sessions "
"work::"
msgstr ""
"Pour utiliser les sessions, vous devez définir une clé secrète.  Voici comment "
"les sessions fonctionnent :"

#: ../../quickstart.rst:843
msgid "How to generate good secret keys"
msgstr "Comment générer de bonnes clés secrètes"

#: ../../quickstart.rst:845
msgid ""
"A secret key should be as random as possible. Your operating system has ways to "
"generate pretty random data based on a cryptographic random generator. Use the "
"following command to quickly generate a value for :attr:`Flask.secret_key` (or :"
"data:`SECRET_KEY`)::"
msgstr ""
"Une clé secrète doit être aussi aléatoire que possible. Votre système "
"d'exploitation a des moyens de générer des données plutôt aléatoires basées sur "
"un générateur aléatoire cryptographique. Utilisez la commande suivante pour "
"générer rapidement une valeur pour :attr:`Flask.secret_key` (ou :data:"
"`SECRET_KEY`): :"

#: ../../quickstart.rst:853
msgid ""
"A note on cookie-based sessions: Flask will take the values you put into the "
"session object and serialize them into a cookie.  If you are finding some values "
"do not persist across requests, cookies are indeed enabled, and you are not "
"getting a clear error message, check the size of the cookie in your page "
"responses compared to the size supported by web browsers."
msgstr ""
"Une note sur les sessions basées sur les cookies : Flask prendra les valeurs que "
"vous mettez dans l'objet session et les sérialisera dans un cookie.  Si vous "
"constatez que certaines valeurs ne persistent pas entre les requêtes, que les "
"cookies sont bien activés et que vous n'obtenez pas de message d'erreur clair, "
"vérifiez la taille du cookie dans les réponses de votre page par rapport à la "
"taille prise en charge par les navigateurs web."

#: ../../quickstart.rst:859
msgid ""
"Besides the default client-side based sessions, if you want to handle sessions "
"on the server-side instead, there are several Flask extensions that support this."
msgstr ""
"Outre les sessions côté client par défaut, si vous souhaitez gérer les sessions "
"côté serveur, plusieurs extensions Flask le permettent."

#: ../../quickstart.rst:864
msgid "Message Flashing"
msgstr "Message flash"

#: ../../quickstart.rst:866
msgid ""
"Good applications and user interfaces are all about feedback.  If the user does "
"not get enough feedback they will probably end up hating the application.  Flask "
"provides a really simple way to give feedback to a user with the flashing "
"system.  The flashing system basically makes it possible to record a message at "
"the end of a request and access it on the next (and only the next) request.  "
"This is usually combined with a layout template to expose the message."
msgstr ""
"Les applications et les interfaces utilisateur de qualité reposent sur le retour "
"d'information.  Si l'utilisateur n'a pas assez de retour, il finira probablement "
"par détester l'application.  Flask fournit un moyen très simple de donner un "
"retour à un utilisateur avec le système de flash.  Ce système permet "
"essentiellement d'enregistrer un message à la fin d'une requête et d'y accéder "
"lors de la prochaine requête (et seulement la prochaine).  Il est généralement "
"associé à un modèle de mise en page pour exposer le message."

#: ../../quickstart.rst:874
msgid ""
"To flash a message use the :func:`~flask.flash` method, to get hold of the "
"messages you can use :func:`~flask.get_flashed_messages` which is also available "
"in the templates. See :doc:`patterns/flashing` for a full example."
msgstr ""
"Pour flasher un message, utilisez la méthode :func:`~flask.flash`, pour obtenir "
"les messages, vous pouvez utiliser :func:`~flask.get_flashed_messages` qui est "
"également disponible dans les modèles. Voir :doc:`patterns/flashing` pour un "
"exemple complet."

#: ../../quickstart.rst:880
msgid "Logging"
msgstr "Journalisation"

#: ../../quickstart.rst:884
msgid ""
"Sometimes you might be in a situation where you deal with data that should be "
"correct, but actually is not.  For example you may have some client-side code "
"that sends an HTTP request to the server but it's obviously malformed.  This "
"might be caused by a user tampering with the data, or the client code failing.  "
"Most of the time it's okay to reply with ``400 Bad Request`` in that situation, "
"but sometimes that won't do and the code has to continue working."
msgstr ""
"Parfois, vous pouvez vous trouver dans une situation où vous traitez des données "
"qui devraient être correctes, mais qui ne le sont pas.  Par exemple, vous pouvez "
"avoir un code côté client qui envoie une requête HTTP au serveur mais qui est "
"manifestement mal formée.  Cela peut être dû à un utilisateur qui modifie les "
"données ou à une défaillance du code client.  La plupart du temps, il est normal "
"de répondre par \"400 Bad Request\" dans cette situation, mais parfois, cela ne "
"suffit pas et le code doit continuer à fonctionner."

#: ../../quickstart.rst:892
msgid ""
"You may still want to log that something fishy happened.  This is where loggers "
"come in handy.  As of Flask 0.3 a logger is preconfigured for you to use."
msgstr ""
"Vous pouvez toujours vouloir enregistrer que quelque chose de louche s'est "
"produit.  C'est là que la journalisation est utile.  Depuis Flask 0.3, un logger "
"est préconfiguré pour que vous puissiez l'utiliser."

#: ../../quickstart.rst:896
msgid "Here are some example log calls::"
msgstr "Voici quelques exemples d'appels de journal::"

#: ../../quickstart.rst:902
msgid ""
"The attached :attr:`~flask.Flask.logger` is a standard logging :class:`~logging."
"Logger`, so head over to the official :mod:`logging` docs for more information."
msgstr ""
"Le :attr:`~flask.Flask.logger` attaché est un journal standard :class:`~logging."
"Logger`, donc allez voir la doc officielle :mod:`logging` pour plus "
"d'informations."

#: ../../quickstart.rst:906
msgid "See :doc:`errorhandling`."
msgstr "Voir :doc:`errorhandling`."

#: ../../quickstart.rst:910
msgid "Hooking in WSGI Middleware"
msgstr "Accrochage dans les intergiciels WSGI"

#: ../../quickstart.rst:912
msgid ""
"To add WSGI middleware to your Flask application, wrap the application's "
"``wsgi_app`` attribute. For example, to apply Werkzeug's :class:`~werkzeug."
"middleware.proxy_fix.ProxyFix` middleware for running behind Nginx:"
msgstr ""
"Pour ajouter un intergiciel WSGI à votre application Flask, enveloppez "
"l'attribut ``wsgi_app`` de l'application. Par exemple, pour appliquer le "
"intergiciel :class:`~werkzeug.middleware.proxy_fix.ProxyFix` de Werkzeug pour "
"fonctionner derrière Nginx :"

#: ../../quickstart.rst:922
msgid ""
"Wrapping ``app.wsgi_app`` instead of ``app`` means that ``app`` still points at "
"your Flask application, not at the middleware, so you can continue to use and "
"configure ``app`` directly."
msgstr ""
"Envelopper ``app.wsgi_app`` au lieu de ``app`` signifie que ``app`` pointe "
"toujours vers votre application Flask, et non vers l'intergiciel, donc vous "
"pouvez continuer à utiliser et configurer ``app`` directement."

#: ../../quickstart.rst:927
msgid "Using Flask Extensions"
msgstr "Utiliser les extensions Flask"

#: ../../quickstart.rst:929
msgid ""
"Extensions are packages that help you accomplish common tasks. For example, "
"Flask-SQLAlchemy provides SQLAlchemy support that makes it simple and easy to "
"use with Flask."
msgstr ""
"Les extensions sont des paquets qui vous aident à accomplir des tâches "
"courantes. Par exemple, Flask-SQLAlchemy fournit le support de SQLAlchemy qui "
"rend son utilisation simple et facile avec Flask."

#: ../../quickstart.rst:933
msgid "For more on Flask extensions, see :doc:`extensions`."
msgstr "Pour en savoir plus sur les extensions Flask, consultez :doc:`extensions`."

#: ../../quickstart.rst:936
msgid "Deploying to a Web Server"
msgstr "Déploiement sur un serveur Web"

#: ../../quickstart.rst:938
msgid "Ready to deploy your new Flask app? See :doc:`deploying/index`."
msgstr ""
"Prêt à déployer votre nouvelle application Flask ? Voir :doc:`deploying/index`."

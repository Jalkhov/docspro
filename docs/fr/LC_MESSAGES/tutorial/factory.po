# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <victor.levieux@gmail.com>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-01 02:27-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: fr_FR <victor.levieux@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"


#: ../../tutorial/factory.rst:4
msgid "Application Setup"
msgstr "Configuration de l'application"

#: ../../tutorial/factory.rst:6
msgid ""
"A Flask application is an instance of the :class:`Flask` class. Everything "
"about the application, such as configuration and URLs, will be registered "
"with this class."
msgstr ""
"Une application Flask est une instance de la classe :class:`Flask`. Tout ce "
"qui concerne l'application, comme la configuration et les URLs, sera "
"enregistré avec cette classe."

#: ../../tutorial/factory.rst:10
msgid ""
"The most straightforward way to create a Flask application is to create a "
"global :class:`Flask` instance directly at the top of your code, like how "
"the \"Hello, World!\" example did on the previous page. While this is "
"simple and useful in some cases, it can cause some tricky issues as the "
"project grows."
msgstr ""
"La façon la plus simple de créer une application Flask est de créer une "
"instance globale :class:`Flask` directement en haut de votre code, comme "
"dans l'exemple \"Hello, World !\" de la page précédente. Bien que cette "
"méthode soit simple et utile dans certains cas, elle peut poser des "
"problèmes délicats lorsque le projet se développe."

#: ../../tutorial/factory.rst:16
msgid ""
"Instead of creating a :class:`Flask` instance globally, you will create it "
"inside a function. This function is known as the *application factory*. Any "
"configuration, registration, and other setup the application needs will "
"happen inside the function, then the application will be returned."
msgstr ""
"Au lieu de créer une instance :class:`Flask` globalement, vous la créerez "
"dans une fonction. Cette fonction est connue sous le nom de *fabrique "
"d'applications*. Toute configuration, tout enregistrement et tout autre "
"réglage dont l'application a besoin se fera dans la fonction, puis "
"l'application sera retournée."

#: ../../tutorial/factory.rst:24
msgid "The Application Factory"
msgstr "Fabrique d'applications"

#: ../../tutorial/factory.rst:26
msgid ""
"It's time to start coding! Create the ``flaskr`` directory and add the "
"``__init__.py`` file. The ``__init__.py`` serves double duty: it will "
"contain the application factory, and it tells Python that the ``flaskr`` "
"directory should be treated as a package."
msgstr ""
"C'est le moment de commencer à coder ! Créez le répertoire ``flaskr`` et "
"ajoutez le fichier ``__init__.py``. Le fichier ``__init__.py`` a une double "
"fonction : il contiendra la fabrique de l'application, et il indique à "
"Python que le répertoire ``flaskr`` doit être traité comme un paquet."

#: ../../tutorial/factory.rst:35
msgid "``flaskr/__init__.py``"
msgstr "``flaskr/__init__.py``"

#: ../../tutorial/factory.rst:71
msgid ""
"``create_app`` is the application factory function. You'll add to it later "
"in the tutorial, but it already does a lot."
msgstr ""
"``create_app`` est la fonction de fabrique de l'application. Vous la "
"compléterez plus tard dans le tutoriel, mais elle fait déjà beaucoup."

#: ../../tutorial/factory.rst:74
msgid ""
"``app = Flask(__name__, instance_relative_config=True)`` creates the :class:"
"`Flask` instance."
msgstr ""
"``app = Flask(__name__, instance_relative_config=True)`` crée l'instance :"
"class:`Flask`."

#: ../../tutorial/factory.rst:77
msgid ""
"``__name__`` is the name of the current Python module. The app needs to "
"know where it's located to set up some paths, and ``__name__`` is a "
"convenient way to tell it that."
msgstr ""
"``__name__`` est le nom du module Python actuel. L'application a besoin de "
"savoir où il se trouve pour configurer certains chemins, et ``__name__`` "
"est un moyen pratique de le lui dire."

#: ../../tutorial/factory.rst:81
msgid ""
"``instance_relative_config=True`` tells the app that configuration files "
"are relative to the :ref:`instance folder <instance-folders>`. The instance "
"folder is located outside the ``flaskr`` package and can hold local data "
"that shouldn't be committed to version control, such as configuration "
"secrets and the database file."
msgstr ""
"``instance_relative_config=True`` indique à l'application que les fichiers "
"de configuration sont relatifs au dossier :ref:`instance <instance-"
"folders>`. Le dossier d'instance est situé en dehors du paquet ``flaskr`` "
"et peut contenir des données locales qui ne doivent pas être soumises au "
"contrôle de version, comme les secrets de configuration et le fichier de "
"base de données."

#: ../../tutorial/factory.rst:88
msgid ""
":meth:`app.config.from_mapping() <Config.from_mapping>` sets some default "
"configuration that the app will use:"
msgstr ""
":meth:`app.config.from_mapping() <Config.from_mapping>` définit une "
"certaine configuration par défaut que l'application utilisera :"

#: ../../tutorial/factory.rst:91
msgid ""
":data:`SECRET_KEY` is used by Flask and extensions to keep data safe. It's "
"set to ``'dev'`` to provide a convenient value during development, but it "
"should be overridden with a random value when deploying."
msgstr ""
":data:`SECRET_KEY` est utilisé par Flask et les extensions pour garder les "
"données en sécurité. Elle est définie à ``'dev'`` pour fournir une valeur "
"pratique pendant le développement, mais elle doit être remplacée par une "
"valeur aléatoire lors du déploiement."

#: ../../tutorial/factory.rst:96
msgid ""
"``DATABASE`` is the path where the SQLite database file will be saved. It's "
"under :attr:`app.instance_path <Flask.instance_path>`, which is the path "
"that Flask has chosen for the instance folder. You'll learn more about the "
"database in the next section."
msgstr ""
"``DATABASE`` est le chemin où le fichier de la base de données SQLite sera "
"enregistré. Il se trouve sous :attr:`app.instance_path <Flask."
"instance_path>`, qui est le chemin que Flask a choisi pour le dossier de "
"l'instance. Vous en apprendrez plus sur la base de données dans la section "
"suivante."

#: ../../tutorial/factory.rst:102
msgid ""
":meth:`app.config.from_pyfile() <Config.from_pyfile>` overrides the default "
"configuration with values taken from the ``config.py`` file in the instance "
"folder if it exists. For example, when deploying, this can be used to set a "
"real ``SECRET_KEY``."
msgstr ""
":meth:`app.config.from_pyfile() <Config.from_pyfile>` remplace la "
"configuration par défaut par des valeurs prises dans le fichier ``config."
"py`` du dossier de l'instance s'il existe. Par exemple, lors du "
"déploiement, cela peut être utilisé pour définir une véritable "
"``SECRET_KEY``."

#: ../../tutorial/factory.rst:107
msgid ""
"``test_config`` can also be passed to the factory, and will be used instead "
"of the instance configuration. This is so the tests you'll write later in "
"the tutorial can be configured independently of any development values you "
"have configured."
msgstr ""
"``test_config`` peut aussi être passé à la fabrique, et sera utilisé à la "
"place de la configuration de l'instance. Ceci afin que les tests que vous "
"écrirez plus tard dans le tutoriel puissent être configurés indépendamment "
"des valeurs de développement que vous avez configurées."

#: ../../tutorial/factory.rst:112
msgid ""
":func:`os.makedirs` ensures that :attr:`app.instance_path <Flask."
"instance_path>` exists. Flask doesn't create the instance folder "
"automatically, but it needs to be created because your project will create "
"the SQLite database file there."
msgstr ""
":func:`os.makedirs` assure que :attr:`app.instance_path <Flask."
"instance_path>` existe. Flask ne crée pas le dossier d'instance "
"automatiquement, mais il doit être créé car votre projet y créera le "
"fichier de la base de données SQLite."

#: ../../tutorial/factory.rst:118
msgid ""
":meth:`@app.route() <Flask.route>` creates a simple route so you can see "
"the application working before getting into the rest of the tutorial. It "
"creates a connection between the URL ``/hello`` and a function that returns "
"a response, the string ``'Hello, World!'`` in this case."
msgstr ""
":meth:`@app.route() <Flask.route>` crée une route simple pour que vous "
"puissiez voir l'application fonctionner avant d'aborder le reste du "
"tutoriel. Elle crée une connexion entre l'URL ``/hello`` et une fonction "
"qui renvoie une réponse, la chaîne de caractères ``'Hello, World!'`` dans "
"ce cas."

#: ../../tutorial/factory.rst:126
msgid "Run The Application"
msgstr "Démarrer l'application"

#: ../../tutorial/factory.rst:128
msgid ""
"Now you can run your application using the ``flask`` command. From the "
"terminal, tell Flask where to find your application, then run it in "
"development mode. Remember, you should still be in the top-level ``flask-"
"tutorial`` directory, not the ``flaskr`` package."
msgstr ""
"Maintenant vous pouvez démarrer votre application en utilisant la commande "
"``flask``. Depuis le terminal, dites à Flask où trouver votre application, "
"puis lancez-la en mode développement. Rappelez-vous, vous devriez toujours "
"être dans le répertoire de haut niveau ``flask-tutorial``, pas dans le "
"paquet ``Flaskr``."

#: ../../tutorial/factory.rst:133
msgid ""
"Development mode shows an interactive debugger whenever a page raises an "
"exception, and restarts the server whenever you make changes to the code. "
"You can leave it running and just reload the browser page as you follow the "
"tutorial."
msgstr ""
"Le mode développement affiche un débogueur interactif chaque fois qu'une "
"page lève une exception, et redémarre le serveur chaque fois que vous "
"apportez des modifications au code. Vous pouvez le laisser fonctionner et "
"recharger simplement la page du navigateur pendant que vous suivez le "
"tutoriel."

#: ../../tutorial/factory.rst:140
msgid "Bash"
msgstr "Bash"

#: ../../tutorial/factory.rst:148
msgid "CMD"
msgstr "CMD"

#: ../../tutorial/factory.rst:156
msgid "Powershell"
msgstr "Powershell"

#: ../../tutorial/factory.rst:164
msgid "You'll see output similar to this:"
msgstr "Vous verrez un résultat similaire à celui-ci :"

#: ../../tutorial/factory.rst:176
msgid ""
"Visit http://127.0.0.1:5000/hello in a browser and you should see the "
"\"Hello, World!\" message. Congratulations, you're now running your Flask "
"web application!"
msgstr ""
"Visitez http://127.0.0.1:5000/hello dans un navigateur et vous devriez voir "
"le message \"Hello, World !\". Félicitations, vous avez démarré votre "
"première application web Flask !"

#: ../../tutorial/factory.rst:180
msgid "Continue to :doc:`database`."
msgstr "Passez à :doc:`database`."

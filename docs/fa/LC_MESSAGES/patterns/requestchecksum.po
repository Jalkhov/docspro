# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"Language: xd\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0\n"

#: ../../patterns/requestchecksum.rst:2
msgid "Request Content Checksums"
msgstr ""

#: ../../patterns/requestchecksum.rst:4
msgid ""
"Various pieces of code can consume the request data and preprocess it. For "
"instance JSON data ends up on the request object already read and processed,"
" form data ends up there as well but goes through a different code path.  "
"This seems inconvenient when you want to calculate the checksum of the "
"incoming request data.  This is necessary sometimes for some APIs."
msgstr ""

#: ../../patterns/requestchecksum.rst:11
msgid ""
"Fortunately this is however very simple to change by wrapping the input "
"stream."
msgstr ""

#: ../../patterns/requestchecksum.rst:14
msgid ""
"The following example calculates the SHA1 checksum of the incoming data as "
"it gets read and stores it in the WSGI environment::"
msgstr ""

#: ../../patterns/requestchecksum.rst:41
msgid ""
"To use this, all you need to do is to hook the calculating stream in before "
"the request starts consuming data.  (Eg: be careful accessing "
"``request.form`` or anything of that nature.  ``before_request_handlers`` "
"for instance should be careful not to access it)."
msgstr ""

#: ../../patterns/requestchecksum.rst:46
msgid "Example usage::"
msgstr ""

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"Language: xd\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0\n"

#: ../../patterns/javascript.rst:2
msgid "JavaScript, ``fetch``, and JSON"
msgstr "JavaScript, ``fetch`` y JSON"

#: ../../patterns/javascript.rst:4
msgid ""
"You may want to make your HTML page dynamic, by changing data without "
"reloading the entire page. Instead of submitting an HTML ``<form>`` and "
"performing a redirect to re-render the template, you can add `JavaScript`_ "
"that calls |fetch|_ and replaces content on the page."
msgstr ""
"Es posible que desee hacer que su página HTML sea dinámica, cambiando los "
"datos sin recargar toda la página. En lugar de enviar un HTML ``<form>`` y "
"realizar una redirección para volver a renderizar la plantilla, puedes "
"añadir `JavaScript`_ que llame a |fetch|_ y reemplace el contenido de la "
"página."

#: ../../patterns/javascript.rst:9
msgid ""
"|fetch|_ is the modern, built-in JavaScript solution to making requests from"
" a page. You may have heard of other \"AJAX\" methods and libraries, such as"
" |XHR|_ or `jQuery`_. These are no longer needed in modern browsers, "
"although you may choose to use them or another library depending on your "
"application's requirements. These docs will only focus on built-in "
"JavaScript features."
msgstr ""
"|fetch|_ es la solución moderna e integrada de JavaScript para realizar "
"peticiones desde una página. Es posible que haya oído hablar de otros "
"métodos y bibliotecas \"AJAX\", como |XHR|_ o `jQuery`_. Éstos ya no son "
"necesarios en los navegadores modernos, aunque puede optar por utilizarlos o"
" por otra biblioteca dependiendo de los requisitos de su aplicación. Estos "
"documentos sólo se centrarán en las características incorporadas de "
"JavaScript."

#: ../../patterns/javascript.rst:25
msgid "Rendering Templates"
msgstr "Plantillas de renderizado"

#: ../../patterns/javascript.rst:27
msgid ""
"It is important to understand the difference between templates and "
"JavaScript. Templates are rendered on the server, before the response is "
"sent to the user's browser. JavaScript runs in the user's browser, after the"
" template is rendered and sent. Therefore, it is impossible to use "
"JavaScript to affect how the Jinja template is rendered, but is is possible "
"to render data into the JavaScript that will run."
msgstr ""
"Es importante entender la diferencia entre plantillas y JavaScript. Las "
"plantillas se renderizan en el servidor, antes de que la respuesta se envíe "
"al navegador del usuario. El JavaScript se ejecuta en el navegador del "
"usuario, después de que la plantilla se renderice y se envíe. Por lo tanto, "
"es imposible usar JavaScript para afectar la forma en que se renderiza la "
"plantilla Jinja, pero es posible renderizar datos en el JavaScript que se "
"ejecutará."

#: ../../patterns/javascript.rst:34
msgid ""
"To provide data to JavaScript when rendering the template, use the "
":func:`~jinja-filters.tojson` filter in a ``<script>`` block. This will "
"convert the data to a valid JavaScript object, and ensure that any unsafe "
"HTML characters are rendered safely. If you do not use the ``tojson`` "
"filter, you will get a ``SyntaxError`` in the browser console."
msgstr ""
"Para proporcionar datos a JavaScript al renderizar la plantilla, utilice el "
"filtro :func:`~jinja-filters.tojson` en un bloque ``<script>``. Esto "
"convertirá los datos en un objeto JavaScript válido, y asegurará que "
"cualquier carácter HTML inseguro se renderice de forma segura. Si no "
"utilizas el filtro ``tojson``, obtendrás un ``SyntaxError`` en la consola "
"del navegador."

#: ../../patterns/javascript.rst:53
msgid ""
"A less common pattern is to add the data to a ``data-`` attribute on an HTML"
" tag. In this case, you must use single quotes around the value, not double "
"quotes, otherwise you will produce invalid or unsafe HTML."
msgstr ""
"Un patrón menos común es añadir los datos a un atributo ``data-`` en una "
"etiqueta HTML. En este caso, debes usar comillas simples alrededor del "
"valor, no comillas dobles, de lo contrario producirás un HTML inválido o "
"inseguro."

#: ../../patterns/javascript.rst:63
msgid "Generating URLs"
msgstr "Generación de URLs"

#: ../../patterns/javascript.rst:65
msgid ""
"The other way to get data from the server to JavaScript is to make a request"
" for it. First, you need to know the URL to request."
msgstr ""
"La otra forma de obtener datos del servidor a JavaScript es hacer una "
"petición de los mismos. En primer lugar, es necesario conocer la URL a "
"solicitar."

#: ../../patterns/javascript.rst:68
msgid ""
"The simplest way to generate URLs is to continue to use "
":func:`~flask.url_for` when rendering the template. For example:"
msgstr ""
"La forma más sencilla de generar URLs es seguir utilizando "
":func:`~flask.url_for` al renderizar la plantilla. Por ejemplo:"

#: ../../patterns/javascript.rst:76
msgid ""
"However, you might need to generate a URL based on information you only know"
" in JavaScript. As discussed above, JavaScript runs in the user's browser, "
"not as part of the template rendering, so you can't use ``url_for`` at that "
"point."
msgstr ""
"Sin embargo, es posible que necesites generar una URL basada en información "
"que sólo conoces en JavaScript. Como se ha comentado anteriormente, "
"JavaScript se ejecuta en el navegador del usuario, no como parte del "
"renderizado de la plantilla, por lo que no puedes utilizar ``url_for`` en "
"ese punto."

#: ../../patterns/javascript.rst:81
msgid ""
"In this case, you need to know the \"root URL\" under which your application"
" is served. In simple setups, this is ``/``, but it might also be something "
"else, like ``https://example.com/myapp/``."
msgstr ""
"En este caso, necesitas conocer la \"URL raíz\" bajo la cual se sirve tu "
"aplicación. En configuraciones simples, esto es ``/``, pero también podría "
"ser algo más, como ``https://example.com/myapp/``."

#: ../../patterns/javascript.rst:85
msgid ""
"A simple way to tell your JavaScript code about this root is to set it as a "
"global variable when rendering the template. Then you can use it when "
"generating URLs from JavaScript."
msgstr ""
"Una forma sencilla de informar a su código JavaScript sobre esta raíz es "
"establecerla como una variable global al renderizar la plantilla. Entonces "
"podrá utilizarla cuando genere URLs desde JavaScript."

#: ../../patterns/javascript.rst:98
msgid "Making a Request with ``fetch``"
msgstr "Hacer una petición con ``fetch``"

#: ../../patterns/javascript.rst:100
msgid ""
"|fetch|_ takes two arguments, a URL and an object with other options, and "
"returns a |Promise|_. We won't cover all the available options, and will "
"only use ``then()`` on the promise, not other callbacks or ``await`` syntax."
" Read the linked MDN docs for more information about those features."
msgstr ""
"|fetch|_ toma dos argumentos, una URL y un objeto con otras opciones, y "
"devuelve una |Promise|_. No cubriremos todas las opciones disponibles, y "
"sólo usaremos ``then()`` en la promise, no otras devoluciones de llamada o "
"la sintaxis ``await``. Lee los documentos MDN vinculados para obtener más "
"información sobre estas características."

#: ../../patterns/javascript.rst:106
msgid ""
"By default, the GET method is used. If the response contains JSON, it can be"
" used with a ``then()`` callback chain."
msgstr ""
"Por defecto, se utiliza el método GET. Si la respuesta contiene JSON, se "
"puede utilizar con una cadena de devolución de llamada ``then()``."

#: ../../patterns/javascript.rst:118
msgid ""
"To send data, use a data method such as POST, and pass the ``body`` option. "
"The most common types for data are form data or JSON data."
msgstr ""
"Para enviar datos, utilice un método de datos como POST, y pase la opción "
"``body``. Los tipos de datos más comunes son los datos de formulario o los "
"datos JSON."

#: ../../patterns/javascript.rst:121
msgid ""
"To send form data, pass a populated |FormData|_ object. This uses the same "
"format as an HTML form, and would be accessed with ``request.form`` in a "
"Flask view."
msgstr ""
"Para enviar los datos del formulario, pasa un objeto |FormData|_ poblado. "
"Esto utiliza el mismo formato que un formulario HTML, y se accedería con "
"``request.form`` en una vista Flask."

#: ../../patterns/javascript.rst:135
msgid ""
"In general, prefer sending request data as form data, as would be used when "
"submitting an HTML form. JSON can represent more complex data, but unless "
"you need that it's better to stick with the simpler format. When sending "
"JSON data, the ``Content-Type: application/json`` header must be sent as "
"well, otherwise Flask will return a 400 error."
msgstr ""
"En general, prefiera enviar los datos de la solicitud como datos de "
"formulario, como se utilizaría al enviar un formulario HTML. JSON puede "
"representar datos más complejos, pero a menos que lo necesites es mejor "
"quedarse con el formato más simple. Al enviar datos JSON, la cabecera "
"``Content-Type: application/json`` debe ser enviada también, de lo contrario"
" Flask devolverá un error 400."

#: ../../patterns/javascript.rst:160
msgid "Following Redirects"
msgstr "Siguiendo las redirecciones"

#: ../../patterns/javascript.rst:162
msgid ""
"A response might be a redirect, for example if you logged in with JavaScript"
" instead of a traditional HTML form, and your view returned a redirect "
"instead of JSON. JavaScript requests do follow redirects, but they don't "
"change the page. If you want to make the page change you can inspect the "
"response and apply the redirect manually."
msgstr ""
"Una respuesta puede ser una redirección, por ejemplo, si usted se registra "
"con JavaScript en lugar de un formulario HTML tradicional, y su vista "
"devuelve una redirección en lugar de JSON. Las solicitudes de JavaScript "
"siguen las redirecciones, pero no cambian la página. Si quieres hacer que la"
" página cambie puedes inspeccionar la respuesta y aplicar la redirección "
"manualmente."

#: ../../patterns/javascript.rst:182
msgid "Replacing Content"
msgstr "Sustitución de contenidos"

#: ../../patterns/javascript.rst:184
msgid ""
"A response might be new HTML, either a new section of the page to add or "
"replace, or an entirely new page. In general, if you're returning the entire"
" page, it would be better to handle that with a redirect as shown in the "
"previous section. The following example shows how to replace a ``<div>`` "
"with the HTML returned by a request."
msgstr ""
"A response might be new HTML, either a new section of the page to add or "
"replace, or an entirely new page. In general, if you're returning the entire"
" page, it would be better to handle that with a redirect as shown in the "
"previous section. The following example shows how to replace a ``<div>`` "
"with the HTML returned by a request."

#: ../../patterns/javascript.rst:205
msgid "Return JSON from Views"
msgstr "Devolver JSON desde las vistas"

#: ../../patterns/javascript.rst:207
msgid ""
"To return a JSON object from your API view, you can directly return a dict "
"from the view. It will be serialized to JSON automatically."
msgstr ""
"Para devolver un objeto JSON desde su vista de la API, puede devolver "
"directamente un dict desde la vista. Se serializará a JSON automáticamente."

#: ../../patterns/javascript.rst:221
msgid ""
"If you want to return another JSON type, use the :func:`~flask.json.jsonify`"
" function, which creates a response object with the given data serialized to"
" JSON."
msgstr ""
"Si quieres devolver otro tipo de JSON, utiliza la función "
":func:`~flask.json.jsonify`, que crea un objeto de respuesta con los datos "
"dados serializados a JSON."

#: ../../patterns/javascript.rst:234
msgid ""
"It is usually not a good idea to return file data in a JSON response. JSON "
"cannot represent binary data directly, so it must be base64 encoded, which "
"can be slow, takes more bandwidth to send, and is not as easy to cache. "
"Instead, serve files using one view, and generate a URL to the desired file "
"to include in the JSON. Then the client can make a separate request to get "
"the linked resource after getting the JSON."
msgstr ""
"Normalmente no es una buena idea devolver datos de archivos en una respuesta"
" JSON. JSON no puede representar datos binarios directamente, por lo que "
"debe ser codificado en base64, lo que puede ser lento, requiere más ancho de"
" banda para enviar, y no es tan fácil de almacenar en caché. En su lugar, "
"sirva los archivos usando una vista, y genere una URL al archivo deseado "
"para incluirlo en el JSON. Entonces el cliente puede hacer una petición "
"separada para obtener el recurso vinculado después de obtener el JSON."

#: ../../patterns/javascript.rst:243
msgid "Receiving JSON in Views"
msgstr "Recepción de JSON en las vistas"

#: ../../patterns/javascript.rst:245
msgid ""
"Use the :attr:`~flask.Request.json` property of the :data:`~flask.request` "
"object to decode the request's body as JSON. If the body is not valid JSON, "
"or the ``Content-Type`` header is not set to ``application/json``, a 400 Bad"
" Request error will be raised."
msgstr ""
"Utilice la propiedad :attr:`~flask.Request.json` del objeto "
":data:`~flask.request` para decodificar el cuerpo de la solicitud como JSON."
" Si el cuerpo no es un JSON válido, o la cabecera ``Content-Type`` no está "
"definida como ``application/json``, se producirá un error 400 Bad Request."

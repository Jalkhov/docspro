# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../patterns/templateinheritance.rst:2
msgid "Template Inheritance"
msgstr "Herencia de plantillas"

#: ../../patterns/templateinheritance.rst:4
msgid ""
"The most powerful part of Jinja is template inheritance. Template inheritance "
"allows you to build a base \"skeleton\" template that contains all the common "
"elements of your site and defines **blocks** that child templates can override."
msgstr ""
"La parte más poderosa de Jinja es la herencia de plantillas. La herencia de "
"plantillas te permite construir una plantilla base \"esqueleto\" que contiene "
"todos los elementos comunes de tu sitio y define **bloques** que las plantillas "
"hijas pueden sobrescribir."

#: ../../patterns/templateinheritance.rst:8
msgid ""
"Sounds complicated but is very basic. It's easiest to understand it by starting "
"with an example."
msgstr ""
"Suena complicado pero es muy básico. Lo más fácil es entenderlo empezando con "
"un ejemplo."

#: ../../patterns/templateinheritance.rst:13
msgid "Base Template"
msgstr "Plantilla base"

#: ../../patterns/templateinheritance.rst:15
msgid ""
"This template, which we'll call :file:`layout.html`, defines a simple HTML "
"skeleton document that you might use for a simple two-column page. It's the job "
"of \"child\" templates to fill the empty blocks with content:"
msgstr ""
"Esta plantilla, a la que llamaremos :file:`layout.html`, define un simple "
"documento esqueleto de HTML que podría utilizar para una simple página de dos "
"columnas. El trabajo de las plantillas \"hijas\" es llenar los bloques vacíos "
"con contenido:"

#: ../../patterns/templateinheritance.rst:39
msgid ""
"In this example, the ``{% block %}`` tags define four blocks that child "
"templates can fill in. All the `block` tag does is tell the template engine "
"that a child template may override those portions of the template."
msgstr ""
"En este ejemplo, las etiquetas ``{% block %}`` definen cuatro bloques que las "
"plantillas hijas pueden rellenar. Todo lo que hace la etiqueta `block` es "
"indicar al motor de la plantilla que una plantilla hija puede anular esas "
"partes de la plantilla."

#: ../../patterns/templateinheritance.rst:44
msgid "Child Template"
msgstr "Plantilla hija"

#: ../../patterns/templateinheritance.rst:46
msgid "A child template might look like this:"
msgstr "Una plantilla hija podría tener el siguiente aspecto:"

#: ../../patterns/templateinheritance.rst:64
#, python-format
msgid ""
"The ``{% extends %}`` tag is the key here. It tells the template engine that "
"this template \"extends\" another template.  When the template system evaluates "
"this template, first it locates the parent.  The extends tag must be the first "
"tag in the template.  To render the contents of a block defined in the parent "
"template, use ``{{ super() }}``."
msgstr ""
"La etiqueta ``{% extends %}`` es la clave aquí. Indica al motor de plantillas "
"que esta plantilla \"extiende\" otra plantilla. Cuando el sistema de plantillas "
"evalúa esta plantilla, primero localiza el padre. La etiqueta extends debe ser "
"la primera etiqueta de la plantilla. Para mostrar el contenido de un bloque "
"definido en la plantilla principal, utilice ``{{ super() }}``."

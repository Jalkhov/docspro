# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../patterns/jquery.rst:2
msgid "AJAX with jQuery"
msgstr "AJAX con jQuery"

#: ../../patterns/jquery.rst:4
msgid ""
"`jQuery`_ is a small JavaScript library commonly used to simplify working with "
"the DOM and JavaScript in general.  It is the perfect tool to make web "
"applications more dynamic by exchanging JSON between server and client."
msgstr ""
"`jQuery`_ es una pequeña librería de JavaScript utilizada habitualmente para "
"simplificar el trabajo con el DOM y con JavaScript en general. Es la "
"herramienta perfecta para hacer más dinámicas las aplicaciones web mediante el "
"intercambio de JSON entre el servidor y el cliente."

#: ../../patterns/jquery.rst:9
msgid ""
"JSON itself is a very lightweight transport format, very similar to how Python "
"primitives (numbers, strings, dicts and lists) look like which is widely "
"supported and very easy to parse.  It became popular a few years ago and "
"quickly replaced XML as transport format in web applications."
msgstr ""
"JSON es un formato de transporte muy ligero, muy similar al aspecto de las "
"primitivas de Python (números, cadenas, dicts y listas) que está ampliamente "
"soportado y es muy fácil de analizar. Se hizo popular hace unos años y "
"rápidamente sustituyó a XML como formato de transporte en las aplicaciones web."

#: ../../patterns/jquery.rst:17
msgid "Loading jQuery"
msgstr "Carga de jQuery"

#: ../../patterns/jquery.rst:19
msgid ""
"In order to use jQuery, you have to download it first and place it in the "
"static folder of your application and then ensure it's loaded.  Ideally you "
"have a layout template that is used for all pages where you just have to add a "
"script statement to the bottom of your ``<body>`` to load jQuery:"
msgstr ""
"Para usar jQuery, primero tienes que descargarlo y colocarlo en la carpeta "
"estática de tu aplicación y luego asegurarte de que se cargue. Lo ideal es que "
"tengas una plantilla de diseño que se utilice para todas las páginas en la que "
"sólo tengas que añadir una declaración de script al final de tu ``<body>`` para "
"cargar jQuery:"

#: ../../patterns/jquery.rst:29
msgid ""
"Another method is using Google's `AJAX Libraries API <https://developers.google."
"com/speed/libraries/>`_ to load jQuery:"
msgstr ""
"Otro método es utilizar la `API de las librerías AJAX <https://developers."
"google.com/speed/libraries/>`_ de Google para cargar jQuery:"

#: ../../patterns/jquery.rst:38
msgid ""
"In this case you have to put jQuery into your static folder as a fallback, but "
"it will first try to load it directly from Google. This has the advantage that "
"your website will probably load faster for users if they went to at least one "
"other website before using the same jQuery version from Google because it will "
"already be in the browser cache."
msgstr ""
"En este caso tienes que poner jQuery en tu carpeta estática como un fallback, "
"pero primero intentará cargarlo directamente desde Google. Esto tiene la "
"ventaja de que su sitio web probablemente se cargará más rápido para los "
"usuarios si fueron a al menos otro sitio web antes de usar la misma versión de "
"jQuery de Google porque ya estará en la caché del navegador."

#: ../../patterns/jquery.rst:45
msgid "Where is My Site?"
msgstr "¿Dónde está mi sitio?"

#: ../../patterns/jquery.rst:47
msgid ""
"Do you know where your application is?  If you are developing the answer is "
"quite simple: it's on localhost port something and directly on the root of that "
"server.  But what if you later decide to move your application to a different "
"location?  For example to ``http://example.com/myapp``?  On the server side "
"this never was a problem because we were using the handy :func:`~flask.url_for` "
"function that could answer that question for us, but if we are using jQuery we "
"should not hardcode the path to the application but make that dynamic, so how "
"can we do that?"
msgstr ""
"¿Sabes dónde está tu aplicación? Si estás desarrollando la respuesta es "
"bastante sencilla: está en el puerto localhost algo y directamente en la raíz "
"de ese servidor.  ¿Pero qué pasa si más tarde decides mover tu aplicación a una "
"ubicación diferente?  ¿Por ejemplo a ``http://example.com/myapp``?  En el lado "
"del servidor esto nunca fue un problema porque estábamos usando la práctica "
"función :func:`~flask.url_for` que podía responder a esa pregunta por nosotros, "
"pero si estamos usando jQuery no debemos hardcodear la ruta a la aplicación "
"sino hacerla dinámica, así que ¿cómo podemos hacer eso?"

#: ../../patterns/jquery.rst:56
msgid ""
"A simple method would be to add a script tag to our page that sets a global "
"variable to the prefix to the root of the application.  Something like this:"
msgstr ""
"Un método sencillo sería añadir una etiqueta de script a nuestra página que "
"establezca una variable global con el prefijo a la raíz de la aplicación. Algo "
"así:"

#: ../../patterns/jquery.rst:68
msgid "JSON View Functions"
msgstr "Funciones de la vista JSON"

#: ../../patterns/jquery.rst:70
msgid ""
"Now let's create a server side function that accepts two URL arguments of "
"numbers which should be added together and then sent back to the application in "
"a JSON object.  This is a really ridiculous example and is something you "
"usually would do on the client side alone, but a simple example that shows how "
"you would use jQuery and Flask nonetheless::"
msgstr ""
"Ahora vamos a crear una función del lado del servidor que acepte dos argumentos "
"URL de números que deben ser sumados y luego enviados de vuelta a la aplicación "
"en un objeto JSON. Este es un ejemplo realmente ridículo y es algo que "
"normalmente se haría en el lado del cliente solo, pero un ejemplo simple que "
"muestra cómo se utilizaría jQuery y Flask sin embargo::"

#: ../../patterns/jquery.rst:89
msgid ""
"As you can see I also added an `index` method here that renders a template.  "
"This template will load jQuery as above and have a little form where we can add "
"two numbers and a link to trigger the function on the server side."
msgstr ""
"Como puedes ver también he añadido un método `index` aquí que renderiza una "
"plantilla. Esta plantilla cargará jQuery como en el caso anterior y tendrá un "
"pequeño formulario donde podemos añadir dos números y un enlace para activar la "
"función en el lado del servidor."

#: ../../patterns/jquery.rst:94
msgid ""
"Note that we are using the :meth:`~werkzeug.datastructures.MultiDict.get` "
"method here which will never fail.  If the key is missing a default value (here "
"``0``) is returned.  Furthermore it can convert values to a specific type (like "
"in our case `int`).  This is especially handy for code that is triggered by a "
"script (APIs, JavaScript etc.) because you don't need special error reporting "
"in that case."
msgstr ""
"Tenga en cuenta que estamos utilizando el método :meth:`~werkzeug."
"datastructures.MultiDict.get` que nunca fallará. Si falta la clave se devuelve "
"un valor por defecto (aquí ``0``). Además puede convertir los valores a un tipo "
"específico (como en nuestro caso `int`). Esto es especialmente útil para el "
"código que se desencadena por un script (APIs, JavaScript, etc.) porque no se "
"necesita un informe de error especial en ese caso."

#: ../../patterns/jquery.rst:102
msgid "The HTML"
msgstr "El HTML"

#: ../../patterns/jquery.rst:104
msgid ""
"Your index.html template either has to extend a :file:`layout.html` template "
"with jQuery loaded and the `$SCRIPT_ROOT` variable set, or do that on the top. "
"Here's the HTML code needed for our little application (:file:`index.html`). "
"Notice that we also drop the script directly into the HTML here.  It is usually "
"a better idea to have that in a separate script file:"
msgstr ""
"Tu plantilla index.html tiene que extender una plantilla :file:`layout.html` "
"con jQuery cargado y la variable `$SCRIPT_ROOT` establecida, o hacerlo en la "
"parte superior. Aquí está el código HTML necesario para nuestra pequeña "
"aplicación (:file:`index.html`). Fíjate en que aquí también soltamos el script "
"directamente en el HTML. Normalmente es mejor tenerlo en un archivo de script "
"separado:"

#: ../../patterns/jquery.rst:131
msgid ""
"I won't go into detail here about how jQuery works, just a very quick "
"explanation of the little bit of code above:"
msgstr ""
"No voy a entrar en detalles aquí sobre cómo funciona jQuery, sólo una "
"explicación muy rápida del pequeño trozo de código anterior:"

#: ../../patterns/jquery.rst:134
msgid ""
"``$(function() { ... })`` specifies code that should run once the browser is "
"done loading the basic parts of the page."
msgstr ""
"``$(function() { ... })`` especifica el código que debe ejecutarse una vez que "
"el navegador haya terminado de cargar las partes básicas de la página."

#: ../../patterns/jquery.rst:136
msgid "``$('selector')`` selects an element and lets you operate on it."
msgstr "``$('selector')`` selecciona un elemento y permite operar sobre él."

#: ../../patterns/jquery.rst:137
msgid ""
"``element.bind('event', func)`` specifies a function that should run when the "
"user clicked on the element.  If that function returns `false`, the default "
"behavior will not kick in (in this case, navigate to the `#` URL)."
msgstr ""
"``element.bind('event', func)`` especifica una función que debe ejecutarse "
"cuando el usuario haga clic en el elemento. Si esa función devuelve `false`, el "
"comportamiento por defecto no se pondrá en marcha (en este caso, navegar a la "
"URL `#`)."

#: ../../patterns/jquery.rst:141
msgid ""
"``$.getJSON(url, data, func)`` sends a ``GET`` request to `url` and will send "
"the contents of the `data` object as query parameters.  Once the data arrived, "
"it will call the given function with the return value as argument.  Note that "
"we can use the `$SCRIPT_ROOT` variable here that we set earlier."
msgstr ""
"``$.getJSON(url, data, func)`` envía una petición ``GET`` a `url` y enviará el "
"contenido del objeto `data` como parámetros de consulta.  Una vez que los datos "
"lleguen, llamará a la función dada con el valor de retorno como argumento. Ten "
"en cuenta que aquí podemos utilizar la variable `$SCRIPT_ROOT` que establecimos "
"anteriormente."

#: ../../patterns/jquery.rst:147
msgid ""
"Check out the :gh:`example source <examples/javascript>` for a full application "
"demonstrating the code on this page, as well as the same thing using "
"``XMLHttpRequest`` and ``fetch``."
msgstr ""
"Echa un vistazo a la fuente de :gh:`ejemplo <examples/javascript>` para una "
"aplicación completa que demuestra el código de esta página, así como lo mismo "
"usando ``XMLHttpRequest`` y ``fetch``."

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../patterns/fabric.rst:2
msgid "Deploying with Fabric"
msgstr "Despliegue con Fabric"

#: ../../patterns/fabric.rst:4
msgid ""
"`Fabric`_ is a tool for Python similar to Makefiles but with the ability to "
"execute commands on a remote server.  In combination with a properly set up "
"Python package (:doc:`packages`) and a good concept for configurations (:doc:`/"
"config`) it is very easy to deploy Flask applications to external servers."
msgstr ""
"`Fabric`_ es una herramienta para Python similar a Makefiles pero con la "
"capacidad de ejecutar comandos en un servidor remoto.  En combinación con un "
"paquete Python correctamente configurado (:doc:`packages`) y un buen concepto "
"de configuraciones (:doc:`/config`) es muy fácil desplegar aplicaciones Flask "
"en servidores externos."

#: ../../patterns/fabric.rst:10
msgid ""
"Before we get started, here a quick checklist of things we have to ensure "
"upfront:"
msgstr ""
"Antes de empezar, aquí una lista rápida de cosas que tenemos que asegurar por "
"adelantado:"

#: ../../patterns/fabric.rst:13
msgid ""
"Fabric 1.0 has to be installed locally.  This tutorial assumes the latest "
"version of Fabric."
msgstr ""
"Fabric 1.0 tiene que ser instalado localmente. Este tutorial asume la última "
"versión de Fabric."

#: ../../patterns/fabric.rst:15
msgid ""
"The application already has to be a package and requires a working :file:`setup."
"py` file (:doc:`distribute`)."
msgstr ""
"La aplicación ya tiene que ser un paquete y requiere un archivo :file:`setup."
"py` que funcione (:doc:`distribute`)."

#: ../../patterns/fabric.rst:17
msgid ""
"In the following example we are using `mod_wsgi` for the remote servers.  You "
"can of course use your own favourite server there, but for this example we "
"chose Apache + `mod_wsgi` because it's very easy to setup and has a simple way "
"to reload applications without root access."
msgstr ""
"En el siguiente ejemplo estamos usando `mod_wsgi` para los servidores remotos. "
"Por supuesto, puedes usar tu propio servidor favorito, pero para este ejemplo "
"elegimos Apache + `mod_wsgi` porque es muy fácil de configurar y tiene una "
"forma sencilla de recargar las aplicaciones sin acceso de root."

#: ../../patterns/fabric.rst:24
msgid "Creating the first Fabfile"
msgstr "Creación del primer Fabfile"

#: ../../patterns/fabric.rst:26
msgid ""
"A fabfile is what controls what Fabric executes.  It is named :file:`fabfile."
"py` and executed by the `fab` command.  All the functions defined in that file "
"will show up as `fab` subcommands.  They are executed on one or more hosts.  "
"These hosts can be defined either in the fabfile or on the command line.  In "
"this case we will add them to the fabfile."
msgstr ""
"Un fabfile es lo que controla lo que ejecuta Fabric. Se llama :file:`fabfile."
"py` y es ejecutado por el comando `fab`. Todas las funciones definidas en ese "
"fichero aparecerán como subcomandos `fab`. Se ejecutan en uno o más hosts. "
"Estos hosts pueden ser definidos tanto en el fabfile como en la línea de "
"comandos. En este caso los añadiremos al fabfile."

#: ../../patterns/fabric.rst:32
msgid ""
"This is a basic first example that has the ability to upload the current source "
"code to the server and install it into a pre-existing virtual environment::"
msgstr ""
"Este es un primer ejemplo básico que tiene la capacidad de subir el código "
"fuente actual al servidor e instalarlo en un entorno virtual preexistente::"

#: ../../patterns/fabric.rst:65
msgid "Running Fabfiles"
msgstr "Ejecución de Fabfiles"

#: ../../patterns/fabric.rst:67
msgid ""
"Now how do you execute that fabfile?  You use the `fab` command.  To deploy the "
"current version of the code on the remote server you would use this command::"
msgstr ""
"Ahora, ¿cómo se ejecuta ese fabfile?  Utiliza el comando `fab`.  Para desplegar "
"la versión actual del código en el servidor remoto usarías este comando::"

#: ../../patterns/fabric.rst:73
msgid ""
"However this requires that our server already has the :file:`/var/www/"
"yourapplication` folder created and :file:`/var/www/yourapplication/env` to be "
"a virtual environment.  Furthermore are we not creating the configuration or ``."
"wsgi`` file on the server.  So how do we bootstrap a new server into our "
"infrastructure?"
msgstr ""
"Sin embargo esto requiere que nuestro servidor ya tenga la carpeta :file:`/var/"
"www/tuaplicacion` creada y :file:`/var/www/tuaplicacion/env` para ser un "
"entorno virtual.  Además no estamos creando el archivo de configuración o ``."
"wsgi`` en el servidor.  Entonces, ¿como arrancamos un nuevo servidor en nuestra "
"infraestructura?"

#: ../../patterns/fabric.rst:79
msgid ""
"This now depends on the number of servers we want to set up.  If we just have "
"one application server (which the majority of applications will have), creating "
"a command in the fabfile for this is overkill.  But obviously you can do that.  "
"In that case you would probably call it `setup` or `bootstrap` and then pass "
"the servername explicitly on the command line::"
msgstr ""
"Esto depende ahora del número de servidores que queramos configurar. Si sólo "
"tenemos un servidor de aplicaciones (que es lo que tendrán la mayoría de las "
"aplicaciones), crear un comando en el fabfile para esto es excesivo. Pero "
"obviamente se puede hacer. En ese caso probablemente lo llamarías `setup` o "
"`bootstrap` y luego pasarías el nombre del servidor explícitamente en la línea "
"de comandos::"

#: ../../patterns/fabric.rst:88
msgid "To setup a new server you would roughly do these steps:"
msgstr "Para configurar un nuevo servidor, se deben seguir los siguientes pasos:"

#: ../../patterns/fabric.rst:90
msgid "Create the directory structure in :file:`/var/www`::"
msgstr "Cree la estructura de directorios en :file:`/var/www`::"

#: ../../patterns/fabric.rst:96
msgid ""
"Upload a new :file:`application.wsgi` file to the server and the configuration "
"file for the application (eg: :file:`application.cfg`)"
msgstr ""
"Suba un nuevo archivo :file:`aplicacion.wsgi` al servidor y el archivo de "
"configuración de la aplicación (por ejemplo: :file:`aplicacion.cfg`)"

#: ../../patterns/fabric.rst:99
msgid ""
"Create a new Apache config for ``yourapplication`` and activate it. Make sure "
"to activate watching for changes of the ``.wsgi`` file so that we can "
"automatically reload the application by touching it. See :doc:`/deploying/"
"mod_wsgi`."
msgstr ""
"Crea una nueva configuración de Apache para ``tuaplicacion`` y actívala. "
"Asegúrate de activar la vigilancia de los cambios del archivo ``.wsgi`` para "
"que podamos recargar automáticamente la aplicación al tocarlo. Ver :doc:`/"
"deploying/mod_wsgi`."

#: ../../patterns/fabric.rst:104
msgid ""
"So now the question is, where do the :file:`application.wsgi` and :file:"
"`application.cfg` files come from?"
msgstr ""
"Así que ahora la pregunta es, ¿de dónde vienen los archivos :file:`aplicacion."
"wsgi` y :file:`aplicacion.cfg`?"

#: ../../patterns/fabric.rst:108
msgid "The WSGI File"
msgstr "El archivo WSGI"

#: ../../patterns/fabric.rst:110
msgid ""
"The WSGI file has to import the application and also to set an environment "
"variable so that the application knows where to look for the config.  This is a "
"short example that does exactly that::"
msgstr ""
"El archivo WSGI tiene que importar la aplicación y también establecer una "
"variable de entorno para que la aplicación sepa dónde buscar la configuración.  "
"Este es un breve ejemplo que hace exactamente eso::"

#: ../../patterns/fabric.rst:118
msgid ""
"The application itself then has to initialize itself like this to look for the "
"config at that environment variable::"
msgstr ""
"La propia aplicación tiene que inicializarse así para buscar la configuración "
"en esa variable de entorno::"

#: ../../patterns/fabric.rst:125
msgid ""
"This approach is explained in detail in the :doc:`/config` section of the "
"documentation."
msgstr ""
"Este enfoque se explica en detalle en la sección :doc:`/config` de la "
"documentación."

#: ../../patterns/fabric.rst:129
msgid "The Configuration File"
msgstr "El archivo de configuración"

#: ../../patterns/fabric.rst:131
msgid ""
"Now as mentioned above, the application will find the correct configuration "
"file by looking up the ``YOURAPPLICATION_CONFIG`` environment variable.  So we "
"have to put the configuration in a place where the application will able to "
"find it.  Configuration files have the unfriendly quality of being different on "
"all computers, so you do not version them usually."
msgstr ""
"Ahora, como se mencionó anteriormente, la aplicación encontrará el archivo de "
"configuración correcto buscando la variable de entorno "
"``tuaplicacion_CONFIG``.  Así que tenemos que poner la configuración en un "
"lugar donde la aplicación sea capaz de encontrarla.  Los ficheros de "
"configuración tienen la antipática cualidad de ser diferentes en todos los "
"ordenadores, por lo que no se suelen versionar."

#: ../../patterns/fabric.rst:138
msgid ""
"A popular approach is to store configuration files for different servers in a "
"separate version control repository and check them out on all servers.  Then "
"symlink the file that is active for the server into the location where it's "
"expected (eg: :file:`/var/www/yourapplication`)."
msgstr ""
"Un enfoque popular es almacenar los archivos de configuración para diferentes "
"servidores en un repositorio de control de versiones separado y comprobarlos en "
"todos los servidores.  Entonces se hace un enlace simbólico al archivo que está "
"activo para el servidor en la ubicación donde se espera (por ejemplo: :file:`/"
"var/www/tuaplicacion`)."

#: ../../patterns/fabric.rst:143
msgid ""
"Either way, in our case here we only expect one or two servers and we can "
"upload them ahead of time by hand."
msgstr ""
"De cualquier forma, en nuestro caso sólo esperamos uno o dos servidores y "
"podemos subirlos antes a mano."

#: ../../patterns/fabric.rst:148
msgid "First Deployment"
msgstr "Primer despliegue"

#: ../../patterns/fabric.rst:150
msgid ""
"Now we can do our first deployment.  We have set up the servers so that they "
"have their virtual environments and activated apache configs.  Now we can pack "
"up the application and deploy it::"
msgstr ""
"Ahora podemos hacer nuestro primer despliegue.  Hemos configurado los "
"servidores para que tengan sus entornos virtuales y activado las "
"configuraciones de apache.  Ahora podemos empaquetar la aplicación y "
"desplegarla::"

#: ../../patterns/fabric.rst:156
msgid ""
"Fabric will now connect to all servers and run the commands as written down in "
"the fabfile.  First it will execute pack so that we have our tarball ready and "
"then it will execute deploy and upload the source code to all servers and "
"install it there.  Thanks to the :file:`setup.py` file we will automatically "
"pull in the required libraries into our virtual environment."
msgstr ""
"Fabric se conectará ahora a todos los servidores y ejecutará los comandos tal y "
"como están escritos en el fabfile. Primero ejecutará pack para que tengamos "
"nuestro tarball listo y luego ejecutará deploy y subirá el código fuente a "
"todos los servidores y lo instalará allí. Gracias al archivo :file:`setup.py` "
"automáticamente se incorporarán las librerías necesarias a nuestro entorno "
"virtual."

#: ../../patterns/fabric.rst:164
msgid "Next Steps"
msgstr "Próximos pasos"

#: ../../patterns/fabric.rst:166
msgid ""
"From that point onwards there is so much that can be done to make deployment "
"actually fun:"
msgstr ""
"A partir de ahí, hay muchas cosas que se pueden hacer para que la implantación "
"sea realmente divertida:"

#: ../../patterns/fabric.rst:169
msgid ""
"Create a `bootstrap` command that initializes new servers.  It could initialize "
"a new virtual environment, setup apache appropriately etc."
msgstr ""
"Crear un comando `bootstrap` que inicialice los nuevos servidores.  Podría "
"inicializar un nuevo entorno virtual, configurar apache adecuadamente, etc."

#: ../../patterns/fabric.rst:171
msgid ""
"Put configuration files into a separate version control repository and symlink "
"the active configs into place."
msgstr ""
"Poner los archivos de configuración en un repositorio de control de versiones "
"separado y hacer un enlace simbólico a las configuraciones activas en su lugar."

#: ../../patterns/fabric.rst:173
msgid ""
"You could also put your application code into a repository and check out the "
"latest version on the server and then install.  That way you can also easily go "
"back to older versions."
msgstr ""
"También podría poner el código de su aplicación en un repositorio y comprobar "
"la última versión en el servidor y luego instalar. De esta manera también "
"puedes volver fácilmente a versiones anteriores."

#: ../../patterns/fabric.rst:176
msgid ""
"hook in testing functionality so that you can deploy to an external server and "
"run the test suite."
msgstr ""
"enganche en la funcionalidad de pruebas para que pueda desplegar a un servidor "
"externo y ejecutar el conjunto de pruebas."

#: ../../patterns/fabric.rst:179
msgid ""
"Working with Fabric is fun and you will notice that it's quite magical to type "
"``fab deploy`` and see your application being deployed automatically to one or "
"more remote servers."
msgstr ""
"Trabajar con Fabric es divertido y te darás cuenta de que es bastante mágico "
"escribir ``fab deploy`` y ver que tu aplicación se despliega automáticamente en "
"uno o más servidores remotos."

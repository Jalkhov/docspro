# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"Language: xd\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0\n"

#: ../../patterns/celery.rst:2
msgid "Celery Background Tasks"
msgstr "Tareas de fondo de Celery"

#: ../../patterns/celery.rst:4
msgid ""
"If your application has a long running task, such as processing some "
"uploaded data or sending email, you don't want to wait for it to finish "
"during a request. Instead, use a task queue to send the necessary data to "
"another process that will run the task in the background while the request "
"returns immediately."
msgstr ""
"Si su aplicación tiene una tarea de larga duración, como el procesamiento de"
" algunos datos cargados o el envío de correo electrónico, no querrá esperar "
"a que termine durante una solicitud. En su lugar, utilice una cola de tareas"
" para enviar los datos necesarios a otro proceso que ejecutará la tarea en "
"segundo plano mientras la solicitud vuelve inmediatamente."

#: ../../patterns/celery.rst:10
msgid ""
"Celery is a powerful task queue that can be used for simple background tasks"
" as well as complex multi-stage programs and schedules. This guide will show"
" you how to configure Celery using Flask, but assumes you've already read "
"the `First Steps with Celery "
"<https://celery.readthedocs.io/en/latest/getting-started/first-steps-with-"
"celery.html>`_ guide in the Celery documentation."
msgstr ""
"Celery es una poderosa cola de tareas que puede ser utilizada para tareas "
"simples en segundo plano, así como para programas complejos de varias etapas"
" y programaciones. Esta guía le mostrará cómo configurar Celery usando "
"Flask, pero asume que ya ha leído la guía `Primeros pasos con Celery "
"<https://celery.readthedocs.io/en/latest/getting-started/first-steps-with-"
"celery.html>`_ en la documentación de Celery."

#: ../../patterns/celery.rst:17
msgid "Install"
msgstr "Instalar"

#: ../../patterns/celery.rst:19
msgid "Celery is a separate Python package. Install it from PyPI using pip::"
msgstr ""
"Celery es un paquete independiente de Python. Instálalo desde PyPI usando "
"pip::"

#: ../../patterns/celery.rst:24
msgid "Configure"
msgstr "Configurar"

#: ../../patterns/celery.rst:26
msgid ""
"The first thing you need is a Celery instance, this is called the celery "
"application.  It serves the same purpose as the :class:`~flask.Flask` object"
" in Flask, just for Celery.  Since this instance is used as the entry-point "
"for everything you want to do in Celery, like creating tasks and managing "
"workers, it must be possible for other modules to import it."
msgstr ""
"Lo primero que necesitas es una instancia de Celery, esto se llama la "
"aplicación Celery. Sirve el mismo propósito que el objeto "
":class:`~flask.Flask` en Flask, sólo que para Celery. Dado que esta "
"instancia se utiliza como punto de entrada para todo lo que quieres hacer en"
" Celery, como la creación de tareas y la gestión de los trabajadores, debe "
"ser posible que otros módulos lo importen."

#: ../../patterns/celery.rst:32
msgid ""
"For instance you can place this in a ``tasks`` module.  While you can use "
"Celery without any reconfiguration with Flask, it becomes a bit nicer by "
"subclassing tasks and adding support for Flask's application contexts and "
"hooking it up with the Flask configuration."
msgstr ""
"Por ejemplo, puedes colocar esto en un módulo ``tasks``. Aunque puedes usar "
"Celery sin ninguna reconfiguración con Flask, se vuelve un poco más "
"agradable subclasificando tasks y añadiendo soporte para los contextos de "
"aplicación de Flask y enganchándolo con la configuración de Flask."

#: ../../patterns/celery.rst:37
msgid "This is all that is necessary to integrate Celery with Flask:"
msgstr "Esto es todo lo que se necesita para integrar Celery con Flask:"

#: ../../patterns/celery.rst:55
msgid ""
"The function creates a new Celery object, configures it with the broker from"
" the application config, updates the rest of the Celery config from the "
"Flask config and then creates a subclass of the task that wraps the task "
"execution in an application context."
msgstr ""
"La función crea un nuevo objeto Celery, lo configura con el broker desde la "
"configuración de la aplicación, actualiza el resto de la configuración de "
"Celery desde la configuración de Flask y luego crea una subclase de la tarea"
" que envuelve la ejecución de la tarea en un contexto de aplicación."

#: ../../patterns/celery.rst:61
msgid ""
"Celery 5.x deprecated uppercase configuration keys, and 6.x will remove "
"them. See their official `migration guide`_."
msgstr ""
"Celery 5.x desaprobó las claves de configuración en mayúsculas, y la 6.x las"
" eliminará. Consulte su `guía de migración`_ oficial."

#: ../../patterns/celery.rst:67
msgid "An example task"
msgstr "Una tarea de ejemplo"

#: ../../patterns/celery.rst:69
msgid ""
"Let's write a task that adds two numbers together and returns the result. We"
" configure Celery's broker and backend to use Redis, create a ``celery`` "
"application using the factory from above, and then use it to define the "
"task. ::"
msgstr ""
"Vamos a escribir una tarea que sume dos números y devuelva el resultado. "
"Configuramos el broker y el backend de Celery para usar Redis, creamos una "
"aplicación ``celery`` usando la fábrica de arriba, y luego la usamos para "
"definir la tarea:"

#: ../../patterns/celery.rst:86
msgid "This task can now be called in the background::"
msgstr "Esta tarea puede llamarse ahora en segundo plano::"

#: ../../patterns/celery.rst:92
msgid "Run a worker"
msgstr "Ejecutar un trabajador"

#: ../../patterns/celery.rst:94
msgid ""
"If you jumped in and already executed the above code you will be "
"disappointed to learn that ``.wait()`` will never actually return. That's "
"because you also need to run a Celery worker to receive and execute the "
"task. ::"
msgstr ""
"Si te has lanzado y ya has ejecutado el código anterior, te decepcionará "
"saber que ``.wait()`` nunca devolverá realmente. Esto se debe a que también "
"es necesario ejecutar un trabajador Celery para recibir y ejecutar la tarea "
"::"

#: ../../patterns/celery.rst:101
msgid ""
"The ``your_application`` string has to point to your application's package "
"or module that creates the ``celery`` object."
msgstr ""
"La cadena ``your_application`` tiene que apuntar al paquete o módulo de tu "
"aplicación que crea el objeto ``celery``."

#: ../../patterns/celery.rst:104
msgid ""
"Now that the worker is running, ``wait`` will return the result once the "
"task is finished."
msgstr ""
"Ahora que el trabajador se está ejecutando, ``wait`` devolverá el resultado "
"una vez que la tarea haya terminado."

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../extensiondev.rst:2
msgid "Flask Extension Development"
msgstr "Desarrollo de extensiones de Flask"

#: ../../extensiondev.rst:4
msgid ""
"Flask, being a microframework, often requires some repetitive steps to get "
"a third party library working. Many such extensions are already available "
"on `PyPI`_."
msgstr ""
"Flask, al ser un microframework, a menudo requiere algunos pasos "
"repetitivos para hacer funcionar una biblioteca de terceros. Muchas de "
"estas extensiones ya están disponibles en `PyPI`_."

#: ../../extensiondev.rst:8
msgid ""
"If you want to create your own Flask extension for something that does not "
"exist yet, this guide to extension development will help you get your "
"extension running in no time and to feel like users would expect your "
"extension to behave."
msgstr ""
"Si quieres crear tu propia extensión de Flask para algo que aún no existe, "
"esta guía de desarrollo de extensiones te ayudará a que tu extensión "
"funcione en poco tiempo y a que se comporte como los usuarios esperan que "
"se comporte tu extensión."

#: ../../extensiondev.rst:14
msgid "Anatomy of an Extension"
msgstr "Anatomía de una extensión"

#: ../../extensiondev.rst:16
msgid ""
"Extensions are all located in a package called ``flask_something`` where "
"\"something\" is the name of the library you want to bridge.  So for "
"example if you plan to add support for a library named `simplexml` to "
"Flask, you would name your extension's package ``flask_simplexml``."
msgstr ""
"Las extensiones se ubican en un paquete llamado ``flask_something`` donde "
"\"algo\" es el nombre de la biblioteca que quieres puentear.  Así que, por "
"ejemplo, si planeas añadir soporte para una biblioteca llamada `simplexml` "
"a Flask, llamarías al paquete de tu extensión ``flask_simplexml``."

#: ../../extensiondev.rst:21
msgid ""
"The name of the actual extension (the human readable name) however would be "
"something like \"Flask-SimpleXML\".  Make sure to include the name \"Flask"
"\" somewhere in that name and that you check the capitalization. This is "
"how users can then register dependencies to your extension in their :file:"
"`setup.py` files."
msgstr ""
"Sin embargo, el nombre de la extensión real (el nombre legible para los "
"humanos) sería algo así como \"Flask-SimpleXML\". Asegúrate de incluir el "
"nombre \"Flask\" en alguna parte de ese nombre y de comprobar las "
"mayúsculas. Así es como los usuarios pueden registrar dependencias de su "
"extensión en sus archivos :file:`setup.py`."

#: ../../extensiondev.rst:27
msgid ""
"But what do extensions look like themselves?  An extension has to ensure "
"that it works with multiple Flask application instances at once.  This is a "
"requirement because many people will use patterns like the :doc:`/patterns/"
"appfactories` pattern to create their application as needed to aid "
"unittests and to support multiple configurations. Because of that it is "
"crucial that your application supports that kind of behavior."
msgstr ""
"Pero, ¿cómo son las extensiones en sí mismas? Una extensión tiene que "
"asegurar que funciona con múltiples instancias de la aplicación Flask a la "
"vez. Esto es un requisito porque mucha gente utilizará patrones como el "
"patrón :doc:`/patterns/appfactories` para crear su aplicación según sea "
"necesario para ayudar a los unittests y para soportar múltiples "
"configuraciones. Por eso es crucial que tu aplicación soporte ese tipo de "
"comportamiento."

#: ../../extensiondev.rst:35
msgid ""
"Most importantly the extension must be shipped with a :file:`setup.py` file "
"and registered on PyPI.  Also the development checkout link should work so "
"that people can easily install the development version into their "
"virtualenv without having to download the library by hand."
msgstr ""
"Lo más importante es que la extensión debe ser enviada con un archivo :file:"
"`setup.py` y registrada en PyPI. También el enlace de desarrollo debe "
"funcionar para que la gente pueda instalar fácilmente la versión de "
"desarrollo en su virtualenv sin tener que descargar la biblioteca a mano."

#: ../../extensiondev.rst:40
msgid ""
"Flask extensions must be licensed under a BSD, MIT or more liberal license "
"in order to be listed in the Flask Extension Registry.  Keep in mind that "
"the Flask Extension Registry is a moderated place and libraries will be "
"reviewed upfront if they behave as required."
msgstr ""
"Las extensiones de Flask deben estar licenciadas bajo una licencia BSD, MIT "
"o más liberal para poder ser listadas en el Registro de Extensiones de "
"Flask. Tenga en cuenta que el Registro de Extensiones de Flask es un lugar "
"moderado y las bibliotecas serán revisadas por adelantado si se comportan "
"como es debido."

#: ../../extensiondev.rst:46
msgid "\"Hello Flaskext!\""
msgstr "\"¡Hola Flaskext!\""

#: ../../extensiondev.rst:48
msgid ""
"So let's get started with creating such a Flask extension.  The extension "
"we want to create here will provide very basic support for SQLite3."
msgstr ""
"Así que vamos a empezar con la creación de dicha extensión de Flask. La "
"extensión que queremos crear aquí proporcionará un soporte muy básico para "
"SQLite3."

#: ../../extensiondev.rst:51
msgid "First we create the following folder structure::"
msgstr "Primero creamos la siguiente estructura de carpetas::"

#: ../../extensiondev.rst:58
msgid "Here's the contents of the most important files:"
msgstr "Aquí está el contenido de los archivos más importantes:"

#: ../../extensiondev.rst:61
msgid "setup.py"
msgstr "setup.py"

#: ../../extensiondev.rst:63
msgid ""
"The next file that is absolutely required is the :file:`setup.py` file "
"which is used to install your Flask extension.  The following contents are "
"something you can work with::"
msgstr ""
"El siguiente archivo que es absolutamente necesario es el archivo :file:"
"`setup.py` que se utiliza para instalar su extensión Flask. El siguiente "
"contenido es algo con lo que puedes trabajar::"

#: ../../extensiondev.rst:106
msgid ""
"That's a lot of code but you can really just copy/paste that from existing "
"extensions and adapt."
msgstr ""
"Eso es mucho código, pero en realidad se puede copiar/pegar eso de las "
"extensiones existentes y adaptarlo."

#: ../../extensiondev.rst:110
msgid "flask_sqlite3.py"
msgstr "flask_sqlite3.py"

#: ../../extensiondev.rst:112
msgid ""
"Now this is where your extension code goes.  But how exactly should such an "
"extension look like?  What are the best practices?  Continue reading for "
"some insight."
msgstr ""
"Aquí es donde va su código de extensión. Pero, ¿cómo debe ser exactamente "
"esa extensión? ¿Cuáles son las mejores prácticas? Siga leyendo para obtener "
"algunas ideas."

#: ../../extensiondev.rst:117
msgid "Initializing Extensions"
msgstr "Inicialización de las extensiones"

#: ../../extensiondev.rst:119
msgid ""
"Many extensions will need some kind of initialization step.  For example, "
"consider an application that's currently connecting to SQLite like the "
"documentation suggests (:doc:`/patterns/sqlite3`). So how does the "
"extension know the name of the application object?"
msgstr ""
"Muchas extensiones necesitarán algún tipo de paso de inicialización. Por "
"ejemplo, considere una aplicación que se está conectando a SQLite como "
"sugiere la documentación (:doc:`/patterns/sqlite3`). Entonces, ¿cómo sabe "
"la extensión el nombre del objeto de la aplicación?"

#: ../../extensiondev.rst:124
msgid "Quite simple: you pass it to it."
msgstr "Muy sencillo: Se lo pasas."

#: ../../extensiondev.rst:126
msgid "There are two recommended ways for an extension to initialize:"
msgstr "Hay dos formas recomendadas para que una extensión se inicialice:"

#: ../../extensiondev.rst:128
msgid "initialization functions:"
msgstr "funciones de inicialización:"

#: ../../extensiondev.rst:130
msgid ""
"If your extension is called `helloworld` you might have a function called "
"``init_helloworld(app[, extra_args])`` that initializes the extension for "
"that application.  It could attach before / after handlers etc."
msgstr ""
"Si tu extensión se llama `helloworld` podrías tener una función llamada "
"``init_helloworld(app[, extra_args])`` que inicialice la extensión para esa "
"aplicación. Podría adjuntar manejadores antes/después, etc."

#: ../../extensiondev.rst:135
msgid "classes:"
msgstr "classes:"

#: ../../extensiondev.rst:137
msgid ""
"Classes work mostly like initialization functions but can later be used to "
"further change the behavior."
msgstr ""
"Las clases funcionan principalmente como funciones de inicialización, pero "
"pueden utilizarse posteriormente para modificar el comportamiento."

#: ../../extensiondev.rst:140
msgid ""
"What to use depends on what you have in mind.  For the SQLite 3 extension "
"we will use the class-based approach because it will provide users with an "
"object that handles opening and closing database connections."
msgstr ""
"Qué usar depende de lo que tengas en mente. Para la extensión de SQLite 3 "
"utilizaremos el enfoque basado en clases porque proporcionará a los "
"usuarios un objeto que maneja la apertura y el cierre de las conexiones a "
"la base de datos."

#: ../../extensiondev.rst:144
msgid ""
"When designing your classes, it's important to make them easily reusable at "
"the module level. This means the object itself must not under any "
"circumstances store any application specific state and must be shareable "
"between different applications."
msgstr ""
"Cuando diseñes tus clases, es importante que sean fácilmente reutilizables "
"a nivel de módulo. Esto significa que el objeto en sí mismo no debe "
"almacenar bajo ninguna circunstancia ningún estado específico de la "
"aplicación y debe ser compartible entre diferentes aplicaciones."

#: ../../extensiondev.rst:150
msgid "The Extension Code"
msgstr "El Código de la Extensión"

#: ../../extensiondev.rst:152
msgid "Here's the contents of the `flask_sqlite3.py` for copy/paste::"
msgstr "Aquí está el contenido del `flask_sqlite3.py` para copiar/pegar::"

#: ../../extensiondev.rst:185
msgid "So here's what these lines of code do:"
msgstr "Esto es lo que hacen estas líneas de código:"

#: ../../extensiondev.rst:187
msgid ""
"The ``__init__`` method takes an optional app object and, if supplied, will "
"call ``init_app``."
msgstr ""
"El método ``__init__`` toma un objeto app opcional y, si se suministra, "
"llamará a ``init_app``."

#: ../../extensiondev.rst:189
msgid ""
"The ``init_app`` method exists so that the ``SQLite3`` object can be "
"instantiated without requiring an app object.  This method supports the "
"factory pattern for creating applications.  The ``init_app`` will set the "
"configuration for the database, defaulting to an in memory database if no "
"configuration is supplied.  In addition, the ``init_app`` method attaches "
"the ``teardown`` handler."
msgstr ""
"El método ``init_app`` existe para que el objeto ``SQLite3`` pueda ser "
"instanciado sin requerir un objeto app.  Este método soporta el patrón de "
"fábrica para crear aplicaciones. El método ``init_app`` establecerá la "
"configuración de la base de datos, por defecto una base de datos en memoria "
"si no se proporciona ninguna configuración. Además, el método ``init_app`` "
"adjunta el manejador ``teardown``."

#: ../../extensiondev.rst:195
msgid "Next, we define a ``connect`` method that opens a database connection."
msgstr ""
"A continuación, definimos un método ``connect`` que abre una conexión a la "
"base de datos."

#: ../../extensiondev.rst:196
msgid ""
"Finally, we add a ``connection`` property that on first access opens the "
"database connection and stores it on the context.  This is also the "
"recommended way to handling resources: fetch resources lazily the first "
"time they are used."
msgstr ""
"Finalmente, añadimos una propiedad ``connection`` que en el primer acceso "
"abre la conexión a la base de datos y la almacena en el contexto.  Esta es "
"también la forma recomendada de manejar los recursos: obtener los recursos "
"perezosamente la primera vez que se usan."

#: ../../extensiondev.rst:201
msgid ""
"Note here that we're attaching our database connection to the top "
"application context via ``_app_ctx_stack.top``. Extensions should use the "
"top context for storing their own information with a sufficiently complex "
"name."
msgstr ""
"Ten en cuenta que estamos adjuntando nuestra conexión de base de datos al "
"contexto superior de la aplicación a través de ``_app_ctx_stack.top``. Las "
"extensiones deben utilizar el contexto superior para almacenar su propia "
"información con un nombre suficientemente complejo."

#: ../../extensiondev.rst:206
msgid ""
"So why did we decide on a class-based approach here?  Because using our "
"extension looks something like this::"
msgstr ""
"Entonces, ¿por qué nos decidimos por un enfoque basado en clases? Porque el "
"uso de nuestra extensión se parece a esto::"

#: ../../extensiondev.rst:216
msgid "You can then use the database from views like this::"
msgstr "A continuación, puede utilizar la base de datos de las vistas así::"

#: ../../extensiondev.rst:223
msgid ""
"Likewise if you are outside of a request you can use the database by "
"pushing an app context::"
msgstr ""
"Del mismo modo, si usted está fuera de una solicitud puede utilizar la base "
"de datos empujando un contexto de la aplicación::"

#: ../../extensiondev.rst:230
msgid ""
"At the end of the ``with`` block the teardown handles will be executed "
"automatically."
msgstr ""
"Al final del bloque ``with`` se ejecutarán automáticamente las asas de "
"desmontaje."

#: ../../extensiondev.rst:233
msgid ""
"Additionally, the ``init_app`` method is used to support the factory "
"pattern for creating apps::"
msgstr ""
"Además, el método ``init_app`` se utiliza para soportar el patrón de "
"fábrica para la creación de aplicaciones::"

#: ../../extensiondev.rst:241
msgid ""
"Keep in mind that supporting this factory pattern for creating apps is "
"required for approved flask extensions (described below)."
msgstr ""
"Ten en cuenta que el soporte de este patrón de fábrica para la creación de "
"aplicaciones es necesario para las extensiones de flask aprobadas "
"(descritas a continuación)."

#: ../../extensiondev.rst:244
msgid "Note on ``init_app``"
msgstr "Nota sobre ``init_app``"

#: ../../extensiondev.rst:246
msgid ""
"As you noticed, ``init_app`` does not assign ``app`` to ``self``.  This is "
"intentional!  Class based Flask extensions must only store the application "
"on the object when the application was passed to the constructor.  This "
"tells the extension: I am not interested in using multiple applications."
msgstr ""
"Como has notado, ``init_app`` no asigna ``app`` a ``self``. Esto es "
"intencionado. Las extensiones de Flask basadas en clases sólo deben "
"almacenar la aplicación en el objeto cuando la aplicación fue pasada al "
"constructor. Esto le dice a la extensión: No estoy interesado en usar "
"múltiples aplicaciones."

#: ../../extensiondev.rst:252
msgid ""
"When the extension needs to find the current application and it does not "
"have a reference to it, it must either use the :data:`~flask.current_app` "
"context local or change the API in a way that you can pass the application "
"explicitly."
msgstr ""
"Cuando la extensión necesita encontrar la aplicación actual y no tiene una "
"referencia a ella, debe usar el contexto local :data:`~flask.current_app` o "
"cambiar la API de manera que pueda pasar la aplicación explícitamente."

#: ../../extensiondev.rst:259
msgid "Using _app_ctx_stack"
msgstr "Uso de _app_ctx_stack"

#: ../../extensiondev.rst:261
msgid ""
"In the example above, before every request, a ``sqlite3_db`` variable is "
"assigned to ``_app_ctx_stack.top``.  In a view function, this variable is "
"accessible using the ``connection`` property of ``SQLite3``.  During the "
"teardown of a request, the ``sqlite3_db`` connection is closed.  By using "
"this pattern, the *same* connection to the sqlite3 database is accessible "
"to anything that needs it for the duration of the request."
msgstr ""
"En el ejemplo anterior, antes de cada petición, se asigna una variable "
"``sqlite3_db`` a ``_app_ctx_stack.top``. En una función de vista, esta "
"variable es accesible usando la propiedad ``connection`` de ``SQLite3``. "
"Durante el desmontaje de una petición, la conexión ``sqlite3_db`` se "
"cierra. Usando este patrón, la *misma* conexión a la base de datos sqlite3 "
"es accesible a cualquier cosa que la necesite mientras dure la petición."

#: ../../extensiondev.rst:270
msgid "Learn from Others"
msgstr "Aprender de los demás"

#: ../../extensiondev.rst:272
msgid ""
"This documentation only touches the bare minimum for extension development. "
"If you want to learn more, it's a very good idea to check out existing "
"extensions on the `PyPI`_.  If you feel lost there is still the "
"`mailinglist`_ and the `Discord server`_ to get some ideas for nice looking "
"APIs.  Especially if you do something nobody before you did, it might be a "
"very good idea to get some more input.  This not only generates useful "
"feedback on what people might want from an extension, but also avoids "
"having multiple developers working in isolation on pretty much the same "
"problem."
msgstr ""
"Esta documentación sólo toca lo mínimo para el desarrollo de extensiones. "
"Si quieres aprender más, es una muy buena idea revisar las extensiones "
"existentes en la `PyPI`_. Si te sientes perdido todavía está la "
"`mailinglist`_ y el `Discord server`_ para obtener algunas ideas de APIs de "
"buen aspecto. Especialmente si haces algo que nadie hizo antes, puede ser "
"una muy buena idea para obtener algunas aportaciones más. Esto no sólo "
"genera una retroalimentación útil sobre lo que la gente podría querer de "
"una extensión, sino que también evita tener múltiples desarrolladores "
"trabajando de forma aislada en prácticamente el mismo problema."

#: ../../extensiondev.rst:281
msgid ""
"Remember: good API design is hard, so introduce your project on the mailing "
"list, and let other developers give you a helping hand with designing the "
"API."
msgstr ""
"Recuerda: Un buen diseño de API es difícil, así que presenta tu proyecto en "
"la lista de correo y deja que otros desarrolladores te echen una mano con "
"el diseño de la API."

#: ../../extensiondev.rst:285
msgid ""
"The best Flask extensions are extensions that share common idioms for the "
"API.  And this can only work if collaboration happens early."
msgstr ""
"Las mejores extensiones de Flask son las que comparten modismos comunes "
"para la API.  Y esto solo puede funcionar si la colaboración se produce "
"desde el principio."

#: ../../extensiondev.rst:289
msgid "Approved Extensions"
msgstr "Extensiones aprobadas"

#: ../../extensiondev.rst:291
msgid ""
"Flask previously had the concept of approved extensions. These came with "
"some vetting of support and compatibility. While this list became too "
"difficult to maintain over time, the guidelines are still relevant to all "
"extensions maintained and developed today, as they help the Flask ecosystem "
"remain consistent and compatible."
msgstr ""
"Flask tenía anteriormente el concepto de extensiones aprobadas. Éstas "
"venían acompañadas de una lista de soporte y compatibilidad. Aunque esta "
"lista se volvió demasiado difícil de mantener con el tiempo, las "
"directrices siguen siendo relevantes para todas las extensiones mantenidas "
"y desarrolladas hoy en día, ya que ayudan a que el ecosistema Flask siga "
"siendo consistente y compatible."

#: ../../extensiondev.rst:297
msgid ""
"An approved Flask extension requires a maintainer. In the event an "
"extension author would like to move beyond the project, the project should "
"find a new maintainer and transfer access to the repository, documentation, "
"PyPI, and any other services. If no maintainer is available, give access to "
"the Pallets core team."
msgstr ""
"Una extensión Flask aprobada requiere un mantenedor. En el caso de que el "
"autor de una extensión quiera dejar el proyecto, el proyecto debe encontrar "
"un nuevo mantenedor y transferir el acceso al repositorio, la "
"documentación, PyPI y cualquier otro servicio. Si no hay un mantenedor "
"disponible, dar acceso al equipo central de Pallets."

#: ../../extensiondev.rst:302
msgid ""
"The naming scheme is *Flask-ExtensionName* or *ExtensionName-Flask*. It "
"must provide exactly one package or module named ``flask_extension_name``."
msgstr ""
"El esquema de nomenclatura es *Flask-ExtensionName* o *ExtensionName-"
"Flask*. Debe proporcionar exactamente un paquete o módulo llamado "
"``nombre_de_la_extensión``."

#: ../../extensiondev.rst:305
msgid ""
"The extension must be BSD or MIT licensed. It must be open source and "
"publicly available."
msgstr ""
"La extensión debe tener licencia BSD o MIT. Debe ser de código abierto y "
"estar disponible públicamente."

#: ../../extensiondev.rst:307
msgid "The extension's API must have the following characteristics:"
msgstr "La API de la extensión debe tener las siguientes características:"

#: ../../extensiondev.rst:309
msgid ""
"It must support multiple applications running in the same Python process. "
"Use ``current_app`` instead of ``self.app``, store configuration and state "
"per application instance."
msgstr ""
"Debe soportar múltiples aplicaciones que se ejecuten en el mismo proceso de "
"Python. Usar ``current_app`` en lugar de ``self.app``, almacenar la "
"configuración y el estado por instancia de aplicación."

#: ../../extensiondev.rst:312
msgid ""
"It must be possible to use the factory pattern for creating applications. "
"Use the ``ext.init_app()`` pattern."
msgstr ""
"Debe ser posible utilizar el patrón de fábrica para crear aplicaciones. "
"Utiliza el patrón ``ext.init_app()``."

#: ../../extensiondev.rst:315
msgid ""
"From a clone of the repository, an extension with its dependencies must be "
"installable with ``pip install -e .``."
msgstr ""
"Desde un clon del repositorio, una extensión con sus dependencias debe ser "
"instalable con ``pip install -e .``."

#: ../../extensiondev.rst:317
msgid ""
"It must ship a testing suite that can be invoked with ``tox -e py`` or "
"``pytest``. If not using ``tox``, the test dependencies should be specified "
"in a ``requirements.txt`` file. The tests must be part of the sdist "
"distribution."
msgstr ""
"Debe enviar un conjunto de pruebas que pueda ser invocado con ``tox -e py`` "
"o ``pytest``. Si no se utiliza ``tox``, las dependencias de las pruebas "
"deben especificarse en un archivo ``requirements.txt``. Los tests deben "
"formar parte de la distribución de sdist."

#: ../../extensiondev.rst:321
msgid ""
"The documentation must use the ``flask`` theme from the `Official Pallets "
"Themes`_. A link to the documentation or project website must be in the "
"PyPI metadata or the readme."
msgstr ""
"La documentación debe utilizar el tema ``flask`` de la sección `Official "
"Pallets Themes`_. Un enlace a la documentación o al sitio web del proyecto "
"debe estar en los metadatos de PyPI o en el readme."

#: ../../extensiondev.rst:324
msgid ""
"For maximum compatibility, the extension should support the same versions "
"of Python that Flask supports. 3.6+ is recommended as of 2020. Use "
"``python_requires=\">= 3.6\"`` in ``setup.py`` to indicate supported "
"versions."
msgstr ""
"Para una máxima compatibilidad, la extensión debe soportar las mismas "
"versiones de Python que soporta Flask. Se recomienda la versión 3.6+ a "
"partir de 2020. Utiliza ``python_requires=\">= 3.6\"`` en ``setup.py`` para "
"indicar las versiones soportadas."

# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../becomingbig.rst:2
msgid "Becoming Big"
msgstr "Convertirse en algo grande"

#: ../../becomingbig.rst:4
msgid ""
"Here are your options when growing your codebase or scaling your "
"application."
msgstr ""
"Éstas son las opciones que tienes cuando haces crecer tu código base o "
"escalas tu aplicación."

#: ../../becomingbig.rst:7
msgid "Read the Source."
msgstr "Lea la fuente."

#: ../../becomingbig.rst:9
msgid ""
"Flask started in part to demonstrate how to build your own framework on "
"top of existing well-used tools Werkzeug (WSGI) and Jinja (templating), "
"and as it developed, it became useful to a wide audience.  As you grow "
"your codebase, don't just use Flask -- understand it.  Read the source.  "
"Flask's code is written to be read; its documentation is published so "
"you can use its internal APIs.  Flask sticks to documented APIs in "
"upstream libraries, and documents its internal utilities so that you can "
"find the hook points needed for your project."
msgstr ""
"Flask comenzó en parte para demostrar cómo construir su propio marco de "
"trabajo en la parte superior de las herramientas existentes bien "
"utilizados Werkzeug (WSGI) y Jinja (plantillas), y como se desarrolló, "
"se convirtió en útil para una amplia audiencia. A medida que creas tu "
"código base, no te limites a usar Flask: compréndelo. Lee el código "
"fuente. El código de Flask está escrito para ser leído; su documentación "
"se publica para que puedas utilizar sus APIs internas. Flask se ciñe a "
"las APIs documentadas en las bibliotecas upstream, y documenta sus "
"utilidades internas para que puedas encontrar los puntos de enganche "
"necesarios para tu proyecto."

#: ../../becomingbig.rst:19
msgid "Hook. Extend."
msgstr "Enganchar. Ampliar."

#: ../../becomingbig.rst:21
msgid ""
"The :doc:`/api` docs are full of available overrides, hook points, and :"
"doc:`/signals`. You can provide custom classes for things like the "
"request and response objects. Dig deeper on the APIs you use, and look "
"for the customizations which are available out of the box in a Flask "
"release. Look for ways in which your project can be refactored into a "
"collection of utilities and Flask extensions. Explore the many :doc:`/"
"extensions` in the community, and look for patterns to build your own "
"extensions if you do not find the tools you need."
msgstr ""
"Los documentos :doc:`/api` están llenos de anulaciones disponibles, "
"puntos de enganche y :doc:`/signals`. Puedes proporcionar clases "
"personalizadas para cosas como los objetos de solicitud y respuesta. "
"Profundiza en las APIs que utilizas, y busca las personalizaciones que "
"están disponibles fuera de la caja en una versión de Flask. Busca formas "
"de refactorizar tu proyecto en una colección de utilidades y extensiones "
"de Flask. Explora los muchos :doc:`/extensions` de la comunidad, y busca "
"patrones para construir tus propias extensiones si no encuentras las "
"herramientas que necesitas."

#: ../../becomingbig.rst:31
msgid "Subclass."
msgstr "Subclase."

#: ../../becomingbig.rst:33
msgid ""
"The :class:`~flask.Flask` class has many methods designed for "
"subclassing. You can quickly add or customize behavior by subclassing :"
"class:`~flask.Flask` (see the linked method docs) and using that "
"subclass wherever you instantiate an application class. This works well "
"with :doc:`/patterns/appfactories`. See :doc:`/patterns/subclassing` for "
"an example."
msgstr ""
"La clase :class:`~flask.Flask` tiene muchos métodos diseñados para "
"subclasificar. Puedes añadir o personalizar rápidamente el "
"comportamiento subclasificando :class:`~flask.Flask` (ver la "
"documentación de los métodos enlazados) y utilizando esa subclase "
"siempre que instales una clase de aplicación. Esto funciona bien con :"
"doc:`/patterns/appfactories`. Ver :doc:`/patterns/subclassing` para un "
"ejemplo."

#: ../../becomingbig.rst:40
msgid "Wrap with middleware."
msgstr "Envolver con middleware."

#: ../../becomingbig.rst:42
msgid ""
"The :doc:`/patterns/appdispatch` pattern shows in detail how to apply "
"middleware. You can introduce WSGI middleware to wrap your Flask "
"instances and introduce fixes and changes at the layer between your "
"Flask application and your HTTP server. Werkzeug includes several "
"`middlewares <https://werkzeug.palletsprojects.com/middleware/>`_."
msgstr ""
"El patrón :doc:`/patterns/appdispatch` muestra en detalle cómo aplicar "
"middleware. Puedes introducir middleware WSGI para envolver tus "
"instancias de Flask e introducir correcciones y cambios en la capa entre "
"tu aplicación Flask y tu servidor HTTP. Werkzeug incluye varios "
"`middlewares` <https://werkzeug.palletsprojects.com/middleware/>`."

#: ../../becomingbig.rst:49
msgid "Fork."
msgstr "Fork."

#: ../../becomingbig.rst:51
msgid ""
"If none of the above options work, fork Flask.  The majority of code of "
"Flask is within Werkzeug and Jinja2.  These libraries do the majority of "
"the work. Flask is just the paste that glues those together.  For every "
"project there is the point where the underlying framework gets in the "
"way (due to assumptions the original developers had).  This is natural "
"because if this would not be the case, the framework would be a very "
"complex system to begin with which causes a steep learning curve and a "
"lot of user frustration."
msgstr ""
"Si ninguna de las opciones anteriores funciona, haz un fork de Flask. La "
"mayor parte del código de Flask está dentro de Werkzeug y Jinja2. Estas "
"bibliotecas hacen la mayor parte del trabajo. Flask es sólo la pasta que "
"las pega. Para cada proyecto hay un punto en el que el framework "
"subyacente se interpone (debido a las suposiciones que tenían los "
"desarrolladores originales). Esto es natural porque si este no fuera el "
"caso, el marco sería un sistema muy complejo para empezar, lo que "
"provoca una curva de aprendizaje empinada y mucha frustración del "
"usuario."

#: ../../becomingbig.rst:59
msgid ""
"This is not unique to Flask.  Many people use patched and modified "
"versions of their framework to counter shortcomings.  This idea is also "
"reflected in the license of Flask.  You don't have to contribute any "
"changes back if you decide to modify the framework."
msgstr ""
"Esto no es exclusivo de Flask. Mucha gente utiliza versiones parcheadas "
"y modificadas de su marco de trabajo para contrarrestar las "
"deficiencias. Esta idea también se refleja en la licencia de Flask. No "
"tienes que contribuir con ningún cambio si decides modificar el "
"framework."

#: ../../becomingbig.rst:64
msgid ""
"The downside of forking is of course that Flask extensions will most "
"likely break because the new framework has a different import name. "
"Furthermore integrating upstream changes can be a complex process, "
"depending on the number of changes.  Because of that, forking should be "
"the very last resort."
msgstr ""
"La desventaja de la bifurcación es, por supuesto, que las extensiones de "
"Flask probablemente se romperán porque el nuevo marco tiene un nombre de "
"importación diferente. Además, la integración de los cambios de la "
"corriente ascendente puede ser un proceso complejo, dependiendo del "
"número de cambios. Por ello, la bifurcación debería ser el último "
"recurso."

#: ../../becomingbig.rst:71
msgid "Scale like a pro."
msgstr "Escala como un profesional."

#: ../../becomingbig.rst:73
msgid ""
"For many web applications the complexity of the code is less an issue "
"than the scaling for the number of users or data entries expected.  "
"Flask by itself is only limited in terms of scaling by your application "
"code, the data store you want to use and the Python implementation and "
"webserver you are running on."
msgstr ""
"Para muchas aplicaciones web la complejidad del código es menos un "
"problema que el escalado para el número de usuarios o entradas de datos "
"esperados. Flask por sí mismo sólo está limitado en términos de escalado "
"por el código de su aplicación, el almacén de datos que desea utilizar y "
"la implementación de Python y el servidor web que está ejecutando."

#: ../../becomingbig.rst:79
msgid ""
"Scaling well means for example that if you double the amount of servers "
"you get about twice the performance.  Scaling bad means that if you add "
"a new server the application won't perform any better or would not even "
"support a second server."
msgstr ""
"Escalar bien significa, por ejemplo, que si se duplica el número de "
"servidores se obtiene el doble de rendimiento. Escalar mal significa que "
"si añades un nuevo servidor, la aplicación no tendrá un mejor "
"rendimiento o ni siquiera soportará un segundo servidor."

#: ../../becomingbig.rst:84
msgid ""
"There is only one limiting factor regarding scaling in Flask which are "
"the context local proxies.  They depend on context which in Flask is "
"defined as being either a thread, process or greenlet.  If your server "
"uses some kind of concurrency that is not based on threads or greenlets, "
"Flask will no longer be able to support these global proxies.  However "
"the majority of servers are using either threads, greenlets or separate "
"processes to achieve concurrency which are all methods well supported by "
"the underlying Werkzeug library."
msgstr ""
"Sólo hay un factor limitante con respecto a la escala en Flask que son "
"los proxies locales de contexto. Dependen del contexto, que en Flask se "
"define como un hilo, un proceso o un greenlet. Si tu servidor utiliza "
"algún tipo de concurrencia que no esté basada en hilos o greenlets, "
"Flask no podrá soportar estos proxies globales. Sin embargo, la mayoría "
"de los servidores utilizan hilos, greenlets o procesos separados para "
"lograr la concurrencia, que son todos los métodos bien soportados por la "
"biblioteca subyacente Werkzeug."

#: ../../becomingbig.rst:94
msgid "Discuss with the community."
msgstr "Discute con la comunidad."

#: ../../becomingbig.rst:96
msgid ""
"The Flask developers keep the framework accessible to users with "
"codebases big and small. If you find an obstacle in your way, caused by "
"Flask, don't hesitate to contact the developers on the mailing list or "
"Discord server.  The best way for the Flask and Flask extension "
"developers to improve the tools for larger applications is getting "
"feedback from users."
msgstr ""
"Los desarrolladores de Flask mantienen el framework accesible para "
"usuarios con bases de código grandes y pequeñas. Si encuentras un "
"obstáculo en tu camino, causado por Flask, no dudes en contactar con los "
"desarrolladores en la lista de correo o en el servidor Discord. La mejor "
"manera de que los desarrolladores de Flask y de las extensiones de Flask "
"mejoren las herramientas para aplicaciones más grandes es recibiendo "
"comentarios de los usuarios."

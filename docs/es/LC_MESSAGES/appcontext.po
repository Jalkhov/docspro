# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../appcontext.rst:4
msgid "The Application Context"
msgstr "El contexto de la aplicación"

#: ../../appcontext.rst:6
msgid ""
"The application context keeps track of the application-level data during a "
"request, CLI command, or other activity. Rather than passing the "
"application around to each function, the :data:`current_app` and :data:`g` "
"proxies are accessed instead."
msgstr ""
"El contexto de la aplicación mantiene un seguimiento de los datos a nivel "
"de aplicación durante una solicitud, comando CLI u otra actividad. En lugar "
"de pasar la aplicación a cada función, se accede a los proxies :data:"
"`current_app` y :data:`g`."

#: ../../appcontext.rst:11
msgid ""
"This is similar to the :doc:`/reqcontext`, which keeps track of request-"
"level data during a request. A corresponding application context is pushed "
"when a request context is pushed."
msgstr ""
"Esto es similar al :doc:`/reqcontext`, que mantiene un seguimiento de los "
"datos a nivel de solicitud durante una petición. Cuando se envía un "
"contexto de solicitud, se envía un contexto de solicitud correspondiente."

#: ../../appcontext.rst:16
msgid "Purpose of the Context"
msgstr "Propósito del contexto"

#: ../../appcontext.rst:18
msgid ""
"The :class:`Flask` application object has attributes, such as :attr:`~Flask."
"config`, that are useful to access within views and :doc:`CLI commands </"
"cli>`. However, importing the ``app`` instance within the modules in your "
"project is prone to circular import issues. When using the :doc:`app "
"factory pattern </patterns/appfactories>` or writing reusable :doc:"
"`blueprints </blueprints>` or :doc:`extensions </extensions>` there won't "
"be an ``app`` instance to import at all."
msgstr ""
"El objeto de aplicación :class:`Flask` tiene atributos, como :attr:`~Flask."
"config`, que son útiles para acceder dentro de las vistas y los comandos :"
"doc:`CLI </cli>`. Sin embargo, la importación de la instancia ``app`` "
"dentro de los módulos de tu proyecto es propensa a problemas de importación "
"circular. Cuando se utiliza el patrón :doc:`app factory </patterns/"
"appfactories>` o se escriben :doc:`blueprints </blueprints>` o :doc:"
"`extensions </extensions>` no habrá ninguna instancia de ``app`` para "
"importar."

#: ../../appcontext.rst:27
msgid ""
"Flask solves this issue with the *application context*. Rather than "
"referring to an ``app`` directly, you use the :data:`current_app` proxy, "
"which points to the application handling the current activity."
msgstr ""
"Flask resuelve este problema con el *contexto de aplicación*. En lugar de "
"referirse a una ``app`` directamente, se utiliza el proxy :data:"
"`current_app`, que apunta a la aplicación que maneja la actividad actual."

#: ../../appcontext.rst:31
msgid ""
"Flask automatically *pushes* an application context when handling a "
"request. View functions, error handlers, and other functions that run "
"during a request will have access to :data:`current_app`."
msgstr ""
"Flask automáticamente *empuja* un contexto de aplicación cuando maneja una "
"solicitud. Las funciones de vista, los manejadores de errores y otras "
"funciones que se ejecutan durante una solicitud tendrán acceso a :data:"
"`current_app`."

#: ../../appcontext.rst:35
msgid ""
"Flask will also automatically push an app context when running CLI commands "
"registered with :attr:`Flask.cli` using ``@app.cli.command()``."
msgstr ""
"Flask también empujará automáticamente un contexto de aplicación cuando "
"ejecute comandos CLI registrados con :attr:`Flask.cli` usando ``@app.cli."
"command()``."

#: ../../appcontext.rst:40
msgid "Lifetime of the Context"
msgstr "La duración del contexto"

#: ../../appcontext.rst:42
msgid ""
"The application context is created and destroyed as necessary. When a Flask "
"application begins handling a request, it pushes an application context and "
"a :doc:`request context </reqcontext>`. When the request ends it pops the "
"request context then the application context. Typically, an application "
"context will have the same lifetime as a request."
msgstr ""
"El contexto de aplicación se crea y destruye según sea necesario. Cuando "
"una aplicación Flask comienza a manejar una solicitud, empuja un contexto "
"de aplicación y un :doc:`contexto de solicitud </reqcontext>`. Cuando la "
"petición finaliza, el contexto de petición y el contexto de aplicación "
"desaparecen. Normalmente, un contexto de aplicación tendrá el mismo tiempo "
"de vida que una petición."

#: ../../appcontext.rst:49
msgid ""
"See :doc:`/reqcontext` for more information about how the contexts work and "
"the full life cycle of a request."
msgstr ""
"Consulte :doc:`/reqcontext` para obtener más información sobre el "
"funcionamiento de los contextos y el ciclo de vida completo de una "
"solicitud."

#: ../../appcontext.rst:54
msgid "Manually Push a Context"
msgstr "Empujar manualmente un contexto"

#: ../../appcontext.rst:56
msgid ""
"If you try to access :data:`current_app`, or anything that uses it, outside "
"an application context, you'll get this error message:"
msgstr ""
"Si intentas acceder a :data:`current_app`, o a cualquier cosa que lo "
"utilice, fuera de un contexto de aplicación, obtendrás este mensaje de "
"error:"

#: ../../appcontext.rst:67
msgid ""
"If you see that error while configuring your application, such as when "
"initializing an extension, you can push a context manually since you have "
"direct access to the ``app``. Use :meth:`~Flask.app_context` in a ``with`` "
"block, and everything that runs in the block will have access to :data:"
"`current_app`. ::"
msgstr ""
"Si ves ese error mientras configuras tu aplicación, como por ejemplo al "
"inicializar una extensión, puedes empujar un contexto manualmente ya que "
"tienes acceso directo a la ``app``. Usa :meth:`~Flask.app_context` en un "
"bloque ``with``, y todo lo que se ejecute en el bloque tendrá acceso a :"
"data:`current_app`. ::"

#: ../../appcontext.rst:81
msgid ""
"If you see that error somewhere else in your code not related to "
"configuring the application, it most likely indicates that you should move "
"that code into a view function or CLI command."
msgstr ""
"Si ves ese error en algún otro lugar de tu código no relacionado con la "
"configuración de la aplicación, lo más probable es que indique que debes "
"mover ese código a una función de la vista o a un comando CLI."

#: ../../appcontext.rst:87
msgid "Storing Data"
msgstr "Almacenamiento de datos"

#: ../../appcontext.rst:89
msgid ""
"The application context is a good place to store common data during a "
"request or CLI command. Flask provides the :data:`g object <g>` for this "
"purpose. It is a simple namespace object that has the same lifetime as an "
"application context."
msgstr ""
"El contexto de la aplicación es un buen lugar para almacenar datos comunes "
"durante una solicitud o un comando CLI. Flask proporciona el objeto :data:"
"`g <g>` para este propósito. Es un simple objeto de espacio de nombres que "
"tiene el mismo tiempo de vida que un contexto de aplicación."

#: ../../appcontext.rst:95
msgid ""
"The ``g`` name stands for \"global\", but that is referring to the data "
"being global *within a context*. The data on ``g`` is lost after the "
"context ends, and it is not an appropriate place to store data between "
"requests. Use the :data:`session` or a database to store data across "
"requests."
msgstr ""
"El nombre ``g`` significa \"global\", pero eso se refiere a que los datos "
"son globales *dentro de un contexto*. Los datos en ``g`` se pierden cuando "
"el contexto termina, y no es un lugar apropiado para almacenar datos entre "
"peticiones. Utiliza :data:`session` o una base de datos para almacenar "
"datos entre peticiones."

#: ../../appcontext.rst:101
msgid "A common use for :data:`g` is to manage resources during a request."
msgstr ""
"Un uso común de :data:`g` es gestionar los recursos durante una solicitud."

#: ../../appcontext.rst:103
msgid ""
"``get_X()`` creates resource ``X`` if it does not exist, caching it as ``g."
"X``."
msgstr ""
"``get_X()`` crea el recurso ``X`` si no existe, almacenándolo en caché como "
"``g.X``."

#: ../../appcontext.rst:105
msgid ""
"``teardown_X()`` closes or otherwise deallocates the resource if it exists. "
"It is registered as a :meth:`~Flask.teardown_appcontext` handler."
msgstr ""
"``teardown_X()`` cierra o desasigna el recurso si existe. Se registra como "
"un manejador :meth:`~Flask.teardown_appcontext`."

#: ../../appcontext.rst:109
msgid "For example, you can manage a database connection using this pattern::"
msgstr ""
"Por ejemplo, puede gestionar una conexión de base de datos utilizando este "
"patrón::"

#: ../../appcontext.rst:126
msgid ""
"During a request, every call to ``get_db()`` will return the same "
"connection, and it will be closed automatically at the end of the request."
msgstr ""
"Durante una petición, cada llamada a ``get_db()`` devolverá la misma "
"conexión, y se cerrará automáticamente al final de la petición."

#: ../../appcontext.rst:130
msgid ""
"You can use :class:`~werkzeug.local.LocalProxy` to make a new context local "
"from ``get_db()``::"
msgstr ""
"Puede utilizar :class:`~werkzeug.local.LocalProxy` para hacer un nuevo "
"contexto local de ``get_db()``::"

#: ../../appcontext.rst:136
msgid ""
"Accessing ``db`` will call ``get_db`` internally, in the same way that :"
"data:`current_app` works."
msgstr ""
"Al acceder a ``db`` se llamará internamente a ``get_db``, del mismo modo "
"que funciona :data:`current_app`."

#: ../../appcontext.rst:141
msgid ""
"If you're writing an extension, :data:`g` should be reserved for user code. "
"You may store internal data on the context itself, but be sure to use a "
"sufficiently unique name. The current context is accessed with :data:"
"`_app_ctx_stack.top <_app_ctx_stack>`. For more information see :doc:`/"
"extensiondev`."
msgstr ""
"Si estás escribiendo una extensión, :data:`g` debería reservarse para el "
"código de usuario. Puedes almacenar datos internos en el propio contexto, "
"pero asegúrate de utilizar un nombre suficientemente único. Se accede al "
"contexto actual con :data:`_app_ctx_stack.top <_app_ctx_stack>`. Para más "
"información, véase :doc:`/extensiondev`."

#: ../../appcontext.rst:149
msgid "Events and Signals"
msgstr "Eventos y señales"

#: ../../appcontext.rst:151
msgid ""
"The application will call functions registered with :meth:`~Flask."
"teardown_appcontext` when the application context is popped."
msgstr ""
"La aplicación llamará a las funciones registradas con :meth:`~Flask."
"teardown_appcontext` cuando el contexto de la aplicación sea expulsado."

#: ../../appcontext.rst:155
msgid ""
"If :data:`~signals.signals_available` is true, the following signals are "
"sent: :data:`appcontext_pushed`, :data:`appcontext_tearing_down`, and :data:"
"`appcontext_popped`."
msgstr ""
"Si :data:`~signals.signals_available` es verdadero, se envían las "
"siguientes señales: :data:`appcontext_pushed`, :data:"
"`appcontext_tearing_down`, y :data:`appcontext_popped`."

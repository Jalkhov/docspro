# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"Language: xd\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0\n"

#: ../../cli.rst:4
msgid "Command Line Interface"
msgstr "Interfaz de línea de comandos"

#: ../../cli.rst:6
msgid ""
"Installing Flask installs the ``flask`` script, a `Click`_ command line "
"interface, in your virtualenv. Executed from the terminal, this script gives"
" access to built-in, extension, and application-defined commands. The "
"``--help`` option will give more information about any commands and options."
msgstr ""
"La instalación de Flask instala el script ``flask``, una interfaz de línea "
"de comandos `Click`_, en su virtualenv. Ejecutado desde el terminal, este "
"script da acceso a los comandos incorporados, a las extensiones y a los "
"definidos por la aplicación. La opción ``--help`` dará más información sobre"
" los comandos y opciones."

#: ../../cli.rst:15
msgid "Application Discovery"
msgstr "Descubrimiento de aplicaciones"

#: ../../cli.rst:17
#, fuzzy
msgid ""
"The ``flask`` command is installed by Flask, not your application; it must "
"be told where to find your application in order to use it. The ``--app`` "
"option is used to specify how to load the application."
msgstr ""
"El comando ``flask`` es instalado por Flask, no por tu aplicación; hay que "
"decirle dónde encontrar tu aplicación para poder usarla. La variable de "
"entorno ``FLASK_APP`` se utiliza para especificar cómo cargar la aplicación."

#: ../../cli.rst:21
#, fuzzy
msgid ""
"While ``--app`` supports a variety of options for specifying your "
"application, most use cases should be simple. Here are the typical values:"
msgstr ""
"Aunque ``FLASK_APP`` admite una variedad de opciones para especificar su "
"aplicación, la mayoría de los casos de uso deberían ser simples. Estos son "
"los valores típicos:"

#: ../../cli.rst:27
msgid "(nothing)"
msgstr "(nada)"

#: ../../cli.rst:25
msgid ""
"The name \"app\" or \"wsgi\" is imported (as a \".py\" file, or package), "
"automatically detecting an app (``app`` or ``application``) or factory "
"(``create_app`` or ``make_app``)."
msgstr ""
"El nombre \"app\" o \"wsgi\" se importa (como un archivo \".py\", o "
"paquete), detectando automáticamente una aplicación (``app`` o "
"``application``) o fábrica (``create_app`` o ``make_app``)."

#: ../../cli.rst:31
msgid "``--app hello``"
msgstr ""

#: ../../cli.rst:30
msgid ""
"The given name is imported, automatically detecting an app (``app`` or "
"``application``) or factory (``create_app`` or ``make_app``)."
msgstr ""
"Se importa el nombre dado, detectando automáticamente una aplicación "
"(``app`` o ``application``) o fábrica (``create_app`` o ``make_app``)."

#: ../../cli.rst:35
#, fuzzy
msgid ""
"``--app`` has three parts: an optional path that sets the current working "
"directory, a Python file or dotted import path, and an optional variable "
"name of the instance or factory. If the name is a factory, it can optionally"
" be followed by arguments in parentheses. The following values demonstrate "
"these parts:"
msgstr ""
"``FLASK_APP`` tiene tres partes: Una ruta opcional que establece el "
"directorio de trabajo actual, un archivo de Python o una ruta de importación"
" con puntos, y un nombre variable opcional de la instancia o fábrica. Si el "
"nombre es una fábrica, puede ir opcionalmente seguido de argumentos entre "
"paréntesis. Los siguientes valores demuestran estas partes:"

#: ../../cli.rst:42
#, fuzzy
msgid "``--app src/hello``"
msgstr "``FLASK_APP=src/hello``"

#: ../../cli.rst:42
msgid "Sets the current working directory to ``src`` then imports ``hello``."
msgstr ""
"Establece el directorio de trabajo actual en ``src`` y luego importa "
"``hello``."

#: ../../cli.rst:45
#, fuzzy
msgid "``--app hello.web``"
msgstr "``FLASK_APP=hello.web``"

#: ../../cli.rst:45
msgid "Imports the path ``hello.web``."
msgstr "Imports the path ``hello.web``."

#: ../../cli.rst:48
#, fuzzy
msgid "``--app hello:app2``"
msgstr "``FLASK_APP=hello:app2``"

#: ../../cli.rst:48
msgid "Uses the ``app2`` Flask instance in ``hello``."
msgstr "Utiliza la instancia de Flask de ``app2`` en ``hello``."

#: ../../cli.rst:52
#, fuzzy
msgid "``--app 'hello:create_app(\"dev\")'``"
msgstr "``FLASK_APP=\"hello:create_app('dev')\"``"

#: ../../cli.rst:51
msgid ""
"The ``create_app`` factory in ``hello`` is called with the string ``'dev'`` "
"as the argument."
msgstr ""
"La fábrica ``create_app`` en ``hello`` es llamada con la cadena ``'dev'`` "
"como argumento."

#: ../../cli.rst:54
#, fuzzy
msgid ""
"If ``--app`` is not set, the command will try to import \"app\" or \"wsgi\" "
"(as a \".py\" file, or package) and try to detect an application instance or"
" factory."
msgstr ""
"Si ``FLASK_APP`` no está establecido, el comando intentará importar \"app\" "
"o \"wsgi\" (como un archivo \".py\", o paquete) e intentará detectar una "
"instancia o fábrica de aplicaciones."

#: ../../cli.rst:58
msgid ""
"Within the given import, the command looks for an application instance named"
" ``app`` or ``application``, then any application instance. If no instance "
"is found, the command looks for a factory function named ``create_app`` or "
"``make_app`` that returns an instance."
msgstr ""
"Dentro de la importación dada, el comando busca una instancia de aplicación "
"llamada ``app`` o ``application``, y luego cualquier instancia de "
"aplicación. Si no se encuentra ninguna instancia, el comando busca una "
"función de fábrica llamada ``create_app`` o ``make_app`` que devuelva una "
"instancia."

#: ../../cli.rst:63
msgid ""
"If parentheses follow the factory name, their contents are parsed as Python "
"literals and passed as arguments and keyword arguments to the function. This"
" means that strings must still be in quotes."
msgstr ""
"Si los paréntesis siguen al nombre de la fábrica, su contenido se analiza "
"como literales de Python y se pasa como argumentos y palabras clave a la "
"función. Esto significa que las cadenas deben seguir estando entre comillas."

#: ../../cli.rst:69
msgid "Run the Development Server"
msgstr "Ejecutar el servidor de desarrollo"

#: ../../cli.rst:71
msgid ""
"The :func:`run <cli.run_command>` command will start the development server."
" It replaces the :meth:`Flask.run` method in most cases. ::"
msgstr ""
"El comando :func:`run <cli.run_command>` iniciará el servidor de desarrollo."
" Sustituye al método :meth:`Flask.run` en la mayoría de los casos. ::"

#: ../../cli.rst:78
msgid ""
"Do not use this command to run your application in production. Only use the "
"development server during development. The development server is provided "
"for convenience, but is not designed to be particularly secure, stable, or "
"efficient. See :doc:`/deploying/index` for how to run in production."
msgstr ""
"No utilice este comando para ejecutar su aplicación en producción. Utilice "
"el servidor de desarrollo sólo durante el desarrollo. El servidor de "
"desarrollo se proporciona por conveniencia, pero no está diseñado para ser "
"particularmente seguro, estable o eficiente. Vea :doc:`/deploying/index` "
"para saber cómo ejecutar en producción."

#: ../../cli.rst:83
msgid ""
"If another program is already using port 5000, you'll see ``OSError: [Errno "
"98]`` or ``OSError: [WinError 10013]`` when the server tries to start. See "
":ref:`address-already-in-use` for how to handle that."
msgstr ""
"Si otro programa ya está usando el puerto 5000, verás ``OSError: [Errno "
"98]`` o ``OSError: [WinError 10013]`` cuando el servidor intente iniciarse. "
"Ver :ref:`address-already-in-use` para saber cómo manejar esto."

#: ../../cli.rst:90
msgid "Open a Shell"
msgstr "Abrir un Shell"

#: ../../cli.rst:92
msgid ""
"To explore the data in your application, you can start an interactive Python"
" shell with the :func:`shell <cli.shell_command>` command. An application "
"context will be active, and the app instance will be imported. ::"
msgstr ""
"Para explorar los datos de tu aplicación, puedes iniciar un shell "
"interactivo de Python con el comando :func:`shell <cli.shell_command>`. Se "
"activará un contexto de aplicación y se importará la instancia de la app ::"

#: ../../cli.rst:102
msgid ""
"Use :meth:`~Flask.shell_context_processor` to add other automatic imports."
msgstr ""
"Utilice :meth:`~Flask.shell_context_processor` para añadir otras "
"importaciones automáticas."

#: ../../cli.rst:106
msgid "Environments"
msgstr "Entornos"

#: ../../cli.rst:110
msgid ""
"The environment in which the Flask app executes is set by the ``FLASK_ENV`` "
"environment variable. When using the ``flask`` command, it can also be set "
"with the ``--env`` option. If not set it defaults to ``production``. The "
"other recognized environment is ``development``. Flask and extensions may "
"choose to enable behaviors based on the environment."
msgstr ""

#: ../../cli.rst:117
msgid ""
"If the env is set to ``development``, the ``flask`` command will enable "
"debug mode and ``flask run`` will enable the interactive debugger and "
"reloader."
msgstr ""
"Si el entorno está configurado como ``development``, el comando ``flask`` "
"habilitará el modo de depuración y ``flask run`` habilitará el depurador "
"interactivo y el recargador."

#: ../../cli.rst:134
msgid "Watch Extra Files with the Reloader"
msgstr "Vigilar los archivos extra con el Recargador"

#: ../../cli.rst:136
#, fuzzy
msgid ""
"When using development mode, the reloader will trigger whenever your Python "
"code or imported modules change. The reloader can watch additional files "
"with the ``--extra-files`` option. Multiple paths are separated with ``:``, "
"or ``;`` on Windows."
msgstr ""
"Cuando se utiliza el modo de desarrollo, el recargador se activará cada vez "
"que tu código Python o los módulos importados cambien. El recargador puede "
"ver archivos adicionales con la opción ``--extra-files``, o la variable de "
"entorno ``FLASK_RUN_EXTRA_FILES``. Las rutas múltiples se separan con ``:``,"
" o ``;`` en Windows."

#: ../../cli.rst:149
#, fuzzy
msgid "Ignore files with the Reloader"
msgstr "Vigilar los archivos extra con el Recargador"

#: ../../cli.rst:151
msgid ""
"The reloader can also ignore files using :mod:`fnmatch` patterns with the "
"``--exclude-patterns`` option. Multiple patterns are separated with ``:``, "
"or ``;`` on Windows."
msgstr ""

#: ../../cli.rst:157
msgid "Debug Mode"
msgstr "Modo depuración"

#: ../../cli.rst:159
msgid ""
"Debug mode will be enabled when the execution environment is "
"``development``, as described above. If you want to control debug mode "
"separately, use the ``--debug/--no-debug`` option or the ``FLASK_DEBUG`` "
"environment variable."
msgstr ""

#: ../../cli.rst:168
msgid "Environment Variables From dotenv"
msgstr "Variables de entorno de dotenv"

#: ../../cli.rst:170
msgid ""
"The ``flask`` command supports setting any option for any command with "
"environment variables. The variables are named like ``FLASK_OPTION`` or "
"``FLASK_COMMAND_OPTION``, for example ``FLASK_APP`` or ``FLASK_RUN_PORT``."
msgstr ""

#: ../../cli.rst:175
#, fuzzy
msgid ""
"Rather than passing options every time you run a command, or environment "
"variables every time you open a new terminal, you can use Flask's dotenv "
"support to set environment variables automatically."
msgstr ""
"En lugar de establecer ``FLASK_APP`` cada vez que abra un nuevo terminal, "
"puede utilizar el soporte dotenv de Flask para establecer las variables de "
"entorno automáticamente."

#: ../../cli.rst:179
#, fuzzy
msgid ""
"If `python-dotenv`_ is installed, running the ``flask`` command will set "
"environment variables defined in the files ``.env`` and ``.flaskenv``. You "
"can also specify an extra file to load with the ``--env-file`` option. "
"Dotenv files can be used to avoid having to set ``--app`` or ``FLASK_APP`` "
"manually, and to set configuration using environment variables similar to "
"how some deployment services work."
msgstr ""
"Si `python-dotenv`_ está instalado, la ejecución del comando ``flask`` "
"establecerá las variables de entorno definidas en los archivos :file:`.env` "
"y :file:`.flaskenv`. Esto se puede utilizar para evitar tener que establecer"
" ``FLASK_APP`` manualmente cada vez que se abre un nuevo terminal, y para "
"establecer la configuración mediante variables de entorno de forma similar a"
" como funcionan algunos servicios de despliegue."

#: ../../cli.rst:186
msgid ""
"Variables set on the command line are used over those set in :file:`.env`, "
"which are used over those set in :file:`.flaskenv`. :file:`.flaskenv` should"
" be used for public variables, such as ``FLASK_APP``, while :file:`.env` "
"should not be committed to your repository so that it can set private "
"variables."
msgstr ""
"Las variables establecidas en la línea de comandos se utilizan sobre las "
"establecidas en :file:`.env`, que se utilizan sobre las establecidas en "
":file:`.flaskenv`. :file:`.flaskenv` debe utilizarse para las variables "
"públicas, como ``FLASK_APP``, mientras que :file:`.env` no debe confirmarse "
"en su repositorio para que pueda establecer variables privadas."

#: ../../cli.rst:191
msgid ""
"Directories are scanned upwards from the directory you call ``flask`` from "
"to locate the files."
msgstr ""

#: ../../cli.rst:194
msgid ""
"The files are only loaded by the ``flask`` command or calling "
":meth:`~Flask.run`. If you would like to load these files when running in "
"production, you should call :func:`~cli.load_dotenv` manually."
msgstr ""
"Los archivos sólo se cargan con el comando ``flask`` o llamando a "
":meth:`~Flask.run`. Si desea cargar estos archivos cuando se ejecuta en "
"producción, debe llamar a :func:`~cli.load_dotenv` manualmente."

#: ../../cli.rst:202
msgid "Setting Command Options"
msgstr "Configuración de las opciones de comando"

#: ../../cli.rst:204
msgid ""
"Click is configured to load default values for command options from "
"environment variables. The variables use the pattern "
"``FLASK_COMMAND_OPTION``. For example, to set the port for the run command, "
"instead of ``flask run --port 8000``:"
msgstr ""
"Click está configurado para cargar los valores por defecto de las opciones "
"de comando desde las variables de entorno. Las variables utilizan el patrón "
"``FLASK_COMMAND_OPTION``. Por ejemplo, para establecer el puerto para el "
"comando de ejecución, en lugar de ``flask run --port 8000``:"

#: ../../cli.rst:211 ../../cli.rst:267 ../../cli.rst:305
msgid "Bash"
msgstr "Bash"

#: ../../cli.rst:219 ../../cli.rst:274 ../../cli.rst:311
msgid "Fish"
msgstr "Fish"

#: ../../cli.rst:227 ../../cli.rst:281 ../../cli.rst:317
msgid "CMD"
msgstr "CMD"

#: ../../cli.rst:235 ../../cli.rst:288 ../../cli.rst:323
msgid "Powershell"
msgstr "Powershell"

#: ../../cli.rst:243
msgid ""
"These can be added to the ``.flaskenv`` file just like ``FLASK_APP`` to "
"control default command options."
msgstr ""
"Se pueden añadir al archivo ``.flaskenv`` al igual que ``FLASK_APP`` para "
"controlar las opciones de los comandos por defecto."

#: ../../cli.rst:248
msgid "Disable dotenv"
msgstr "Desactivar dotenv"

#: ../../cli.rst:250
msgid ""
"The ``flask`` command will show a message if it detects dotenv files but "
"python-dotenv is not installed."
msgstr ""
"El comando ``flask`` mostrará un mensaje si detecta archivos dotenv pero "
"python-dotenv no está instalado."

#: ../../cli.rst:258
msgid ""
"You can tell Flask not to load dotenv files even when python-dotenv is "
"installed by setting the ``FLASK_SKIP_DOTENV`` environment variable. This "
"can be useful if you want to load them manually, or if you're using a "
"project runner that loads them already. Keep in mind that the environment "
"variables must be set before the app loads or it won't configure as "
"expected."
msgstr ""
"Puedes decirle a Flask que no cargue los archivos dotenv incluso cuando "
"python-dotenv está instalado estableciendo la variable de entorno "
"``FLASK_SKIP_DOTENV``. Esto puede ser útil si quieres cargarlos manualmente,"
" o si estás usando un ejecutor de proyecto que ya los carga. Ten en cuenta "
"que las variables de entorno deben establecerse antes de que la aplicación "
"se cargue o no se configurará como se espera."

#: ../../cli.rst:297
msgid "Environment Variables From virtualenv"
msgstr "Variables de entorno de virtualenv"

#: ../../cli.rst:299
msgid ""
"If you do not want to install dotenv support, you can still set environment "
"variables by adding them to the end of the virtualenv's :file:`activate` "
"script. Activating the virtualenv will set the variables."
msgstr ""
"Si no quieres instalar el soporte de dotenv, puedes establecer las variables"
" de entorno añadiéndolas al final del script :file:`activate` del "
"virtualenv. Al activar el virtualenv se establecerán las variables."

#: ../../cli.rst:307
msgid "Unix Bash, :file:`venv/bin/activate`::"
msgstr "Unix Bash, :file:`venv/bin/activate`::"

#: ../../cli.rst:313
msgid "Fish, :file:`venv/bin/activate.fish`::"
msgstr "Fish, :file:`venv/bin/activate.fish`::"

#: ../../cli.rst:319
msgid "Windows CMD, :file:`venv\\\\Scripts\\\\activate.bat`::"
msgstr "Windows CMD, :file:`venv\\\\Scripts\\\\activate.bat`::"

#: ../../cli.rst:325
msgid "Windows Powershell, :file:`venv\\\\Scripts\\\\activate.ps1`::"
msgstr "Windows Powershell, :file:`venv\\\\Scripts\\\\activate.ps1`::"

#: ../../cli.rst:329
msgid ""
"It is preferred to use dotenv support over this, since :file:`.flaskenv` can"
" be committed to the repository so that it works automatically wherever the "
"project is checked out."
msgstr ""
"Es preferible usar el soporte de dotenv sobre esto, ya que :file:`.flaskenv`"
" puede ser comprometido en el repositorio para que funcione automáticamente "
"dondequiera que el proyecto sea revisado."

#: ../../cli.rst:335
msgid "Custom Commands"
msgstr "Comandos personalizados"

#: ../../cli.rst:337
msgid ""
"The ``flask`` command is implemented using `Click`_. See that project's "
"documentation for full information about writing commands."
msgstr ""
"El comando ``flask`` se implementa usando `Click`_. Consulte la "
"documentación de ese proyecto para obtener información completa sobre la "
"escritura de comandos."

#: ../../cli.rst:340
msgid ""
"This example adds the command ``create-user`` that takes the argument "
"``name``. ::"
msgstr ""
"Este ejemplo añade el comando ``create-user`` que toma el argumento "
"``name``. ::"

#: ../../cli.rst:357
msgid ""
"This example adds the same command, but as ``user create``, a command in a "
"group. This is useful if you want to organize multiple related commands. ::"
msgstr ""
"Este ejemplo añade el mismo comando, pero como ``user create``, un comando "
"en un grupo. Esto es útil si quieres organizar múltiples comandos "
"relacionados ::"

#: ../../cli.rst:378
msgid ""
"See :ref:`testing-cli` for an overview of how to test your custom commands."
msgstr ""
"Vea :ref:`testing-cli` para una visión general de cómo probar sus comandos "
"personalizados."

#: ../../cli.rst:383
msgid "Registering Commands with Blueprints"
msgstr "Registro de comandos con Blueprints"

#: ../../cli.rst:385
msgid ""
"If your application uses blueprints, you can optionally register CLI "
"commands directly onto them. When your blueprint is registered onto your "
"application, the associated commands will be available to the ``flask`` "
"command. By default, those commands will be nested in a group matching the "
"name of the blueprint."
msgstr ""
"Si tu aplicación utiliza blueprints, puedes registrar opcionalmente comandos"
" CLI directamente en ellos. Cuando tu blueprint esté registrado en tu "
"aplicación, los comandos asociados estarán disponibles para el comando "
"``flask``. Por defecto, esos comandos estarán anidados en un grupo que "
"coincide con el nombre del blueprint."

#: ../../cli.rst:408
msgid ""
"You can alter the group name by specifying the ``cli_group`` parameter when "
"creating the :class:`Blueprint` object, or later with "
":meth:`app.register_blueprint(bp, cli_group='...') "
"<Flask.register_blueprint>`. The following are equivalent:"
msgstr ""
"Se puede modificar el nombre del grupo especificando el parámetro "
"``cli_group`` al crear el objeto :class:`Blueprint`, o posteriormente con "
":meth:`app.register_blueprint(bp, cli_group='...') "
"<Flask.register_blueprint>`. Los siguientes son equivalentes:"

#: ../../cli.rst:423
msgid ""
"Specifying ``cli_group=None`` will remove the nesting and merge the commands"
" directly to the application's level:"
msgstr ""
"Especificando ``cli_group=None`` se eliminará el anidamiento y se fusionarán"
" los comandos directamente al nivel de la aplicación:"

#: ../../cli.rst:438
msgid "Application Context"
msgstr "Contexto de la aplicación"

#: ../../cli.rst:440
msgid ""
"Commands added using the Flask app's :attr:`~Flask.cli` or "
":class:`~flask.cli.FlaskGroup` :meth:`~cli.AppGroup.command` decorator will "
"be executed with an application context pushed, so your custom commands and "
"parameters have access to the app and its configuration. The "
":func:`~cli.with_appcontext` decorator can be used to get the same behavior,"
" but is not needed in most cases."
msgstr ""

#: ../../cli.rst:461
msgid "Plugins"
msgstr "Plugins"

#: ../../cli.rst:463
msgid ""
"Flask will automatically load commands specified in the ``flask.commands`` "
"`entry point`_. This is useful for extensions that want to add commands when"
" they are installed. Entry points are specified in :file:`setup.py` ::"
msgstr ""
"Flask cargará automáticamente los comandos especificados en el "
"``flask.commands`` `entry point`_. Esto es útil para las extensiones que "
"quieren añadir comandos cuando se instalan. Los puntos de entrada se "
"especifican en :file:`setup.py` ::"

#: ../../cli.rst:482
msgid ""
"Inside :file:`flask_my_extension/commands.py` you can then export a Click "
"object::"
msgstr ""
"Dentro de :file:`flask_my_extension/commands.py` puedes entonces exportar un"
" objeto Click::"

#: ../../cli.rst:491
msgid ""
"Once that package is installed in the same virtualenv as your Flask project,"
" you can run ``flask my-command`` to invoke the command."
msgstr ""
"Una vez que ese paquete está instalado en el mismo virtualenv que tu "
"proyecto Flask, puedes ejecutar ``flask my-command`` para invocar el "
"comando."

#: ../../cli.rst:498
msgid "Custom Scripts"
msgstr "Scripts personalizados"

#: ../../cli.rst:500
#, fuzzy
msgid ""
"When you are using the app factory pattern, it may be more convenient to "
"define your own Click script. Instead of using ``--app`` and letting Flask "
"load your application, you can create your own Click object and export it as"
" a `console script`_ entry point."
msgstr ""
"Cuando se utiliza el patrón de fábrica de aplicaciones, puede ser más "
"conveniente definir su propio script Click. En lugar de usar ``FLASK_APP`` y"
" dejar que Flask cargue tu aplicación, puedes crear tu propio objeto Click y"
" exportarlo como un punto de entrada de `console script`_."

#: ../../cli.rst:505
msgid ""
"Create an instance of :class:`~cli.FlaskGroup` and pass it the factory::"
msgstr "Crea una instancia de :class:`~cli.FlaskGroup` y pásale la fábrica::"

#: ../../cli.rst:520
msgid "Define the entry point in :file:`setup.py`::"
msgstr "Definir el entry point en :file:`setup.py`::"

#: ../../cli.rst:534
#, fuzzy
msgid ""
"Install the application in the virtualenv in editable mode and the custom "
"script is available. Note that you don't need to set ``--app``. ::"
msgstr ""
"Instala la aplicación en el virtualenv en modo editable y el script "
"personalizado estará disponible. Tenga en cuenta que no es necesario "
"establecer ``FLASK_APP``. ::"

#: ../../cli.rst:540
msgid "Errors in Custom Scripts"
msgstr "Errores en los scripts personalizados"

#: ../../cli.rst:542
msgid ""
"When using a custom script, if you introduce an error in your module-level "
"code, the reloader will fail because it can no longer load the entry point."
msgstr ""
"Cuando se utiliza un script personalizado, si se introduce un error en el "
"código a nivel de módulo, el recargador fallará porque ya no puede cargar el"
" punto de entrada."

#: ../../cli.rst:546
msgid ""
"The ``flask`` command, being separate from your code, does not have this "
"issue and is recommended in most cases."
msgstr ""
"El comando ``flask``, al estar separado de su código, no tiene este problema"
" y se recomienda en la mayoría de los casos."

#: ../../cli.rst:553
msgid "PyCharm Integration"
msgstr "Integración de PyCharm"

#: ../../cli.rst:555
msgid ""
"PyCharm Professional provides a special Flask run configuration. For the "
"Community Edition, we need to configure it to call the ``flask run`` CLI "
"command with the correct environment variables. These instructions should be"
" similar for any other IDE you might want to use."
msgstr ""
"PyCharm Professional proporciona una configuración especial para la "
"ejecución de Flask. Para la Community Edition, necesitamos configurarlo para"
" llamar al comando CLI ``flask run`` con las variables de entorno correctas."
" Estas instrucciones deberían ser similares para cualquier otro IDE que "
"quieras utilizar."

#: ../../cli.rst:560
msgid ""
"In PyCharm, with your project open, click on *Run* from the menu bar and go "
"to *Edit Configurations*. You'll be greeted by a screen similar to this:"
msgstr ""
"En PyCharm, con tu proyecto abierto, haz clic en *Run* de la barra de menú y"
" ve a *Edit Configurations*. Te aparecerá una pantalla similar a esta:"

msgid "Screenshot of PyCharms's run configuration settings."
msgstr ""

#: ../../cli.rst:569
msgid ""
"There's quite a few options to change, but once we've done it for one "
"command, we can easily copy the entire configuration and make a single tweak"
" to give us access to other commands, including any custom ones you may "
"implement yourself."
msgstr ""
"Hay bastantes opciones para cambiar, pero una vez que lo hayamos hecho para "
"un comando, podemos copiar fácilmente toda la configuración y hacer un solo "
"ajuste para darnos acceso a otros comandos, incluyendo los personalizados "
"que puedas implementar tú mismo."

#: ../../cli.rst:574
msgid ""
"Click the + (*Add New Configuration*) button and select *Python*. Give the "
"configuration a name such as \"flask run\". For the ``flask run`` command, "
"check \"Single instance only\" since you can't run the server more than once"
" at the same time."
msgstr ""
"Haz clic en el botón + (*Add New Configuration*) y selecciona *Python*. Dale"
" a la configuración un nombre como \"flask run\". Para el comando ``flask "
"run``, marca \"Single instance only\" ya que no puedes ejecutar el servidor "
"más de una vez al mismo tiempo."

#: ../../cli.rst:579
msgid "Select *Module name* from the dropdown (**A**) then input ``flask``."
msgstr ""
"Seleccione *Module name* en el desplegable (**A**) y luego introduzca "
"``flask``."

#: ../../cli.rst:581
msgid ""
"The *Parameters* field (**B**) is set to the CLI command to execute (with "
"any arguments). In this example we use ``run``, which will run the "
"development server."
msgstr ""
"El campo *Parameters* (**B**) se establece con el comando CLI a ejecutar "
"(con cualquier argumento). En este ejemplo usamos ``run``, que ejecutará el "
"servidor de desarrollo."

#: ../../cli.rst:585
msgid ""
"You can skip this next step if you're using :ref:`dotenv`. We need to add an"
" environment variable (**C**) to identify our application. Click on the "
"browse button and add an entry with ``FLASK_APP`` on the left and the Python"
" import or file on the right (``hello`` for example). Add an entry with "
"``FLASK_ENV`` and set it to ``development``."
msgstr ""
"Puedes omitir este paso si utilizas :ref:`dotenv`. Necesitamos añadir una "
"variable de entorno (**C**) para identificar nuestra aplicación. Haz clic en"
" el botón Examinar y añade una entrada con ``FLASK_APP`` a la izquierda y la"
" importación o archivo de Python a la derecha (``hello`` por ejemplo). Añade"
" una entrada con ``FLASK_ENV`` y ponla en ``development``."

#: ../../cli.rst:591
msgid ""
"Next we need to set the working directory (**D**) to be the folder where our"
" application resides."
msgstr ""
"A continuación tenemos que establecer el directorio de trabajo (**D**) para "
"que sea la carpeta donde reside nuestra aplicación."

#: ../../cli.rst:594
msgid ""
"If you have installed your project as a package in your virtualenv, you may "
"untick the *PYTHONPATH* options (**E**). This will more accurately match how"
" you deploy the app later."
msgstr ""
"Si has instalado tu proyecto como un paquete en tu virtualenv, puedes "
"desmarcar las opciones *PYTHONPATH* (**E**). Esto se ajustará mejor a la "
"forma de desplegar la aplicación más adelante."

#: ../../cli.rst:598
msgid ""
"Click *Apply* to save the configuration, or *OK* to save and close the "
"window. Select the configuration in the main PyCharm window and click the "
"play button next to it to run the server."
msgstr ""
"Haga clic en *Apply* para guardar la configuración, o en *Aceptar* para "
"guardar y cerrar la ventana. Seleccione la configuración en la ventana "
"principal de PyCharm y haga clic en el botón de reproducción junto a ella "
"para ejecutar el servidor."

#: ../../cli.rst:602
msgid ""
"Now that we have a configuration which runs ``flask run`` from within "
"PyCharm, we can copy that configuration and alter the *Script* argument to "
"run a different CLI command, e.g. ``flask shell``."
msgstr ""
"Ahora que tenemos una configuración que ejecuta ``flask run`` desde PyCharm,"
" podemos copiar esa configuración y alterar el argumento *Script* para "
"ejecutar un comando CLI diferente, por ejemplo ``flask shell``."

#~ msgid ""
#~ "Directories are scanned upwards from the directory you call ``flask`` from "
#~ "to locate the files. The current working directory will be set to the "
#~ "location of the file, with the assumption that that is the top level project"
#~ " directory."
#~ msgstr ""
#~ "Los directorios se exploran hacia arriba desde el directorio desde el que se"
#~ " llama a ``flask`` para localizar los archivos. El directorio de trabajo "
#~ "actual se establecerá en la ubicación del archivo, con la suposición de que "
#~ "ese es el directorio de nivel superior del proyecto."

#~ msgid "Screenshot of PyCharms's run configuration settings."
#~ msgstr "Captura de pantalla de la configuración de ejecución de PyCharms."

#~ msgid "``FLASK_APP=hello``"
#~ msgstr "``FLASK_APP=hello``"

#~ msgid ""
#~ "The environment in which the Flask app runs is set by the "
#~ ":envvar:`FLASK_ENV` environment variable. If not set it defaults to "
#~ "``production``. The other recognized environment is ``development``. Flask "
#~ "and extensions may choose to enable behaviors based on the environment."
#~ msgstr ""
#~ "El entorno en el que se ejecuta la aplicación Flask se establece mediante la"
#~ " variable de entorno :envvar:`FLASK_ENV`. Si no se establece, es por defecto"
#~ " ``production``. El otro entorno reconocido es ``development``. Flask y las "
#~ "extensiones pueden elegir habilitar comportamientos basados en el entorno."

#~ msgid ""
#~ "The reloader can also ignore files using :mod:`fnmatch` patterns with the "
#~ "``--exclude-patterns`` option, or the ``FLASK_RUN_EXCLUDE_PATTERNS`` "
#~ "environment variable. Multiple patterns are separated with ``:``, or ``;`` "
#~ "on Windows."
#~ msgstr ""

#~ msgid ""
#~ "Debug mode will be enabled when :envvar:`FLASK_ENV` is ``development``, as "
#~ "described above. If you want to control debug mode separately, use "
#~ ":envvar:`FLASK_DEBUG`. The value ``1`` enables it, ``0`` disables it."
#~ msgstr ""
#~ "El modo de depuración se activará cuando :envvar:`FLASK_ENV` sea "
#~ "``development``, como se ha descrito anteriormente. Si desea controlar el "
#~ "modo de depuración por separado, utilice :envvar:`FLASK_DEBUG`. El valor "
#~ "``1`` lo activa, ``0`` lo desactiva."

#~ msgid ""
#~ "Commands added using the Flask app's :attr:`~Flask.cli` "
#~ ":meth:`~cli.AppGroup.command` decorator will be executed with an application"
#~ " context pushed, so your command and extensions have access to the app and "
#~ "its configuration. If you create a command using the Click "
#~ ":func:`~click.command` decorator instead of the Flask decorator, you can use"
#~ " :func:`~cli.with_appcontext` to get the same behavior. ::"
#~ msgstr ""
#~ "Los comandos añadidos usando el decorador :attr:`~Flask.cli` "
#~ ":meth:`~cli.AppGroup.command` de la aplicación se ejecutarán con un contexto"
#~ " de aplicación empujado, por lo que tu comando y las extensiones tienen "
#~ "acceso a la aplicación y su configuración. Si creas un comando usando el "
#~ "decorador Click :func:`~click.command` en lugar del decorador Flask, puedes "
#~ "usar :func:`~cli.with_appcontext` para obtener el mismo comportamiento. ::"

#~ msgid ""
#~ "If you're sure a command doesn't need the context, you can disable it::"
#~ msgstr ""
#~ "Si estás seguro de que un comando no necesita el contexto, puedes "
#~ "desactivarlo::"

#~ msgid "Captura de pantalla de la configuración de ejecución de PyCharms."
#~ msgstr ""

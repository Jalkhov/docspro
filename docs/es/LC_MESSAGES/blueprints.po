# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <pedrotorcattsoto@gmail.com>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 2.0.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-27 07:20-0400\n"
"PO-Revision-Date: 2022-02-15 21:58-0400\n"
"Language-Team: es_LA <pedrotorcattsoto@gmail.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Last-Translator: Pedro Torcatt <pedrotorcattsoto@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 3.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../blueprints.rst:2
msgid "Modular Applications with Blueprints"
msgstr "Aplicaciones modulares con Blueprints"

#: ../../blueprints.rst:8
msgid ""
"Flask uses a concept of *blueprints* for making application components "
"and supporting common patterns within an application or across "
"applications. Blueprints can greatly simplify how large applications "
"work and provide a central means for Flask extensions to register "
"operations on applications. A :class:`Blueprint` object works similarly "
"to a :class:`Flask` application object, but it is not actually an "
"application.  Rather it is a *blueprint* of how to construct or extend "
"an application."
msgstr ""
"Flask utiliza un concepto de *blueprints* para crear componentes de "
"aplicaciones y soportar patrones comunes dentro de una aplicación o "
"entre aplicaciones. Los blueprints pueden simplificar en gran medida el "
"funcionamiento de las grandes aplicaciones y proporcionar un medio "
"central para que las extensiones de Flask registren operaciones en las "
"aplicaciones. Un objeto :class:`Blueprint` funciona de forma similar a "
"un objeto de aplicación :class:`Flask`, pero no es realmente una "
"aplicación. Más bien es un *blueprint* de cómo construir o extender una "
"aplicación."

#: ../../blueprints.rst:17
msgid "Why Blueprints?"
msgstr "¿Por qué los Blueprints?"

#: ../../blueprints.rst:19
msgid "Blueprints in Flask are intended for these cases:"
msgstr "Los Blueprints en Flask están pensados para estos casos:"

#: ../../blueprints.rst:21
msgid ""
"Factor an application into a set of blueprints.  This is ideal for "
"larger applications; a project could instantiate an application object, "
"initialize several extensions, and register a collection of blueprints."
msgstr ""
"Factorizar una aplicación en un conjunto de blueprints. Esto es ideal "
"para aplicaciones más grandes; un proyecto podría instanciar un objeto "
"de aplicación, inicializar varias extensiones y registrar una colección "
"de blueprints."

#: ../../blueprints.rst:24
msgid ""
"Register a blueprint on an application at a URL prefix and/or subdomain. "
"Parameters in the URL prefix/subdomain become common view arguments "
"(with defaults) across all view functions in the blueprint."
msgstr ""
"Registrar un blueprint en una aplicación en un prefijo de URL y/o "
"subdominio. Los parámetros en el prefijo de URL/subdominio se convierten "
"en argumentos comunes de la vista (con valores predeterminados) en todas "
"las funciones de la vista en el blueprint."

#: ../../blueprints.rst:27
msgid ""
"Register a blueprint multiple times on an application with different URL "
"rules."
msgstr ""
"Registrar un blueprint varias veces en una aplicación con diferentes "
"reglas de URL."

#: ../../blueprints.rst:29
msgid ""
"Provide template filters, static files, templates, and other utilities "
"through blueprints.  A blueprint does not have to implement applications "
"or view functions."
msgstr ""
"Proporcionar filtros de plantilla, archivos estáticos, plantillas y "
"otras utilidades a través de blueprints. Un blueprint no tiene que "
"implementar aplicaciones o funciones de vista."

#: ../../blueprints.rst:32
msgid ""
"Register a blueprint on an application for any of these cases when "
"initializing a Flask extension."
msgstr ""
"Registrar un blueprint en una aplicación para cualquiera de estos casos "
"al inicializar una extensión de Flask."

#: ../../blueprints.rst:35
msgid ""
"A blueprint in Flask is not a pluggable app because it is not actually "
"an application -- it's a set of operations which can be registered on an "
"application, even multiple times.  Why not have multiple application "
"objects?  You can do that (see :doc:`/patterns/appdispatch`), but your "
"applications will have separate configs and will be managed at the WSGI "
"layer."
msgstr ""
"Un blueprint en Flask no es una aplicación enchufable porque no es "
"realmente una aplicación -- es un conjunto de operaciones que pueden ser "
"registradas en una aplicación, incluso múltiples veces. ¿Por qué no "
"tener múltiples objetos de aplicación? Puedes hacerlo (ver :doc:`/"
"patterns/appdispatch`), pero tus aplicaciones tendrán configuraciones "
"separadas y serán gestionadas en la capa WSGI."

#: ../../blueprints.rst:42
msgid ""
"Blueprints instead provide separation at the Flask level, share "
"application config, and can change an application object as necessary "
"with being registered. The downside is that you cannot unregister a "
"blueprint once an application was created without having to destroy the "
"whole application object."
msgstr ""
"En cambio, los blueprints proporcionan una separación a nivel de Flask, "
"comparten la configuración de la aplicación y pueden cambiar un objeto "
"de la aplicación según sea necesario con estar registrado. El "
"inconveniente es que no se puede anular el registro de un blueprint una "
"vez que se ha creado una aplicación sin tener que destruir todo el "
"objeto de aplicación."

#: ../../blueprints.rst:49
msgid "The Concept of Blueprints"
msgstr "El concepto de Blueprints"

#: ../../blueprints.rst:51
msgid ""
"The basic concept of blueprints is that they record operations to "
"execute when registered on an application.  Flask associates view "
"functions with blueprints when dispatching requests and generating URLs "
"from one endpoint to another."
msgstr ""
"El concepto básico de los blueprints es que registran las operaciones a "
"ejecutar cuando se registran en una aplicación. Flask asocia las "
"funciones de vista con los blueprints cuando despacha peticiones y "
"genera URLs de un endpoint a otro."

#: ../../blueprints.rst:57
msgid "My First Blueprint"
msgstr "Mi primer Blueprint"

#: ../../blueprints.rst:59
msgid ""
"This is what a very basic blueprint looks like.  In this case we want to "
"implement a blueprint that does simple rendering of static templates::"
msgstr ""
"Este es el aspecto de un blueprint muy básico. En este caso queremos "
"implementar un blueprint que haga un simple renderizado de plantillas "
"estáticas::"

#: ../../blueprints.rst:76
msgid ""
"When you bind a function with the help of the ``@simple_page.route`` "
"decorator, the blueprint will record the intention of registering the "
"function ``show`` on the application when it's later registered. "
"Additionally it will prefix the endpoint of the function with the name "
"of the blueprint which was given to the :class:`Blueprint` constructor "
"(in this case also ``simple_page``). The blueprint's name does not "
"modify the URL, only the endpoint."
msgstr ""
"Cuando se vincula una función con la ayuda del decorador ``@simple_page."
"route``, el blueprint registrará la intención de registrar la función "
"``show`` en la aplicación cuando se registre posteriormente. Además, "
"antepondrá al punto final de la función el nombre del blueprint que se "
"le dio al constructor :class:`Blueprint` (en este caso también "
"``simple_page``). El nombre del blueprint no modifica la URL, sólo el "
"endpoint."

#: ../../blueprints.rst:85
msgid "Registering Blueprints"
msgstr "Registro de Blueprints"

#: ../../blueprints.rst:87
msgid "So how do you register that blueprint?  Like this::"
msgstr "Entonces, ¿cómo se registra ese blueprint? Así::"

#: ../../blueprints.rst:95
msgid ""
"If you check the rules registered on the application, you will find "
"these::"
msgstr ""
"Si comprueba las normas registradas en la aplicación, encontrará estas::"

#: ../../blueprints.rst:103
msgid ""
"The first one is obviously from the application itself for the static "
"files.  The other two are for the `show` function of the ``simple_page`` "
"blueprint.  As you can see, they are also prefixed with the name of the "
"blueprint and separated by a dot (``.``)."
msgstr ""
"El primero es obviamente de la propia aplicación para los archivos "
"estáticos. Los otros dos son para la función `show` del blueprint "
"``simple_page``. Como puedes ver, también están prefijados con el nombre "
"del blueprint y separados por un punto (``.``)."

#: ../../blueprints.rst:108
msgid "Blueprints however can also be mounted at different locations::"
msgstr ""
"Sin embargo, los blueprints también se pueden montar en diferentes "
"lugares::"

#: ../../blueprints.rst:112
msgid "And sure enough, these are the generated rules::"
msgstr "Y efectivamente, estas son las reglas generadas::"

#: ../../blueprints.rst:119
msgid ""
"On top of that you can register blueprints multiple times though not "
"every blueprint might respond properly to that.  In fact it depends on "
"how the blueprint is implemented if it can be mounted more than once."
msgstr ""
"Además, puede registrar los blueprints varias veces, aunque no todos los "
"blueprint pueden responder adecuadamente a ello. De hecho, depende de "
"cómo se implemente el blueprint si se puede montar más de una vez."

#: ../../blueprints.rst:124
msgid "Nesting Blueprints"
msgstr "Anidando blueprints"

#: ../../blueprints.rst:126
msgid "It is possible to register a blueprint on another blueprint."
msgstr "Es posible registrar un blueprints dentro de otro blueprint."

#: ../../blueprints.rst:135
msgid ""
"The child blueprint will gain the parent's name as a prefix to its name, "
"and child URLs will be prefixed with the parent's URL prefix."
msgstr ""
"El blueprint hijo obtendrá el nombre del padre como prefijo de su "
"nombre, y las URLs hijas llevarán el prefijo de la URL del padre."

#: ../../blueprints.rst:143
msgid ""
"Blueprint-specific before request functions, etc. registered with the "
"parent will trigger for the child. If a child does not have an error "
"handler that can handle a given exception, the parent's will be tried."
msgstr ""
"Las funciones específicas del blueprint antes de la solicitud, etc. "
"registradas con el padre se activarán para el hijo. Si un hijo no tiene "
"un manejador de errores que pueda manejar una excepción dada, se "
"intentará el del padre."

#: ../../blueprints.rst:149
msgid "Blueprint Resources"
msgstr "Recursos de blueprints"

#: ../../blueprints.rst:151
msgid ""
"Blueprints can provide resources as well.  Sometimes you might want to "
"introduce a blueprint only for the resources it provides."
msgstr ""
"Los blueprints también pueden proporcionar recursos. A veces puede "
"querer introducir un blueprint sólo por los recursos que proporciona."

#: ../../blueprints.rst:155
msgid "Blueprint Resource Folder"
msgstr "Carpeta de recursos Blueprint"

#: ../../blueprints.rst:157
msgid ""
"Like for regular applications, blueprints are considered to be contained "
"in a folder.  While multiple blueprints can originate from the same "
"folder, it does not have to be the case and it's usually not recommended."
msgstr ""
"Al igual que para las aplicaciones normales, se considera que los "
"blueprints están contenidos en una carpeta. Aunque varios blueprints "
"pueden originarse en la misma carpeta, no tiene por qué ser así y no "
"suele ser recomendable."

#: ../../blueprints.rst:161
msgid ""
"The folder is inferred from the second argument to :class:`Blueprint` "
"which is usually `__name__`.  This argument specifies what logical "
"Python module or package corresponds to the blueprint.  If it points to "
"an actual Python package that package (which is a folder on the "
"filesystem) is the resource folder.  If it's a module, the package the "
"module is contained in will be the resource folder.  You can access the :"
"attr:`Blueprint.root_path` property to see what the resource folder is::"
msgstr ""
"La carpeta se infiere del segundo argumento de :class:`Blueprint` que "
"suele ser `__name__`.  Este argumento especifica qué módulo o paquete "
"lógico de Python corresponde al blueprint. Si apunta a un paquete real "
"de Python ese paquete (que es una carpeta en el sistema de archivos) es "
"la carpeta de recursos. Si es un módulo, el paquete que contiene el "
"módulo será la carpeta de recursos. Puedes acceder a la propiedad :attr:"
"`Blueprint.root_path` para ver cuál es la carpeta de recursos::"

#: ../../blueprints.rst:172
msgid ""
"To quickly open sources from this folder you can use the :meth:"
"`~Blueprint.open_resource` function::"
msgstr ""
"Para abrir rápidamente las fuentes de esta carpeta puedes utilizar la "
"función :meth:`~Blueprint.open_resource`::"

#: ../../blueprints.rst:179
msgid "Static Files"
msgstr "Archivos estáticos"

#: ../../blueprints.rst:181
msgid ""
"A blueprint can expose a folder with static files by providing the path "
"to the folder on the filesystem with the ``static_folder`` argument. It "
"is either an absolute path or relative to the blueprint's location::"
msgstr ""
"Un blueprint puede exponer una carpeta con archivos estáticos "
"proporcionando la ruta a la carpeta en el sistema de archivos con el "
"argumento ``carpeta_estática``. Es una ruta absoluta o relativa a la "
"ubicación del blueprint::"

#: ../../blueprints.rst:187
msgid ""
"By default the rightmost part of the path is where it is exposed on the "
"web. This can be changed with the ``static_url_path`` argument. Because "
"the folder is called ``static`` here it will be available at the "
"``url_prefix`` of the blueprint + ``/static``. If the blueprint has the "
"prefix ``/admin``, the static URL will be ``/admin/static``."
msgstr ""
"Por defecto, la parte más a la derecha de la ruta es donde se expone en "
"la web. Esto puede cambiarse con el argumento ``static_url_path``. Como "
"la carpeta se llama ``static`` aquí estará disponible en el "
"``url_prefix`` del blueprint + ``/static``. Si el blueprint tiene el "
"prefijo ``/admin``, la URL estática será ``/admin/static``."

#: ../../blueprints.rst:193
msgid ""
"The endpoint is named ``blueprint_name.static``. You can generate URLs "
"to it with :func:`url_for` like you would with the static folder of the "
"application::"
msgstr ""
"El endpoint se llama ``nombre_blueprint.static``. Puedes generar URLs "
"hacia él con :func:`url_for` como lo harías con la carpeta static de la "
"aplicación::"

#: ../../blueprints.rst:199
msgid ""
"However, if the blueprint does not have a ``url_prefix``, it is not "
"possible to access the blueprint's static folder. This is because the "
"URL would be ``/static`` in this case, and the application's ``/static`` "
"route takes precedence. Unlike template folders, blueprint static "
"folders are not searched if the file does not exist in the application "
"static folder."
msgstr ""
"Sin embargo, si el blueprint no tiene un ``url_prefix``, no es posible "
"acceder a la carpeta estática del blueprint. Esto se debe a que la URL "
"sería ``/static`` en este caso, y la ruta ``/static`` de la aplicación "
"tiene prioridad. A diferencia de las carpetas de plantillas, las "
"carpetas estáticas de los blueprints no se buscan si el archivo no "
"existe en la carpeta estática de la aplicación."

#: ../../blueprints.rst:207
msgid "Templates"
msgstr "Plantillas"

#: ../../blueprints.rst:209
msgid ""
"If you want the blueprint to expose templates you can do that by "
"providing the `template_folder` parameter to the :class:`Blueprint` "
"constructor::"
msgstr ""
"Si quieres que el blueprint exponga plantillas puedes hacerlo "
"proporcionando el parámetro `template_folder` al constructor :class:"
"`Blueprint`::"

#: ../../blueprints.rst:214
msgid ""
"For static files, the path can be absolute or relative to the blueprint "
"resource folder."
msgstr ""
"Para los archivos estáticos, la ruta puede ser absoluta o relativa a la "
"carpeta de recursos del blueprint."

#: ../../blueprints.rst:217
msgid ""
"The template folder is added to the search path of templates but with a "
"lower priority than the actual application's template folder. That way "
"you can easily override templates that a blueprint provides in the "
"actual application. This also means that if you don't want a blueprint "
"template to be accidentally overridden, make sure that no other "
"blueprint or actual application template has the same relative path. "
"When multiple blueprints provide the same relative template path the "
"first blueprint registered takes precedence over the others."
msgstr ""
"La carpeta de plantillas se añade a la ruta de búsqueda de plantillas, "
"pero con una prioridad menor que la carpeta de plantillas de la "
"aplicación real. De este modo, puede anular fácilmente las plantillas "
"que un blueprint proporciona en la aplicación real. Esto también "
"significa que si no quieres que una plantilla de blueprint sea anulada "
"accidentalmente, asegúrate de que ningún otro blueprint o plantilla de "
"la aplicación real tenga la misma ruta relativa. Cuando varios "
"blueprints proporcionan la misma ruta relativa de la plantilla, el "
"primer blueprint registrado tiene prioridad sobre los demás."

#: ../../blueprints.rst:226
msgid ""
"So if you have a blueprint in the folder ``yourapplication/admin`` and "
"you want to render the template ``'admin/index.html'`` and you have "
"provided ``templates`` as a `template_folder` you will have to create a "
"file like this: :file:`yourapplication/admin/templates/admin/index."
"html`. The reason for the extra ``admin`` folder is to avoid getting our "
"template overridden by a template named ``index.html`` in the actual "
"application template folder."
msgstr ""
"Así que si tienes un blueprint en la carpeta ``yourapplication/admin`` y "
"quieres renderizar la plantilla ``'admin/index.html`` y has "
"proporcionado ``templates`` como `carpeta_de_plantillas` tendrás que "
"crear un archivo como este: :file:`yourapplication/admin/templates/admin/"
"index.html`. La razón de la carpeta extra ``admin`` es para evitar que "
"nuestra plantilla sea anulada por una plantilla llamada ``index.html`` "
"en la carpeta de plantillas de la aplicación."

#: ../../blueprints.rst:234
msgid ""
"To further reiterate this: if you have a blueprint named ``admin`` and "
"you want to render a template called :file:`index.html` which is "
"specific to this blueprint, the best idea is to lay out your templates "
"like this::"
msgstr ""
"Para reiterar esto: Si tienes un blueprint llamado ``admin`` y quieres "
"renderizar una plantilla llamada :file:`index.html` que es específica "
"para este blueprint, la mejor idea es diseñar tus plantillas así::"

#: ../../blueprints.rst:246
msgid ""
"And then when you want to render the template, use :file:`admin/index."
"html` as the name to look up the template by.  If you encounter problems "
"loading the correct templates enable the ``EXPLAIN_TEMPLATE_LOADING`` "
"config variable which will instruct Flask to print out the steps it goes "
"through to locate templates on every ``render_template`` call."
msgstr ""
"Y luego, cuando quieras renderizar la plantilla, utiliza :file:`admin/"
"index.html` como nombre para buscar la plantilla.  Si tienes problemas "
"para cargar las plantillas correctas, activa la variable de "
"configuración ``EXPLAIN_TEMPLATE_LOADING``, que indicará a Flask que "
"imprima los pasos que sigue para localizar las plantillas en cada "
"llamada a ``render_template``."

#: ../../blueprints.rst:253
msgid "Building URLs"
msgstr "Construcción de URLs"

#: ../../blueprints.rst:255
msgid ""
"If you want to link from one page to another you can use the :func:"
"`url_for` function just like you normally would do just that you prefix "
"the URL endpoint with the name of the blueprint and a dot (``.``)::"
msgstr ""
"Si quieres enlazar de una página a otra puedes utilizar la función :func:"
"`url_for` como lo harías normalmente sólo que antepones al punto final "
"de la URL el nombre del blueprint y un punto (``.``)::"

#: ../../blueprints.rst:261
msgid ""
"Additionally if you are in a view function of a blueprint or a rendered "
"template and you want to link to another endpoint of the same blueprint, "
"you can use relative redirects by prefixing the endpoint with a dot "
"only::"
msgstr ""
"Además, si estás en una función de vista de un blueprint o una plantilla "
"renderizada y quieres enlazar con otro punto final del mismo blueprint, "
"puedes utilizar redirecciones relativas anteponiendo al punto final sólo "
"un punto::"

#: ../../blueprints.rst:267
msgid ""
"This will link to ``admin.index`` for instance in case the current "
"request was dispatched to any other admin blueprint endpoint."
msgstr ""
"Esto enlazará con ``admin.index``, por ejemplo, en caso de que la "
"solicitud actual haya sido enviada a cualquier otro punto final del "
"blueprint de administración."

#: ../../blueprints.rst:272
msgid "Blueprint Error Handlers"
msgstr "Manejadores de errores de blueprints"

#: ../../blueprints.rst:274
msgid ""
"Blueprints support the ``errorhandler`` decorator just like the :class:"
"`Flask` application object, so it is easy to make Blueprint-specific "
"custom error pages."
msgstr ""
"Los blueprints soportan el decorador ``errorhandler`` al igual que el "
"objeto de aplicación :class:`Flask`, por lo que es fácil hacer páginas "
"de error personalizadas específicas para Blueprint."

#: ../../blueprints.rst:278
msgid "Here is an example for a \"404 Page Not Found\" exception::"
msgstr ""
"Este es un ejemplo para una excepción \"404 Página no encontrada\"::"

#: ../../blueprints.rst:284
msgid ""
"Most errorhandlers will simply work as expected; however, there is a "
"caveat concerning handlers for 404 and 405 exceptions.  These "
"errorhandlers are only invoked from an appropriate ``raise`` statement "
"or a call to ``abort`` in another of the blueprint's view functions; "
"they are not invoked by, e.g., an invalid URL access.  This is because "
"the blueprint does not \"own\" a certain URL space, so the application "
"instance has no way of knowing which blueprint error handler it should "
"run if given an invalid URL.  If you would like to execute different "
"handling strategies for these errors based on URL prefixes, they may be "
"defined at the application level using the ``request`` proxy object::"
msgstr ""
"La mayoría de los manejadores de error funcionarán simplemente como se "
"espera; sin embargo, hay una advertencia sobre los manejadores para las "
"excepciones 404 y 405. Estos manejadores de error sólo se invocan desde "
"una sentencia ``raise`` apropiada o una llamada a ``abort`` en otra de "
"las funciones de vista del blueprint; no son invocados por, por ejemplo, "
"un acceso a una URL no válida. Esto se debe a que el blueprint no es "
"\"dueño\" de un determinado espacio URL, por lo que la instancia de la "
"aplicación no tiene forma de saber qué manejador de errores del "
"blueprint debe ejecutar si se le da una URL inválida. Si quieres "
"ejecutar diferentes estrategias de manejo para estos errores basados en "
"prefijos de URL, pueden ser definidos a nivel de aplicación usando el "
"objeto proxy ``request``::"

#: ../../blueprints.rst:302
msgid "See :doc:`/errorhandling`."
msgstr "Véase :doc:`/errorhandling`."
